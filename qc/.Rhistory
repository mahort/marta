toupper(verd)-> verd
verd
read.table("sppErrors.verdict",header=T,sep="\t") -> verd
verd
toupper(verd[,1]) -> verd[,1]
verd
barplot(table(verd))
barplot(table(verd)/nrow(verd))
read.table("sppErrors.verdict",header=T,sep="\t") -> verd
toupper(verd[,1]) -> verd[,1]
barplot(table(verd)/nrow(verd))
barplot(table(verd)/nrow(verd))
read.table("sppErrors.verdict",header=T,sep="\t") -> verd
toupper(verd[,1]) -> verd[,1]
barplot(table(verd)/nrow(verd))
pie(table(verd))
read.table("sppErrors.verdict",header=T,sep="\t") -> verd
toupper(verd[,1]) -> verd[,1]
pie(table(verd))
rm(list=ls())
orderFactors <- function(reads){#
#
	levelIndex <- pmatch("level",colnames(reads));#
	taxonIndex <- pmatch("taxon",colnames(reads));#
#
	reads[which(reads[,taxonIndex]=="Uncertain"),levelIndex] <- "Uncertain";#
	reads[which(reads[,taxonIndex]=="Filtered"),levelIndex] <- "Filtered";#
#
	newOrder <- numeric(nrow(reads));#
	reads<- cbind(reads,newOrder);#
	reads[which(reads[,levelIndex]=="Uncertain"),ncol(reads)] <- 1;#
	reads[which(reads[,levelIndex]=="Filtered"),ncol(reads)] <- 2;#
	#
	reads[which(reads[,levelIndex]=="SUPERKINGDOM"),ncol(reads)] <- 3;#
	reads[which(reads[,levelIndex]=="KINGDOM"),ncol(reads)] <- 4;#
	reads[which(reads[,levelIndex]=="PHYLUM"),ncol(reads)] <- 5;#
	reads[which(reads[,levelIndex]=="CLASS"),ncol(reads)] <- 6;#
	reads[which(reads[,levelIndex]=="ORDER"),ncol(reads)] <- 7;#
	reads[which(reads[,levelIndex]=="FAMILY"),ncol(reads)] <- 8;#
	reads[which(reads[,levelIndex]=="GENUS"),ncol(reads)] <- 9;#
	reads[which(reads[,levelIndex]=="SPECIES"),ncol(reads)] <- 10;#
#
	print(paste("no non-missing arguments probably mean that the levels aren't found in this dataset."));#
	newFactor <- with(reads,reorder(as.factor(level),reads[,ncol(reads)])); # last arg was newOrder;#
	reads[,levelIndex] <- newFactor;#
#
	return(reads);#
}#
#
corpus <- read.table("rdp_download_5172seqs.tsv",as.is=T,sep="\t",header=T);#
corpus <- corpus[,-3]; # don't need the sequence here!#
qcmin <- read.table("qc.minscore",header=F,as.is=T,sep="\t");#
#qc99 <- read.table("qc.99",header=F,as.is=T,sep="\t");#
#qc97 <- read.table("qc.97",header=F,as.is=T,sep="\t");#
#qc95 <- read.table("qc.95",header=F,as.is=T,sep="\t");#
#
qcmin <- qcmin[,c(1,4,5,7,8,9,10,11,12,13)];#
#qc99 <- qc99[,c(1,4,5,7,8,9,10,11,12,13)];#
#qc97 <- qc97[,c(1,4,5,7,8,9,10,11,12,13)];#
#
colnames(qcmin) <- c('id','level','taxon','score','topscore','% ident','cov','full','votesfor','votestotal');#
#type <- append(rep("min",nrow(qcmin)),append(rep("99",nrow(qc99)),rep("97",nrow(qc97))));#
#results <- cbind(rbind(qcmin,qc99,qc97),type);#
results <- merge(corpus,qcmin,by="id");#
results <- orderFactors( as.data.frame(results));#
#
mismatches <- character(nrow(results));#
indices <- c()#
for( i in 1:nrow(results )){#
	if( results[i,"Taxa"] != results[i,"taxon"] ){#
		indices <- append(indices,i);#
		mismatches[i] <- paste("MISMATCH_",results[i,"level"],sep="");#
#
	} else {#
		mismatches[i] <- paste("MATCH_",results[i,"level"],sep="");#
	}#
}#
#
errors <- results[indices,];#
#
print(paste("there are: ",nrow(errors)," incongruencies."));#
filtered <- which(!is.na(pmatch(errors[,"taxon"],"Filtered",dup=T)));#
uncertain <- which(!is.na(pmatch(errors[,"taxon"],"Uncertain",dup=T)));#
#
print(paste("there are:",nrow(errors)," errors to review."));#
print(paste("there are: ",length(filtered)," filtered reads and", length(uncertain),"uncertain reads"));#
print(paste("without review: ", (1-nrow(errors)/nrow(results)),"% of the assignments agree with RDP-II."));#
#
myBarPlot <- barplot(table(errors$level)/nrow(errors),col="cornflowerblue");#
#labels <- toupper(names(table(errors$level)));#
#mtext(labels,at=colMeans(myBarPlot),side=1,line=1,cex=0.75);#
title("Resolution of Errors");#
#
print("recall that 35 of the 41 Uncertain reads are picked up (false negatives) when we permit null genera from the taxonomy database.");#
print("review the filtered reads.");#
print("of the remaining reads::::");
rm(list=ls())
ls()
#
R version 2.7.1 (2008-06-23)#
Copyright (C) 2008 The R Foundation for Statistical Computing#
ISBN 3-900051-07-0#
#
R is free software and comes with ABSOLUTELY NO WARRANTY.#
You are welcome to redistribute it under certain conditions.#
Type 'license()' or 'licence()' for distribution details.#
#
  Natural language support but running in an English locale#
#
R is a collaborative project with many contributors.#
Type 'contributors()' for more information and#
'citation()' on how to cite R or R packages in publications.#
#
Type 'demo()' for some demos, 'help()' for on-line help, or#
'help.start()' for an HTML browser interface to help.#
Type 'q()' to quit R.#
#
[Workspace restored from /Users/matt/.RData]#
#
> setwd("~/work/java/marta/qc/")#
> getwd()#
[1] "/Users/matt/work/java/marta/qc"#
> #
> corpus <- read.table("rdp_download_5172seqs.tsv",as.is=T,sep="\t",header=T);#
> #
> qcmin <- read.table("qc.minscore",header=F,as.is=T,sep="\t");#
> qc99 <- read.table("qc.99",header=F,as.is=T,sep="\t");#
> qc97 <- read.table("qc.97",header=F,as.is=T,sep="\t");#
> #qc95 <- read.table("qc.95",header=F,as.is=T,sep="\t");#
> #
> qcmin <- qcmin[,c(1,4,5,8,9,10,11)];#
> qc99 <- qc99[,c(1,4,5,8,9,10,11)];#
> qc97 <- qc97[,c(1,4,5,8,9,10,11)];#
> #
> colnames(qc99) <- colnames(qcmin) <- colnames(qc97) <- c('id','level','taxon','% ident','full','votesfor','votestotal');#
> type <- append(rep("min",nrow(qcmin)),append(rep("99",nrow(qc99)),rep("97",nrow(qc97))));#
> results <- cbind(rbind(qcmin,qc99,qc97),type);#
> results <- merge(corpus,results,by="id");#
> #
> dim(results)#
[1] 15516    10#
> colnames(results)#
 [1] "id"         "Taxa"       "Sequence"   "level"      "taxon"      "% ident"    "full"       "votesfor"   "votestotal" "type"      #
> levels(results$type)#
[1] "97"  "99"  "min"#
> barplot(results$level,results$type)#
Error in -0.01 * height : non-numeric argument to binary operator#
In addition: Warning messages:#
1: In mean.default(width) :#
  argument is not numeric or logical: returning NA#
2: In Ops.factor(width, 2) : / not meaningful for factors#
3: In Ops.factor(space, width) : + not meaningful for factors#
> barplot(table(results$level,results$type))#
> barplot(table(results$level,results$type),beside=T)#
> barplot(table(results$type,results$level),beside=T)#
> barplot(table(qc99$level))#
> orderFactors <- function(reads){#
+ #
+ 	levelIndex <- pmatch("level",colnames(reads));#
+ 	taxonIndex <- pmatch("taxon",colnames(reads));#
+ #
+ 	reads[which(reads[,taxonIndex]=="Uncertain"),levelIndex] <- "Uncertain";#
+ 	reads[which(reads[,taxonIndex]=="Filtered"),levelIndex] <- "Filtered";#
+ #
+ 	newOrder <- numeric(nrow(reads));#
+ 	reads<- cbind(reads,newOrder);#
+ 	reads[which(reads[,levelIndex]=="Uncertain"),ncol(reads)] <- 1;#
+ 	reads[which(reads[,levelIndex]=="Filtered"),ncol(reads)] <- 2;#
+ 	#
+ 	reads[which(reads[,levelIndex]=="SUPERKINGDOM"),ncol(reads)] <- 3;#
+ 	reads[which(reads[,levelIndex]=="KINGDOM"),ncol(reads)] <- 4;#
+ 	reads[which(reads[,levelIndex]=="PHYLUM"),ncol(reads)] <- 5;#
+ 	reads[which(reads[,levelIndex]=="CLASS"),ncol(reads)] <- 6;#
+ 	reads[which(reads[,levelIndex]=="ORDER"),ncol(reads)] <- 7;#
+ 	reads[which(reads[,levelIndex]=="FAMILY"),ncol(reads)] <- 8;#
+ 	reads[which(reads[,levelIndex]=="GENUS"),ncol(reads)] <- 9;#
+ 	reads[which(reads[,levelIndex]=="SPECIES"),ncol(reads)] <- 10;#
+ #
+ 	print(paste("no non-missing arguments probably mean that the levels aren't found in this dataset."));#
+ 	newFactor <- with(reads,reorder(as.factor(level),reads[,ncol(reads)])); # last arg was newOrder;#
+ 	reads[,levelIndex] <- newFactor;#
+ #
+ 	return(reads);#
+ }#
> orderFactors(qc99) -> qcOut#
[1] "no non-missing arguments probably mean that the levels aren't found in this dataset."#
Warning messages:#
1: In max(i) : no non-missing arguments to max; returning -Inf#
2: In max(i) : no non-missing arguments to max; returning -Inf#
3: In max(i) : no non-missing arguments to max; returning -Inf#
4: In max(i) : no non-missing arguments to max; returning -Inf#
> table(qcOut$level)#
#
Uncertain  Filtered     ORDER    FAMILY     GENUS   SPECIES #
       46        31         5         4       146      4940 #
> barplot(table(qcOut$level))#
> #
> corpus <- read.table("rdp_download_5172seqs.tsv",as.is=T,sep="\t",header=T);#
> #
> qcmin <- read.table("qc.minscore",header=F,as.is=T,sep="\t");#
> #qc99 <- read.table("qc.99",header=F,as.is=T,sep="\t");#
> #qc97 <- read.table("qc.97",header=F,as.is=T,sep="\t");#
> #qc95 <- read.table("qc.95",header=F,as.is=T,sep="\t");#
> #
> qcmin <- qcmin[,c(1,4,5,8,9,10,11)];#
> #qc99 <- qc99[,c(1,4,5,8,9,10,11)];#
> #qc97 <- qc97[,c(1,4,5,8,9,10,11)];#
> #
> colnames(qcmin) <- c('id','level','taxon','% ident','full','votesfor','votestotal');#
> #type <- append(rep("min",nrow(qcmin)),append(rep("99",nrow(qc99)),rep("97",nrow(qc97))));#
> #results <- cbind(rbind(qcmin,qc99,qc97),type);#
> results <- merge(corpus,qcmin,by="id");#
> #
> indices <- c()#
> for( i in 1:nrow(results )){#
+ 	if( results[i,"Taxa"] != results[i,"taxon"] ){#
+ 		indices <- append(indices,i);#
+ 	}#
+ }#
> #
> errors <- as.data.frame(results[indices,]);#
> errors <- orderFactors( errors );#
[1] "no non-missing arguments probably mean that the levels aren't found in this dataset."#
Warning messages:#
1: In max(i) : no non-missing arguments to max; returning -Inf#
2: In max(i) : no non-missing arguments to max; returning -Inf#
3: In max(i) : no non-missing arguments to max; returning -Inf#
4: In max(i) : no non-missing arguments to max; returning -Inf#
> #
> print(paste("there are: ",nrow(errors)," incongruencies."));#
[1] "there are:  389  incongruencies."#
> filtered <- which(!is.na(pmatch(errors[,"taxon"],"Filtered",dup=T)));#
> uncertain <- which(!is.na(pmatch(errors[,"taxon"],"Uncertain",dup=T)));#
> #
> print(paste("there are: ",length(filtered)," filtered reads and", length(uncertain),"uncertain reads"));#
[1] "there are:  31  filtered reads and 50 uncertain reads"#
> #
> myBarPlot <- barplot(ftable(errors$level)/nrow(errors),col=c("cornflowerblue"));#
Error in aperm(x, c(rev(row.vars), rev(col.vars))) : #
  'perm' is of wrong length#
> labels <- toupper(names(table(reads$level)));#
Error in table(reads$level) : object "reads" not found#
> mtext(labels,at=colMeans(lab),side=1,line=1,cex=0.75);#
Error in inherits(x, "data.frame") : object "lab" not found#
> title("Resolution of Errors");#
Error in title("Resolution of Errors") : plot.new has not been called yet#
> #
> myBarPlot <- barplot(ftable(errors$level)/nrow(errors),col="cornflowerblue");#
Error in aperm(x, c(rev(row.vars), rev(col.vars))) : #
  'perm' is of wrong length#
> labels <- toupper(names(table(errors$level)));#
> mtext(labels,at=colMeans(lab),side=1,line=1,cex=0.75);#
Error in inherits(x, "data.frame") : object "lab" not found#
> title("Resolution of Errors");#
Error in title("Resolution of Errors") : plot.new has not been called yet#
> errors$level#
  [1] SPECIES   GENUS     GENUS     GENUS     Uncertain Uncertain GENUS     GENUS     Uncertain GENUS     SPECIES   GENUS     SPECIES   Uncertain GENUS     Filtered  GENUS     ORDER     Uncertain#
 [20] GENUS     Filtered  Filtered  Filtered  SPECIES   GENUS     GENUS     GENUS     GENUS     Uncertain SPECIES   Uncertain GENUS     SPECIES   GENUS     Uncertain SPECIES   Uncertain Filtered #
 [39] GENUS     GENUS     GENUS     Uncertain GENUS     Filtered  SPECIES   SPECIES   Filtered  GENUS     GENUS     GENUS     SPECIES   Filtered  SPECIES   Uncertain GENUS     GENUS     SPECIES  #
 [58] Uncertain GENUS     Filtered  GENUS     SPECIES   GENUS     Filtered  GENUS     GENUS     GENUS     GENUS     SPECIES   SPECIES   SPECIES   GENUS     GENUS     Filtered  Uncertain SPECIES  #
 [77] Uncertain SPECIES   GENUS     GENUS     SPECIES   Uncertain Uncertain Filtered  GENUS     GENUS     SPECIES   GENUS     ORDER     GENUS     GENUS     SPECIES   Uncertain GENUS     SPECIES  #
 [96] GENUS     SPECIES   GENUS     Filtered  Uncertain SPECIES   GENUS     SPECIES   SPECIES   Filtered  GENUS     Uncertain Filtered  Filtered  FAMILY    GENUS     SPECIES   SPECIES   SPECIES  #
[115] SPECIES   SPECIES   SPECIES   SPECIES   Uncertain SPECIES   SPECIES   SPECIES   GENUS     Uncertain Uncertain Uncertain GENUS     GENUS     SPECIES   GENUS     GENUS     GENUS     SPECIES  #
[134] SPECIES   GENUS     Filtered  SPECIES   SPECIES   SPECIES   SPECIES   GENUS     SPECIES   SPECIES   SPECIES   SPECIES   SPECIES   GENUS     ORDER     SPECIES   GENUS     SPECIES   SPECIES  #
[153] SPECIES   SPECIES   SPECIES   SPECIES   GENUS     SPECIES   SPECIES   GENUS     GENUS     SPECIES   GENUS     SPECIES   GENUS     GENUS     GENUS     GENUS     SPECIES   SPECIES   SPECIES  #
[172] SPECIES   SPECIES   SPECIES   SPECIES   GENUS     Uncertain GENUS     GENUS     SPECIES   GENUS     SPECIES   SPECIES   SPECIES   GENUS     SPECIES   SPECIES   SPECIES   SPECIES   GENUS    #
[191] SPECIES   SPECIES   SPECIES   SPECIES   SPECIES   Uncertain GENUS     GENUS     GENUS     FAMILY    GENUS     SPECIES   GENUS     GENUS     SPECIES   Uncertain SPECIES   GENUS     SPECIES  #
[210] GENUS     GENUS     GENUS     SPECIES   Uncertain Filtered  FAMILY    GENUS     GENUS     GENUS     SPECIES   SPECIES   SPECIES   SPECIES   ORDER     GENUS     GENUS     GENUS     ORDER    #
[229] GENUS     SPECIES   GENUS     GENUS     Uncertain Uncertain SPECIES   SPECIES   SPECIES   SPECIES   GENUS     Uncertain Uncertain Uncertain GENUS     Uncertain GENUS     GENUS     Filtered #
[248] SPECIES   SPECIES   SPECIES   SPECIES   GENUS     SPECIES   SPECIES   Uncertain SPECIES   Filtered  Filtered  Filtered  GENUS     SPECIES   GENUS     SPECIES   SPECIES   FAMILY    SPECIES  #
[267] SPECIES   GENUS     GENUS     GENUS     GENUS     SPECIES   SPECIES   Uncertain SPECIES   SPECIES   SPECIES   SPECIES   Uncertain Uncertain Uncertain Uncertain Uncertain Filtered  Filtered #
[286] Filtered  Uncertain Filtered  SPECIES   Filtered  Filtered  GENUS     SPECIES   SPECIES   GENUS     SPECIES   Uncertain Filtered  SPECIES   SPECIES   Uncertain Uncertain SPECIES   SPECIES  #
[305] SPECIES   SPECIES   GENUS     SPECIES   SPECIES   GENUS     GENUS     SPECIES   GENUS     SPECIES   SPECIES   SPECIES   SPECIES   GENUS     SPECIES   GENUS     SPECIES   GENUS     Uncertain#
[324] GENUS     GENUS     SPECIES   SPECIES   GENUS     GENUS     SPECIES   Filtered  SPECIES   GENUS     GENUS     SPECIES   SPECIES   SPECIES   SPECIES   SPECIES   SPECIES   SPECIES   Uncertain#
[343] GENUS     SPECIES   Filtered  GENUS     GENUS     GENUS     SPECIES   SPECIES   SPECIES   GENUS     GENUS     GENUS     GENUS     GENUS     GENUS     GENUS     GENUS     SPECIES   SPECIES  #
[362] GENUS     Uncertain SPECIES   SPECIES   Uncertain GENUS     SPECIES   SPECIES   GENUS     GENUS     Uncertain GENUS     GENUS     GENUS     GENUS     SPECIES   Uncertain GENUS     GENUS    #
[381] GENUS     SPECIES   GENUS     SPECIES   GENUS     SPECIES   GENUS     GENUS     GENUS    #
attr(,"scores")#
   FAMILY  Filtered     GENUS     ORDER   SPECIES Uncertain #
        8         2         9         7        10         1 #
Levels: Uncertain Filtered ORDER FAMILY GENUS SPECIES#
> table(errors$level)#
#
Uncertain  Filtered     ORDER    FAMILY     GENUS   SPECIES #
       50        31         5         4       144       155 #
> ftable(errors$level)#
Error in aperm(x, c(rev(row.vars), rev(col.vars))) : #
  'perm' is of wrong length#
> #
> myBarPlot <- barplot(table(errors$level)/nrow(errors),col="cornflowerblue");#
> labels <- toupper(names(table(errors$level)));#
> mtext(labels,at=colMeans(lab),side=1,line=1,cex=0.75);#
Error in inherits(x, "data.frame") : object "lab" not found#
> title("Resolution of Errors");#
> myBarPlot <- barplot(table(errors$level)/nrow(errors),col="cornflowerblue");#
> labels <- toupper(names(table(errors$level)));#
> mtext(labels,at=colMeans(myBarPlot),side=1,line=1,cex=0.75);#
> title("Resolution of Errors");#
> myBarPlot <- barplot(table(errors$level)/nrow(errors),col="cornflowerblue");#
> labels <- toupper(names(table(errors$level)));#
> mtext(labels,at=colMeans(myBarPlot),side=1,line=1,cex=0.75);#
> title("Resolution of Errors");#
> #
> myBarPlot <- barplot(table(errors$level)/nrow(errors),col="cornflowerblue");#
> #labels <- toupper(names(table(errors$level)));#
> #mtext(labels,at=colMeans(myBarPlot),side=1,line=1,cex=0.75);#
> title("Resolution of Errors");#
> #
> print(paste("there are: ",length(filtered)," filtered reads and", length(uncertain),"uncertain reads"));#
[1] "there are:  31  filtered reads and 50 uncertain reads"#
> print(paste("without review there are: ", (1-nrow(errors)/nrow(results))," correct assignments."));#
[1] "without review there are:  0.924787316318639  correct assignments."#
> #
> print(paste("there are:",nrow(errors)," errors to review."));#
[1] "there are: 389  errors to review."#
> #
> table(errors$level)#
#
Uncertain  Filtered     ORDER    FAMILY     GENUS   SPECIES #
       50        31         5         4       144       155 #
> which(errors$level=="ORDER")#
[1]  18  89 148 224 228#
> errors[which(errors$level=="ORDER"),]#
             id                             Taxa#
274  S000004356                Nocardiopsis alba#
1255 S000088221              Anaerostipes caccae#
2004 S000364384       Corynebacterium glutamicum#
2902 S000413552 Sporolactobacillus laevolacticus#
2921 S000413734                Rhodobium marinum#
equence#
274                         cgctggcggcgtgcttaacacatgcaagtcgagcggtaaggcccttcggggtacacgagcggcgaacgggtgagtaacacgtgagcaacctgcccctgactctgggataagcggtggaaacgccgtctaataccggatacgaccttccgcctcatggtggagggtggaaagttttttcggtcagggatgggctcgcggcctatcagcttgttggtggggtaacggcctaccaaggcgattacgggtagccggcctgagagggcgaccggccacactgggactgagacacggcccagactcctgcgggaggcagcagtggggaatattgcgcaatgggcgaaagcctgacgcagcgacgccgcgtgggggatgacggccttcgggttgtaaacctcttttaccaccaacgcaggctccgggttctctcggggttgacggtaggtggggaataaggaccggctaactacgtgccagcagccgcggtaatacgtagggtccgagcgttgtccggaattattgggcgtaaagagctcgtaggcggcgtgtcgcgtctgctgtgaaagaccggggcttaactccggttctgcagtggatacgggcatgctagaggtaggtaggggagactggaattcctggtgtagcggtgaaatgcgcagatatcaggaggaacaccggtggcgaaggcgggtctctgggccttacctgacgctgaggagcgaaagcatggggagcgaacaggattagataccctggtagtccatgccgtaaacgttgggcgctaggtgtggggactttccacggtttccgcgccgtagctaacgcattaagcgccccgcctggggagtacggccgcaaggctaaaactcaaaggaattgacgggggcccgcacaagcggcggagcatgttgcttaattcgacgcaacgcgaagaaccttaccaaggtttgacatcacccgtggacctgtagagatacagggtcatttagttggtgggtgacaggtggtgcatggctgtcgtcagctcgtgtcgtgagatgttgggttaagtcccgcaacgagcgcaacccttgttccatgttgccagcacgtaatggtggggactcatgggagactgccggggtcaactcggaggaaggtggggacgacgtcaagtcatcatgccccttatgtcttgggctgcaaacatgctacaatggccggtacaatgggcgtgcgataccgtaaggtggagcgaatcccttaaagccggtctcagttcggattggggtctgcaactcgaccccatgaaggtggagtcgctagtaatcgcggatcagcaacgccgcggtgaatacgttcccgggccttgtacacaccgcccgtcacgtcatgaaagtcggcaacacccgaaacttgcggcctaacccttcggggagggagtgagtgaaggtggggctggcgattgggacgaagtcgtaacaa#
1255                             gcgcttaatacatgtcaagtcgaacgaagcatttaggattgaagttttcggatggatttcctatatgactgagtggcggacgggtgagtaacgcgtggggaacctgccctatacagggggataacagctggaaacggctgctaataccgcataagcgcacagaatcgcatgattcagtgtgaaaagccctggcagtataggatggtcccgcgtctgattagctggttggtgaggtaacggctcaccaaggcgacgatcagtagccggcttgagagagtgaacggccacattgggactgagacacggcccaaactcctacgggaggcagcagtggggaatattgcacaatgggggtaaaccctgatgcagcgacgccgcgtgagtgaagaagtatttcggtatgtaaagctctatcagcagggaagaaaacagacggtacctgactaagaagccccggctaactacgtgccagcagccgcggtaatacgtagggggcaagcgttatccggaattactgggtgtaaagggtgcgtaggtggcatggtaagtcagaagtgaaagcccggggcttaaccccgggactgcttttgaaactgtcatgctggagtgcaggagaggtaagcggaattcctagtgtagcggtgaaatgcgtagatattaggaggaacaccagtggcgaaggcggcttactggactgtcactgacactgatgcacgaaagcgtggggagcaaacaggattagataccctggtagtccacgccgtaaacgatgaatactaggtgtcggggccgtagaggcttcggtgccgcagcaaacgcagtaagtattccacctggggagtacgttcgcaagaatgaaactcaaaggaattgacggggacccgcacaagcggtggagcatgtggtttaattcgaagcaacgcgaagaaccttacctggtcttgacatcccaatgaccgaaccttaaccggttttttctttcgagacattggagacaggtggtgcatggttgtcgtcagctcgtgtcgtgagatgttgggttaagtcccgcaacgagcgcaacccctatctttagtagccagcatttaaggtgggcactctagagagactgccagggataacctggaggaaggtggggacgacgtcaaatcatcatgccccttatggccagggctacacacgtgctacaatggcgtaaacaaagggaagcgaagtcgtgaggcgaagcaaatcccagaaataacgtctcagttcggattgtagtctgcaactcgactacatgaagctggaatcgctagtaatcgtgaatcagaatgtcacggtgaatacgttcccgggtcttgtacacaccgcccgtcacaccatgggagtcagtaacgcccgaagtcagtgacccaaccgcaaggagggagctgccgaaggtgggaccgataactggggtgaagtcgtaacaagg#
2004                      ggcggcgtgcttaacacatgcaagtcgaacgctgaaaccggagcttgctttggtggatgagtggcgaacgggtgagtaacacgtgggtgatctgccctacactttgggataagcctgggaaactgggtctaataccgaatattcacaccaccgtaggggtggtgtggaaagccttatgcggtgtgggatgagcctgcggcctatcagcttgttggtggggtaatggcctaccaaggcgtcgacgggtagccggcctgagagggtgtacgcccacattgggactgagacacggcccagactcctacgggaggcagcagtggggaatattgcacaatgggcgcaagcctgatgcagcgaccccgcgtgggggatgaaggccttcgggttgtaaactcctttcgctagggacgaagccttatggtgacggtacctggagaagaagcacccgctaactacgtgccagcagccgcggtaatacgtagggtgcgagcgttgtcccgaattactgggcgtaaagagctcgtaggtggtttgtcgcgtcgtctttgaaatcccngggcttaacttcgggcgtgcaggcgatacgggcataacttgagtgctgtaggggagactggaattcctggtgtagcggtgaaatgcgcagatatcaggaggaacaccaatggcgaaggcaggtctctgggcagtaactgacgctgaggagcgaaagcatgggtagcgaacaggattagataccctggtagtccatgccgtaaacggtgggcgctaggtgtaggggtcttccacgacttctgtgccgcagctaacgcattaagcgccccgcctggggagtacggccgcaaggctaaaactcaaaggaattgacgggggcccgcacaagcggcggagcatgtggattaattcgatgcaacgcgaagaaccttacctgggcttgacatggaccggatcggcgtagagatacgttttcccttgtggtcggttcacaggtggtgcatggttgtcgtcagctcgtgtcgtgagatgttgggttaagtcccgcaacgagcgcaacccttgtcttatgttgccagcacattgtggtgggtactcatgagagactgccggggttaactcggaggaaggtggggatgacgtcaaatcatcatgccccttatgtccagggcttcacacatgctacaatggtcggtacagcgagttgccacaccgtgaggtggagctaatctcttaaagccggcctcagttcggattggggtctgcaactcgaccccatgaagtcggagtcgctagtaatcgcagatcagcaacgctgcggtgaatacgttcccgggccttgtacacaccgcccgtcacgtcatgaaagttggtaacacccgaagccagtggcccaaccttttaggggggagctgtcgaaggtgggatcggcgattgggacgaagtcgtaacaaggtagccgtaccgga#
2902 gacgaacgctggcggcgtgcctaatacatgcaagtcgagcgcatagaagggagcttgctccctnaagtgagcggcggatgggtgagtaacacgtgggtaacctgcctgtcagatcgggataactgtgggaaaccgcagctaataccggataatccttcgcaccgcatggtgcggagttgaaagatggtttcggccatcactgacagatgggcccgcggtgcattagttagttggcggggtaacggcccaccaagacagcgatgcatagccgacctgagagggtgatcggccacattgggactgagacacggcccaaactcctacgggaggcagcagtagggaatcttccacaatggacgaaagtctgatggagcaacgccgcgtgagcgaagaaggttttcggatcgtaaagctctgttgctggagaagaacgagtgcgagaggaaatgctcgtactgtgacggtatccagccagaaagccacggctaactacgtgccagcagccgcggtaatacgtaggtggcaagcgttgtccggaattattgggcgtaaagcgcgcgcaggcggcttcttaagtctgatgtgaaatcttgcggctcaaccgcaaacggtcattggaaactgggaagcttgagtgcagaagaggagagtagaattccacgtgtagcggtgaaatgcgtagatatgtggaggaataccagtggcgaaggcggctctctggtctgtaactgacgctgaggcgcgaaagcgtggggagcaaacaggattagataccctggtagtccacgccgtaaacgatgaatgctaggtgttagggggtccaaccccttagtgctgaagttaacacattaagcattccgcctggggagtacgaccgcaaggttgaaactcaaaggaattgacgggggcccgcacaagcagtggagcatgtggtttaattcgaagcaacgcgaagaaccttaccaggtcttgacatcctctgacaagcctagagataggccgttccccttcgggggacagagtgacaggtggtgcatggttgtcgtcagctcgtgtcgtgagatgttgggttaagtcccgcaacgagcgcaacccttgatcttagttgccagcattcagttgggcactctaaggtgactgccggtgacaaaccggaggaaggtggggatgacgtcaaatcatcatgccccttatgatctgggctacacacgtgctacaatgggtggtacaaagggcagcgaaaccgcgaggtcgagctaatcccataaagccacccccagttcggattgcaggctgcaactcgcctgcatgaagccggaattgctagtaatcgcggatcagcatgccgcggtgaatccgttcccgggccttgtacacaccgcccgtcacaccacgagagtttgtaacacccgaagtcggtgcgagaacctttatggactcagccgccgaaggtgggacaaatgattggggtgaagtcgtaacaa#
2921                                                                                               aacgaacgctggcggcaggcttaacacatgcaagtcgaacgcactcttcggagtgagtggcagacgggtgagtaacgcgtgggaatctacccagtggtacgggataacccgaggaaactcgagctaataccgtatacgcccttcgggggaaagatttattgccattggatgagcccgcgtcggattagcttgttggtggggtaacggcctaccaaggcaacgatccgtagctggtctgagaggatgatcagccacactgggactgagacacggcccagactcctacgggaggcagcagtggggaatcttggacaatgggggaaaccctgatccagccatgccgcgtgagtgaagaaggccctagggttgtaaagctctttcagcggggaagataatgacggtacccgcagaagaagccccggctaacttcgtgccagcagccgcggtaatacgaagggggctagcgttgttcggaattactgggcgtaaagcgcgcgtaggcggattgttaagtcaggggtgaaatcccagagctcaactctggaactgcctctgatactggcaatctcgagtccggaagaggttggtggaattccgagtgtagaggtgaaattcgtagatattcggaggaacaccagaggcgaaggcggccaactggtccgagactgacgctgaggcgcgaaagcgtggggagcaaacaggattagataccctggtagtccacgccgtaaacgatggatgctagccgttggtgggtatactcatcagtggcgcagctaacgcattaagcatcccgcctggggagtacggtcgcaagattaaaactcaaaggaattgacgggggcccgcacaagcggtggagcatgtggtttaattcgaagcaacgcgcagaaccttaccagctcttgacatcccgatcgcggttaccggagacggtatccttcagctaggctggatcggtgacaggtgctgcatggctgtcgtcagctcgtgtcgtgagatgttgggttaagtcccgcaacgagcgcaaccctcgcccttagttgccagcattcagttgggcactctaaggggactgccggtgataagccgagaggaaggtggggatgacgtcaagtcctcatggcccttacgggctgggctacacacgtgctacaatggcggtgacagtgggaaaatccccaaaaaccgtctcagttcggattgtcctctgcaactcgggggcatgaaggtggaatcgctagtaatcgtggatcagcatgccacggtgaatacgttcccgggccttgtacacaccgcccgtcacaccatgggagttggttctacccgaagacggtgcgctaacccgcaagggaggcagccggccacggtagggtcagcgactggggtg#
     level           taxon % ident full votesfor                                                         votestotal newOrder#
274  ORDER Actinomycetales    2896  100        1 Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:::        7#
1255 ORDER   Clostridiales    2886  100        1                   Bacteria::Firmicutes:Clostridia:Clostridiales:::        7#
2004 ORDER Actinomycetales    2894  100        1 Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:::        7#
2902 ORDER      Bacillales    2936  100        1                         Bacteria::Firmicutes:Bacilli:Bacillales:::        7#
2921 ORDER     Rhizobiales    2755  100        1        Bacteria::Proteobacteria:Alphaproteobacteria:Rhizobiales:::        7#
> errors[which(errors$level=="ORDER"),-3]#
             id                             Taxa level           taxon % ident full votesfor                                                         votestotal newOrder#
274  S000004356                Nocardiopsis alba ORDER Actinomycetales    2896  100        1 Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:::        7#
1255 S000088221              Anaerostipes caccae ORDER   Clostridiales    2886  100        1                   Bacteria::Firmicutes:Clostridia:Clostridiales:::        7#
2004 S000364384       Corynebacterium glutamicum ORDER Actinomycetales    2894  100        1 Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:::        7#
2902 S000413552 Sporolactobacillus laevolacticus ORDER      Bacillales    2936  100        1                         Bacteria::Firmicutes:Bacilli:Bacillales:::        7#
2921 S000413734                Rhodobium marinum ORDER     Rhizobiales    2755  100        1        Bacteria::Proteobacteria:Alphaproteobacteria:Rhizobiales:::        7#
> names(qcmin)#
[1] "id"         "level"      "taxon"      "% ident"    "full"       "votesfor"   "votestotal"#
> colnames(qcmin)#
[1] "id"         "level"      "taxon"      "% ident"    "full"       "votesfor"   "votestotal"#
> dim(qcmin)#
[1] 5172    7#
> qcmin <- read.table("qc.minscore",header=F,as.is=T,sep="\t");#
> #
> colnames(qcmin)#
 [1] "V1"  "V2"  "V3"  "V4"  "V5"  "V6"  "V7"  "V8"  "V9"  "V10" "V11" "V12" "V13"#
> qcmin[1:3,]#
          V1       V2     V3      V4                     V5 V6   V7   V8  V9 V10                                                                                                             V11#
1 S000537535 67475961 331697 SPECIES Chitinophaga skermanii  0 2950 2950 100   1                 Bacteria::Bacteroidetes:Sphingobacteria:Sphingobacteriales::Chitinophaga:Chitinophaga skermanii#
2 S000006685  4538867  36878 SPECIES Hymenobacter ocellatus  0 2932 2932 100   1 Bacteria::Bacteroidetes:Sphingobacteria:Sphingobacteriales:Flexibacteraceae:Hymenobacter:Hymenobacter ocellatus#
3 S000127903 11322264 108980 SPECIES Acinetobacter ursingii  0 2852 2852 100   1 Bacteria::Proteobacteria:Gammaproteobacteria:Pseudomonadales:Moraxellaceae:Acinetobacter:Acinetobacter ursingii#
  V12 V13#
1   1   1#
2   1   1#
3   3   3#
> #
> corpus <- read.table("rdp_download_5172seqs.tsv",as.is=T,sep="\t",header=T);#
> corpus <- corpus[,3]; # don't need the sequence here!#
> qcmin <- read.table("qc.minscore",header=F,as.is=T,sep="\t");#
> #qc99 <- read.table("qc.99",header=F,as.is=T,sep="\t");#
> #qc97 <- read.table("qc.97",header=F,as.is=T,sep="\t");#
> #qc95 <- read.table("qc.95",header=F,as.is=T,sep="\t");#
> #
> qcmin <- qcmin[,c(1,4,5,7,8,9,10,11,12,13)];#
> #qc99 <- qc99[,c(1,4,5,7,8,9,10,11,12,13)];#
> #qc97 <- qc97[,c(1,4,5,7,8,9,10,11,12,13)];#
> #
> colnames(qcmin) <- c('id','level','taxon','score','topscore''% ident','cov','full','votesfor','votestotal');#
Error: syntax error#
> #type <- append(rep("min",nrow(qcmin)),append(rep("99",nrow(qc99)),rep("97",nrow(qc97))));#
> #results <- cbind(rbind(qcmin,qc99,qc97),type);#
> results <- merge(corpus,qcmin,by="id");#
Error in fix.by(by.x, x) : 'by' must specify valid column(s)#
> #
> #
> corpus <- read.table("rdp_download_5172seqs.tsv",as.is=T,sep="\t",header=T);#
> corpus <- corpus[,3]; # don't need the sequence here!#
> qcmin <- read.table("qc.minscore",header=F,as.is=T,sep="\t");#
> #qc99 <- read.table("qc.99",header=F,as.is=T,sep="\t");#
> #qc97 <- read.table("qc.97",header=F,as.is=T,sep="\t");#
> #qc95 <- read.table("qc.95",header=F,as.is=T,sep="\t");#
> #
> qcmin <- qcmin[,c(1,4,5,7,8,9,10,11,12,13)];#
> #qc99 <- qc99[,c(1,4,5,7,8,9,10,11,12,13)];#
> #qc97 <- qc97[,c(1,4,5,7,8,9,10,11,12,13)];#
> #
> colnames(qcmin) <- c('id','level','taxon','score','topscore','% ident','cov','full','votesfor','votestotal');#
> #type <- append(rep("min",nrow(qcmin)),append(rep("99",nrow(qc99)),rep("97",nrow(qc97))));#
> #results <- cbind(rbind(qcmin,qc99,qc97),type);#
> results <- merge(corpus,qcmin,by="id");#
Error in fix.by(by.x, x) : 'by' must specify valid column(s)#
> colnames(corpus)#
NULL#
> corpus[1:,]#
Error: syntax error#
> corpus[1,]#
Error in corpus[1, ] : incorrect number of dimensions#
> dim(corpus)#
NULL#
> length(corpus)#
[1] 5172#
> system("ls -lt")#
total 74112#
-rw-r--r--   1 matt  matt      3141 Sep  2 22:11 compareResults.R#
-rw-r--r--   1 matt  matt   1027862 Sep  2 21:36 qc.minscore#
-rw-r--r--   1 matt  matt   1028394 Sep  2 21:36 qc.99#
-rw-r--r--   1 matt  matt   1029065 Sep  2 21:36 qc.97#
-rw-r--r--   1 matt  matt      1680 Sep  1 17:00 compareResults.R~#
-rw-r--r--   1 matt  matt    969447 Sep  1 15:30 qc.97tile2#
-rw-r--r--   1 matt  matt    969213 Sep  1 15:30 qc.97tile#
-rw-r--r--   1 matt  matt   7744192 Aug 28 15:29 rdp_download_5172seqs.tsv#
-rw-r--r--   1 matt  matt  17180198 Aug 26 16:12 rdp_download_5172seqs.gen#
-rw-r--r--   1 matt  matt   7972755 Aug 26 16:02 rdp_download_5172seqs.fa#
> system("head rdp_download_5172seqs.tsv")#
id	Taxa	Sequence#
S000537535	Chitinophaga skermanii	gctcaggatgaacgctagcggcaggcctaatacatgcaagtcgaggggcagcgcagtgtagcaatacatgggcggcgaccggcaaacgggtgcggaacacgtacgcaaccttccttcaagagtgggatagcccagggaaacttggattaataccacgtaagatagtagagcggcatcgcttcgctattatagtaccaacgcttgaagatgggcgtgcggctgattaggtagttggtgaggtaacggctcaccaagccgacgatcagtaactggcgtgagagcgcgaccagtcacacgggcactgagacacgggcccgactcctacgggaggcagcagtaaggaatattggtcaatggacggaagtctgaaccagccatgccgcgtgaaggatgactgccctctgggttgtaaacttcttttacatgggaagaaatgtgtgctttctagtgcatttgacggtaccatgggaataagcaccggctaactccgtgccagcagccgcggtaatacggagggtgcaagcgttatccggattcactgggtttaaagggtgcgtaggcgggtcagtaagtccgttgtgaaatctccgagcttaactcggaaactgcggtggatactattgaccttgaatgttgtggaggttagcggaatatgtcatgtagcggtgaaatgcatagatatgacatagaacaccaattgcgaaggcagctggctacacaactattgacgctgaggcacgaaagcgtggggatcaaacaggattagataccctggtagtccacgccctaaacgatggatactcgacatttgcgatatacagtaagtgtctgagcgaaagcattaagtatcccacctgggaagtacgaccgcaaggttgaaactcaaaggaattgacgggggtccgcacaagcggtggagcatgtggtttaattcgatgatacgcgaggaaccttacctgggctagaatgctagtagaccggtcctgaaagggatctttgtagcaatacactgctagtaaggtgctgcatggctgtcgtcagctcgtgccgtgaggtgttgggttaagtcccgcaacgagcgcaacccctatcattagttgccaacaggtyaagctgggaactctaatgaaactgccgtcgtaagacgcgaggaaggaggggatgatgtcaagtcatcatggcctttatgcccagggctacacacgtgctacaatggtaggaacaaagggctgctacttggtaacaagatgctaatctcaaaaatcctatctcagttcgaattgagggctgcaactcgccctcatgaagctggaatcgctagtaatcgtatatcagcaatgatacggtgaatacgttcccggaccttgtacacaccgcccgtcaagccatgaaagccggggggacctgaagtcggtaaccgcaaggagccgcctagggtaaaaccggtaattggggctaagtcgtaacaaggtagccgtatcggaaggtgc#
S000401607	Bacillus tequilensis	cgggaggcagcagtagggaatcttccgcaatggacgaaagtctgacggagcaacgccgcgtgagtgatgaaggttttcggatcgtaaagctctgttgttagggaagaacaagtaccgttcgaatagggcggtaccttgacggtacctaaccagaaagccacggctaactacgtgccagcagccgcggtaatacgtaggtggcaagcgttgtccggaattattgggcgtaaagggctcgcaggcggtttcttaagtctgatgtgaaagcccccggctcaaccggggagggtcattggaaactggggaacttgagtgcagaagaggagagtggaattccacgtgtagcggtgaaatgcgtagagatgtggaggaacaccagtggcgaaggcgactctctggtctgtaactgacgctgaggagcgaaagcgtggggagcgaacaggattagataccctggtagtccacgccgtaaacgatgagtgctaagtgttagggggtttccgccccttaatgctgcagctaacgcattaagcactcccgcctggggag#
S000399887	Mesoplasma grammopterae	ggctcaggaygaacgctggcggcatgcctaatacatgcaagtcgaacggaggtgcttgcacctcagtggcgaacgggtgagtaacacgtatctaatctaccttctagcgggggataacttttggaaacgaaaggtaataccgcatgtggatgttattatcgcatgagaaaacattcaaagatccgtttggatcactagaagatgaggatgcggcgtattagctagtaggcggggtaaaggcccacctaggcgatgatacgtagccgaactgagaggttgatcggccacattgggactgagatacggcccagactcctacgggaggcagcagtagggaatttttcacaatggacgaaagtctgatgaagcaatgccgcgtgagtgatgacggccttcgggttgtaaagctctgttgtaagggaagaaaacataggagaggaaatgctcttatcttgacggtaccttaccagaaagccacggctaactatgtgccagcagccgcggtaatacataggtggcaagcgttatccggatttattgggcgtatagggtgcgtaggcggtttcgcaagtttgaggttaaagcccggagctcaactccggttcgccttgaaaactgcgggactagaatatcagagaggtaagcggaattccatgtgtagcggtaaaatgcgtagatatatggaagaacaccagtggcgaaagcggcttactggctgattattgacgctgaggcacgaaagcgtggggagcaaataggattagataccctagtagtccacgccgtaaacgttgagtactaagtattggggattacctcagtgctgcagctaacgcattaagtactccgcctgagtagtatgctcgcaagagtgaaactcaaaggaattgacggggacccgcacaagtggtggagcatgtggtttaattcgaagcaacacgaagaaccttaccagggcttgacatacagtgcaaagctacagagatgtagtggaggttaacattgatacaggtggtgcatggttgtcgtcagttcgtgccgtgaggtgttgggttaagtcccgcaacgaacgcaacccttgtcgttagttactaacattaagttgaggactctaacgagactgctagtgtaagctagaggaaggtggggatgacgtcaaatcatcatgccccttatgtcctgggctacacacgtgctacaatggccgatacaaagagtcgcaatctcgcgagggggagctaatctcaaaaagtcggtctcagttcggattgaagtctgcaactcgacttcatgaagccggaatcactagtaatcgcgaatcagctatgtcgcggtgaatacgttctcgggtcttgtacacaccgcccgtcaaaccacgagagttggtaataccagaagtacgtttcctaaccgtaaggaaggcgcgtcccaaggtaggactagcgattggggttaagtcgtaacaaggtatccgtacgggaacgtgcgg#
S000006685	Taxeobacter ocellatus	agagtttgatnntggctcaggatgaacgctagcggcaggcctaatacatgcaagtcgaacggggtagcaatatccccagtggcgcacgggtgcgtaacgcgtaggcaatctgcctgctcctgggggatagcccgccgaaaggtggattaataccgcataacacttttgaccggcatcggttgatagttaaagaatttcgggagtagatgagcctgcgtgccattagctagttggtgaggtaacggcttaccaaggcgacgatggctaggggagctgagaggtgatcccccacactggcactgagatacgggccagactcctacgggaggcagcagtagggaatattgggcaatgggcgagagcctgacccagccatgccgcgtgcggatgaaggccttctgggttgtaaacgcttttcgggaagaaaaagtgcgaaagacggtaccggaataagcaccggctaactccgtgccagcagccgcggtaatacggagggtgcaagcgttgtccggatttattgggtttaaagggtgcgtaggtggccctgcaagtccgtggtgaaagcctgctgctcaacagcagaactgccatggatactacagggcttgagtccagacgaggttggcggaatggatggtgtagcggtgaaatgcatagataccatccagaaccccgattgcgtaggcagctgactaggctggtactgacactgaggcacgaaagcgtggggagcgaacaggattagataccctggtagtccacgccgtaaacgatggatactcgctgtgggcgatacacagtccgcggcttagcgaaagtgtaagtatcccacctggggagtacgccggcaacggtgaaactcaaaggaattgacgggggcccgcacaagtggtggagcatgtggtttaattcgatgatacgcgaggaaccttaccgaggctagaatgcgcgtgaccggctcagagatgggcctttccttcgggacacaaagcaaggtgctgcatggccgtcgtcagctcgtgccgtgaggtgttgggttaagtcccgcaacgagcgcaacccctatggttagttgccagcacgtaatggtggggactctagccagactgcctgcgcaagcagcgaggaaggcggggacgacgtcaggtcatcatggcccttacgcctcgggctacacacgtgctacaatggacggtacagagggtcgccacctggcaacagggagccaatctcaaaaagccgttctcagttcggatcggagtctgcaactcgactccgtgaagctggaatcactagtaatcgcgtatcagcaacgacgcggtgaatacgttcccgggccttgtacacaccgcccgtcaagccatggaagtctggtggacctgaagctggtgctcgtcacagaagccagttagggtaaaacaggtaactggggctaagtcgtaacaaggtagccgtaccggaaggtgcggctggatcacctccttt#
S000428268	Marinomonas mediterranea	tggagagtttgatcctggctcagattgaacgctggcggcaggcttaacacatgcaagtcgagcggaaacgatgatagcttgctatcaggcgtcgagcggcggacgggtgagtaacgcgtaggaatctgcctagtagagggggacaacatgtggaaacgcatgctaataccgcatacgcccttttggggaaaggaggggatcttcggaccttccgctattagatgagcctgcgtgagattagctagttggtggggtaaaggcctaccaaggcgacgatctctagctggtctgagaggatgatcagccacactgggactgagacacggcccagactcctacgggaggcagcagtggggaatattggacaatgggggcaaccctgatccagccatgccgcgtgtgtgaagaaggccttagggttgtaaagcactttcagaagtgaggaagggtgcttgattaatactcaagtactttgacgttagcttcagaagaagcaccggctaactctgtgccagcagccgcggtaatacagagggtgcaagcgttaatcggaattactgggcgtaaagcgcgcgtaggtggtttgttaagtcagatgtgaaagcccagggctcaaccttggaattgcacctgatactggcaggctagagtacggtagagggatgtggaatttcctgtgtagcggtgaaatgcgtagatataggaaggaacatcagtggcgaaggcgacatcctggactgatactgacactgaggtgcgaaagcgtggggagcaaacaggattagataccctggtagtccacgccgtaaacgatgtctactagccgttggtcgattttagattagtggcgcagctaacgcgataagtagaccgcctggggagtacggccgcaaggttaaaactcaaatgaattgacgggggcccgcacaagcggtggagcatgtggtttaattcgaagcaacgcgaagaaccttacctactcttgacatccagagaacttagcagagatgctttggtgccttcgggaactctgagacaggtgctgcatggctgtcgtcagctcgtgttgtgaaatgttgggttaagtcccgtaacgagcgcaacccttatccttatttgctagcaggtgatgctgagaactctaaggagactgccggtgacaaaccggaggaaggtggggacgacgtcaagtcatcatggcccttacgagtagggctacacacgtgctacaatggcgcatacagagggcggcgaacttgcgaaagtaagcaaatcccaaaaagtgcgtcgtagtccggattggagtctgcaactcgactccatgaagtcggaatcgctagtaatcgtggatcagaatgccacggtgaatacgttcccgggccttgtacacaccgcccgtcacaccatgggagttgattgctccagaagtagctagcttaaccttngggatggcggttaccacggagtggtcaatgactggggtgaagtcgtaacaaggtagccctaggggaacctgcggntggatcacctcctt#
S000399884	Bifidobacterium psychraerophilum	gtcaggatgaacgctggcggcgtgcttaacacatgcaagtcgaacgggatccatcaagcttgcttgatggtgagagtggcgaacgggtgagtaatacgtgactaacctgcctcatacaccggaatagctcctggaaacgggtggtaatgccggatgctccaacatttcacatgttttgttgggaaagcgttagcggtatgagatggggtcgcgtcctatcagcttgttggtgaggtaatggctcaccaaggcttcgacgggtagccggcctgagagggcgaccggccacattgggactgagatacggcccagactcctacgggaggcagcagtggggaatattgcacaatgggcgaaagcctgatgcagcgacgccgcgtgcgggatgaaggccttcgggttgtaaaccgcttttaattgggagcaagcgagagtgagtgtaccttttgaataagcaccggctaactacgtgccagcagccgcggtaatacgtagggtgcaagcgttatccggaattattgggcgtaaagagctcgtaggcggtttgtcacgcctggtgtgaaagtccatcgcttaacggtggatctgcgccgggtacgggcaggctagagtgcagtaggggagattggaattcccggtgtaacggtggaatgtgtagatatcgggaagaacaccaatggcgaaggcagatctctgggctgttactgacgctgaggagcgaaagcatggggagcgaacaggattagataccctggtagtccatgccgtaaacggtggatgctggatgtggggcccttccacgggctccgtgtcggagctaacgcgttaagcatcccgcctggggagtacggccgcaaggctaaaactcaaagaaattgacgggggcccgcacaagcggcggagcatgcggattaattcgatgcaacgcgaagaaccttacctaggcttgacatgtttcggacagccccagagatggggtctcccttcggggccgattcacaggtggtgcatggtcgtcgtcagctcgtgtcgtgagatgttgggttaagtcccgcaacgagcgcaaccctcgccttgtgttgccagcacgttatggtgggaactcacaagggaccgccggggttaactcggaggaaggtggggatgacgtcagatcatcatgccccttacgtctagggcttcacgcatgctacaatggccggtacaacgagatgcgacatggcgacatgaagcgaatctcttaaaaccggtctcagttcggattggagcctgcaactcggctccatgaaggcggagtcgctagtaatcgcgaatcagcaacgtcgcggtgaatgcgttcccgggccttgtacacaccgcccgtcaagtcatgaaagtgggtagcacccgaagccggtggcctaaccttttggagggagccgtctaagg#
S000368745	Robiginitalea biformata	gctcaggatgaacgctagcggcaggcctaacacatgcaagtcgaacggtaacagggattgcttgcaatccgctgacgagtggcgcacgggtgcgtaacgcgtatggaacctaccctttactgggggatagcccggagaaattcggattaataccccgtagtattgcttagtggcatcacttgagcaattaaagcttcggcggtagaggatggccatgcgtcctattagcttgatggtgaggtaacggctcaccattgctacgataggtaggggccctgagagggggatcccccacactggtactgagacacggaccagactcctacgggaggcagcagtgaggaatattggacaatggtcgaaagactgatccagccatgccgcgtgcaggaagacggccctacgggttgtaaactgcttttttacgggaagaataatgcccacgtgtgggcagatgacggtaccgtacgaataaggaccggctaactccgtgccagcagccgcggtaatacggagggtccgagcgttatccggaatcattgggtttaaagggtccgcaggcgggccagtaagtcaggggtgaaagtttgcggctcaaccgtaaaattgcctttgatactgctggtcttgagttgtggtgaagtggccggaatatgtggtgtagcggtgaaatgcatagatatcacatagaacaccgattgcgaaggcaggtcactaaccacacactgacgctgatggacgaaagcgtggggagcgaacgggattagataccccggtagtccacgccgtaaacgatggacactagctgttggggctcacgcctcagcggccaagcgaaagtgataagtgtcccacctggggagtacgttcgcaagaatgaaactcaaaggaattgacgggggcccgcacaagcggtggagcatgtggtttaattcgatgatacgcgaggaaccttaccagggcttaaatgtagtgggacaggcttagagataggcttttcttcggactcattacaaggtgctgcatggttgtcgtcagctcgtgccgtgaggtgtcaggttaagtcctataacgagcgcaacccctaccgttagttgccagcgagtaatgtcggggactctaacggaactgccggtgcaaaccgcgaggaaggtggggatgacgtcaaatcatcacggcccttacgtcctgggctacacacgtgctacaatggccggtacaatgagcagccactgcgcgagcaggagcgaatctaaaaaaccggtcacagttcggatcggggtctgcaactcgaccccgtgaagctggaatcgctagtaatcggatatcagccatgatccggtgaatacgttcccgggccttgtacacaccgcccgtcaagccatggaagccgggagtgcctgaagtccgtcaccgcaaggagcggctaggcaa#
S000127903	Acinetobacter ursingii	gagcggagagaggtagcttgctactgatcttagcggcggacgggtgagtaatacttaggaatctggctattagtgggggacaacatttcgaaagggatgctaataccgcatacgtcctacgggagaaagcaggggatcttcggaccttgcgctaatagatgagcctaagtcggattagctagttggtggggtaaaggcctaccaaggcgacgatctgtagcgggtctgagaggatgatccgccacactgggactgagacacggcccagactcctacgggaggcagcagtggggaatattggacaatggggggaaccctgatccagccatgccgcgtgtgtgaagaaggccttatggttgtaaagcactttaagcgaggaggagggtactggtattaatactaccaggtactggacgttactcgcagaataagcaccggctaactctgtgccagcagccgcggtaatacagagggtgcgagcgttaatcggatttactgggcgtaaagcgtgcgtaggcggctaattgagtcggatgtgaaatccccgagcttaacttgggaattgcattcgatactggttagctagagtgtgggagaggatggtagaattccaggtgtagcggtgaaatgcgtagagatctggaggaataccgatggcgaaggcagccatctggcctaacactgacgctgaggtacgaaagcatggggagcaaacaggattagataccctggtagtccatgccgtaaacgatgtctactagccgttggtctctttgagggattagtggcgcagctaacgcgataagtagaccgcctggggagtacggtcgcaagactaaaactcaaatgaattgacgggggcccgcacaagcggtggagcatgtggtttaattcgatgcaacgcgaagaaccttacctggtcttgacatagtaagaactttccagagatggattggtgccttcgggaacttacatacaggtgctgcatggctgtcgtcagctcgtgtcgtgagatgttgggttaagtcccgcaacgagcgcaacccttttccttatttgccagcactttgggtgggaactttaaggatactgccagtgacaaactggaggaaggcggggacgacgtcaagtcatcatggcccttacgaccagggctacacacgtgctacaatggtcggtacaaagggttgctacctagcgataggatgctaatctcaaaaagccgatcgtagtccggattggagtctgcaactcgactccatgaagtcggaatcgctagtaatcgcggatcagaatgccgcggtgaatacgttcccgggccttgtacacaccgcccgtcacaccatgggagtttgttgcaccagaagtggatagtctaactgcaaagaggacgttcaccacggtgtggccgatgactgggacgaagtcgtaacaaggta#
S000368744	Oceanicola batsensis	gtttgatcatggctcagaacgaacgctggcggcaggcctaacacatgcaagtcgagcgaagccttcgggcttagcggcggacgggtgagtaacgcgtgggaatgtacccttctctgcggaatagccactggaaacggtgagtaataccgcatacgcccttcgggggaaagatttatcggagaaggatcagcccgcgtctgattagatagttggtggggtaacggcctaccaagtcgacgatcagtagctggttttagaggatgatcagccacactgggactgagacacggcccagactcctacgggaggcagcagtggggaatcttagacaatgggcgcaagcctgatctagccatgccgcgtgagtgatgaaggccctagggtcgtaaagctctttcgccagggatgataatgacagtacctggtaaagaaaccccggctaactccgtgccagcagccgcggtaatacggagggggttagcgttgttcggaattactgggcgtaaagcgcacgtaggcggactattaagtcaggggtgaaatcccggggctcaaccccggaactgcccttgatactggtagtcttgagttcgagagaggtgagtggaattccgagtgtagaggtgaaattcgtagatattcggaggaacaccagtggcgaaggcggctcactggctcgatactgacgctgaggtgcgaaagtgtggggagcaaacaggattagataccctggtagtccacaccgtaaacgatgaatgccagtcgtcgggttgcatgcaattcggtgacacacctaacggattaagcattccgcctggggagtacggtcgcaagattaaaactcaaaggaattgacgggggcccgcgcaagcggtggagcatgtggtttaattcgaagcaacgcgcagaaccttaccaacccttgacatcctgtgctacatggagagatccatggttcccttcggggacgcagtgacaggtgctgcatggctgtcgtcagctcgtgtcgtgagatgttcggttaagtccggcaacgagcgcaacccacacccttagttgccagcagttcggctgggcactctaggggaactgcccgtgataagcgggaggaaggtgtggatgacgtcaagtcctcatggcccttacgggttgggctacacacgtgctacaatggcagtgacaatgggttaatccccaaaaactgtctcagttcggattgtcgtctgcaactcgacggcatgaagtcggaatcgctagtaatcgcgtaacagcatgacgcggtgaatacgttcccgggccttgtacacaccgcccgtcacatcatgggagttgggtttacccgaagacggtgcgccaacctgttcgcagggggcagctggccacggtaggctcagcgactgggatgaagtcgaaacaaggtagcca#
#
> #
> corpus <- read.table("rdp_download_5172seqs.tsv",as.is=T,sep="\t",header=T);#
> corpus <- corpus[,-3]; # don't need the sequence here!#
> qcmin <- read.table("qc.minscore",header=F,as.is=T,sep="\t");#
> #qc99 <- read.table("qc.99",header=F,as.is=T,sep="\t");#
> #qc97 <- read.table("qc.97",header=F,as.is=T,sep="\t");#
> #qc95 <- read.table("qc.95",header=F,as.is=T,sep="\t");#
> #
> qcmin <- qcmin[,c(1,4,5,7,8,9,10,11,12,13)];#
> #qc99 <- qc99[,c(1,4,5,7,8,9,10,11,12,13)];#
> #qc97 <- qc97[,c(1,4,5,7,8,9,10,11,12,13)];#
> #
> colnames(qcmin) <- c('id','level','taxon','score','topscore','% ident','cov','full','votesfor','votestotal');#
> #type <- append(rep("min",nrow(qcmin)),append(rep("99",nrow(qc99)),rep("97",nrow(qc97))));#
> #results <- cbind(rbind(qcmin,qc99,qc97),type);#
> results <- merge(corpus,qcmin,by="id");#
> dim(results)#
[1] 5172   11#
> results[1:3,]#
          id                      Taxa   level                     taxon score topscore % ident cov#
1 S000000010 Aeromicrobium fastidiosum SPECIES Aeromicrobium fastidiosum  2910     2910     100   1#
2 S000000020 Micromonospora carbonacea SPECIES Micromonospora carbonacea  2892     2892     100   1#
3 S000000028 Microbacterium flavescens SPECIES Microbacterium flavescens  2910     2910     100   1#
                                                                                                                         full votesfor votestotal#
1     Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Nocardioidaceae:Aeromicrobium:Aeromicrobium fastidiosum        1          1#
2 Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Micromonosporaceae:Micromonospora:Micromonospora carbonacea        1          1#
3  Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Microbacteriaceae:Microbacterium:Microbacterium flavescens        1          1#
> #
> indices <- c()#
> for( i in 1:nrow(results )){#
+ 	if( results[i,"Taxa"] != results[i,"taxon"] ){#
+ 		indices <- append(indices,i);#
+ 	}#
+ }#
> #
> #
> errors <- as.data.frame(results[indices,]);#
> errors <- orderFactors( errors );#
[1] "no non-missing arguments probably mean that the levels aren't found in this dataset."#
Warning messages:#
1: In max(i) : no non-missing arguments to max; returning -Inf#
2: In max(i) : no non-missing arguments to max; returning -Inf#
3: In max(i) : no non-missing arguments to max; returning -Inf#
4: In max(i) : no non-missing arguments to max; returning -Inf#
> #
> print(paste("there are: ",nrow(errors)," incongruencies."));#
[1] "there are:  389  incongruencies."#
> filtered <- which(!is.na(pmatch(errors[,"taxon"],"Filtered",dup=T)));#
> uncertain <- which(!is.na(pmatch(errors[,"taxon"],"Uncertain",dup=T)));#
> #
> print(paste("there are:",nrow(errors)," errors to review."));#
[1] "there are: 389  errors to review."#
> print(paste("there are: ",length(filtered)," filtered reads and", length(uncertain),"uncertain reads"));#
[1] "there are:  31  filtered reads and 50 uncertain reads"#
> print(paste("without review: ", (1-nrow(errors)/nrow(results)),"% of the assignments agree with RDP-II."));#
[1] "without review:  0.924787316318639 % of the assignments agree with RDP-II."#
> #
> myBarPlot <- barplot(table(errors$level)/nrow(errors),col="cornflowerblue");#
> #labels <- toupper(names(table(errors$level)));#
> #mtext(labels,at=colMeans(myBarPlot),side=1,line=1,cex=0.75);#
> title("Resolution of Errors");#
> #
> print("recall that 35 of the 41 Uncertain reads are picked up (false negatives) when we permit null genera from the taxonomy database.");#
[1] "recall that 35 of the 41 Uncertain reads are picked up (false negatives) when we permit null genera from the taxonomy database."#
> print("review the filtered reads.");#
[1] "review the filtered reads."#
> print("of the remaining reads::::");#
[1] "of the remaining reads::::"#
> errors[1:3,]#
           id                     Taxa   level                  taxon score topscore % ident cov#
16 S000000222  Carnimonas nigrifaciens SPECIES Carnimonas nigrificans  2999     2999   100.0   1#
22 S000000256 Rhodococcus erythropolis   GENUS            Rhodococcus  2581     2581    99.7   1#
28 S000000391     Arthrobacter ramosus   GENUS           Arthrobacter  2920     2920   100.0   1#
                                                                                                              full votesfor votestotal newOrder#
16 Bacteria::Proteobacteria:Gammaproteobacteria:Oceanospirillales:Halomonadaceae:Carnimonas:Carnimonas nigrificans        1          1       10#
22                       Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Nocardiaceae:Rhodococcus:       14         16        9#
28                    Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Micrococcaceae:Arthrobacter:        2          2        9#
> errors[which(errors$level=="SPECIES"),]#
             id                               Taxa   level                                     taxon score topscore % ident       cov#
16   S000000222            Carnimonas nigrifaciens SPECIES                    Carnimonas nigrificans  2999     2999  100.00 1.0000000#
149  S000002381               Pseudomonas amygdali SPECIES                  Pseudomonas ficuserectae  2856     2856  100.00 1.0000000#
178  S000002959 Microbacterium trichotecenolyticum SPECIES       Microbacterium trichothecenolyticum  2841     2841  100.00 1.0000000#
298  S000004727                Hamadaea tsunoensis SPECIES                  Catellatospora tsunoense  2878     2878  100.00 1.0000000#
406  S000006317                Aliivibrio fischeri SPECIES                           Vibrio fischeri  2872     2872  100.00 0.9979550#
425  S000006685              Taxeobacter ocellatus SPECIES                    Hymenobacter ocellatus  2932     2932  100.00 1.0000000#
477  S000007578           Acrocarpospora corrugata SPECIES                        Microbispora rosea  2111     2111   97.11 0.8854015#
632  S000010347             Beutenbergia cavernosa SPECIES                     Beutenbergia cavernae  2944     2944  100.00 1.0000000#
643  S000010403        Candidauts Magnetobacterium SPECIES     Candidatus Magnetobacterium bavaricum  2999     2999  100.00 1.0000000#
715  S000011833               Streptomyces griseus SPECIES                  Streptomyces argenteolus  2942     2942  100.00 1.0000000#
751  S000012343                    Clostridium sp. SPECIES                      Clostridium isatidis  2605     2605  100.00 1.0000000#
783  S000012797                  Xanthomonas bromi SPECIES                   Xanthomonas vesicatoria  2958     2958   99.67 1.0000000#
849  S000014116            Candidatus Helicobacter SPECIES        Candidatus Helicobacter heilmannii  2902     2902  100.00 1.0000000#
948  S000015789             Xanthomonas campestris SPECIES                     Xanthomonas hyacinthi  2967     2967  100.00 1.0000000#
949  S000015790                   Xanthomonas pisi SPECIES                   Xanthomonas vesicatoria  2973     2973   99.93 1.0000000#
950  S000015791               Xanthomonas vasicola SPECIES                    Xanthomonas axonopodis  2977     2977  100.00 1.0000000#
985  S000016631   Streptosporangium nondiastaticum SPECIES               Planomonospora parontospora  2109     2109   97.02 0.8849817#
1010 S000016939           Gordonia rubripertinctus SPECIES                   Gordonia rubripertincta  2763     2763  100.00 1.0000000#
1133 S000021216              Rhizobium larrymoorei SPECIES                 Agrobacterium larrymoorei  2843     2843  100.00 1.0000000#
1240 S000083870             Isoptericola variabile SPECIES                   Isoptericola variabilis  2918     2918  100.00 1.0000000#
1268 S000089782              Blastomonas ursincola SPECIES                    Sphingomonas ursincola  2835     2835  100.00 1.0000000#
1277 S000091708               Allokutzneria albata SPECIES                 Kibdelosporangium albatum  2910     2910  100.00 1.0000000#
1286 S000099372             Lactobacillus durianis SPECIES              Lactobacillus vaccinostercus  2956     2956  100.00 1.0000000#
1324 S000113071                Bacillus silvestris SPECIES                   Solibacillus silvestris  2987     2987  100.00 1.0000000#
1355 S000122852                  Shewanella sairae SPECIES                 Shewanella marinintestina  2854     2854  100.00 1.0000000#
1461 S000128881            Novispirillum itersonii SPECIES                   Novospirillum itersonii  2512     2512  100.00 1.0000000#
1618 S000136808          Chlorobium clathratiforme SPECIES                Pelodictyon clathratiforme  2607     2607  100.00 0.9896679#
1622 S000137057                Chlorobium luteolum SPECIES                      Pelodictyon luteolum  2698     2698  100.00 0.9893086#
1650 S000141396         Teichococcus ludipueritiae SPECIES                  Roseomonas ludipueritiae  2942     2942  100.00 1.0000000#
1653 S000142049                Aeromonas bestiarum SPECIES                     Aeromonas salmonicida  2977     2977  100.00 1.0000000#
1655 S000142444                  Muricoccus roseus SPECIES                          Roseomonas rosea  2936     2936  100.00 0.9973064#
1658 S000143178            Streptomyces coelescens SPECIES                   Streptomyces coelicolor  3003     3003  100.00 1.0000000#
1681 S000146513         Sporosarcina macmurdoensis SPECIES           Paenisporosarcina macmurdoensis  2940     2940  100.00 1.0000000#
1701 S000247785                    Deinococcus sp. SPECIES                       Deinococcus frigens  2954     2954  100.00 1.0000000#
1702 S000247787                    Deinococcus sp. SPECIES                      Deinococcus saxicola  2952     2952  100.00 1.0000000#
1703 S000247788                    Deinococcus sp. SPECIES                      Deinococcus marmoris  2954     2954  100.00 1.0000000#
1815 S000270583               Streptomyces griseus SPECIES                     Streptomyces erumpens  2967     2967  100.00 1.0000000#
1868 S000324392               Klebsiella variicola SPECIES                     Klebsiella pneumoniae  2799     2799  100.00 1.0000000#
1872 S000333610             Citricella thiooxidans SPECIES                   Citreicella thiooxidans  2714     2714  100.00 1.0000000#
1921 S000352703                    Spirochaeta sp. SPECIES                     Spirochaeta coccoides  2932     2932  100.00 1.0000000#
1948 S000356576             Candidatus Phytoplasma SPECIES               Candidatus Phytoplasma ulmi  3027     3027  100.00 1.0000000#
1962 S000358005               Candidatus Cardinium SPECIES             Candidatus Cardinium hertigii  2948     2948  100.00 1.0000000#
1974 S000363187                   Helicobacter sp. SPECIES                   Helicobacter pametensis  2936     2936  100.00 1.0000000#
1983 S000364328                   Ensifer meliloti SPECIES                    Sinorhizobium meliloti  2849     2849  100.00 1.0000000#
1984 S000364331                    Rhizobium vitis SPECIES                       Agrobacterium vitis  2841     2841  100.00 1.0000000#
1985 S000364334                     Rhizobium rubi SPECIES                        Agrobacterium rubi  2835     2835  100.00 1.0000000#
1986 S000364342                   Ensifer terangae SPECIES                    Sinorhizobium terangae  2849     2849  100.00 1.0000000#
1987 S000364344                     Ensifer saheli SPECIES                      Sinorhizobium saheli  2849     2849  100.00 1.0000000#
2011 S000364783                       Nocardia sp. SPECIES                         Nocardia anaemiae  2969     2969  100.00 1.0000000#
2030 S000366449             Candidatus Phytoplasma SPECIES               Candidatus Phytoplasma mali  2963     2963  100.00 1.0000000#
2031 S000366451             Candidatus Phytoplasma SPECIES               Candidatus Phytoplasma pyri  2963     2963  100.00 1.0000000#
2032 S000366452             Candidatus Phytoplasma SPECIES           Candidatus Phytoplasma prunorum  2963     2963  100.00 1.0000000#
2034 S000366461                 Candidatus Devosia SPECIES               Candidatus Devosia euplotis  2821     2821  100.00 1.0000000#
2037 S000366465             Candidatus Phytoplasma SPECIES         Candidatus Phytoplasma cynodontis  3487     3487  100.00 1.0000000#
2072 S000368724             Candidatus Phytoplasma SPECIES           Candidatus Phytoplasma trifolii  3035     3035  100.00 1.0000000#
2118 S000381077  Alicyclobacillus disulfidooxydans SPECIES         Alicyclobacillus disulfidooxidans  2965     2965  100.00 1.0000000#
2125 S000381172               Dickeya chrysanthemi SPECIES                      Erwinia chrysanthemi  2890     2890  100.00 1.0000000#
2170 S000381650                Streptococcus bovis SPECIES                     Streptococcus equinus  2888     2888  100.00 1.0000000#
2219 S000381995             Candidatus Phytoplasma SPECIES          Candidatus Phytoplasma japonicum  3015     3015  100.00 1.0000000#
2296 S000383720             Candidatus Phytoplasma SPECIES          Candidatus Phytoplasma castaneae  3017     3017  100.00 1.0000000#
2344 S000386953              Moraxella (Moraxella) SPECIES                        Moraxella lacunata  2866     2866  100.00 1.0000000#
2345 S000386975              Moraxella (Moraxella) SPECIES                           Moraxella bovis  2868     2868  100.00 1.0000000#
2346 S000386978            Moraxella (Branhamella) SPECIES                     Moraxella catarrhalis  2866     2866  100.00 1.0000000#
2347 S000386979            Moraxella (Branhamella) SPECIES                            Moraxella ovis  2866     2866  100.00 1.0000000#
2348 S000386980            Moraxella (Branhamella) SPECIES                          Moraxella caviae  2866     2866  100.00 1.0000000#
2398 S000387300       Thialkalimicrobium sibericum SPECIES             Thioalkalimicrobium sibiricum  2936     2936  100.00 1.0000000#
2436 S000388154             Candidatus Phytoplasma SPECIES        Candidatus Phytoplasma brasiliense  2983     2983  100.00 1.0000000#
2461 S000388391                Actinomadura spadix SPECIES                    Actinoallomurus spadix  2890     2890  100.00 1.0000000#
2468 S000388482                    Bacillus pycnus SPECIES                   Rummeliibacillus pycnus  2791     2791  100.00 1.0000000#
2474 S000388556      Catelliglobosispora koreensis SPECIES                  Catellatospora koreensis  2981     2981  100.00 1.0000000#
2482 S000388584      Caldanaerobacter subterraneus SPECIES               Carboxydibrachium pacificum  2946     2946  100.00 1.0000000#
2490 S000388686             Candidatus Procabacter SPECIES      Candidatus Procabacter acanthamoebae  2981     2981  100.00 1.0000000#
2496 S000388715                Defluvicoccus vanus SPECIES                      Defluviicoccus vanus  2878     2878  100.00 1.0000000#
2515 S000388994        Methylobacterium extorquens SPECIES         Methylobacterium chloromethanicum  2862     2862  100.00 1.0000000#
2522 S000389130      Caldanaerobacter subterraneus SPECIES          Thermoanaerobacter tengcongensis  3025     3025  100.00 1.0000000#
2525 S000389225      Caldanaerobacter subterraneus SPECIES            Thermoanaerobacter yonseiensis  2963     2963  100.00 1.0000000#
2528 S000389301       Candidatus Xiphinematobacter SPECIES    Candidatus Xiphinematobacter americani  2852     2852  100.00 1.0000000#
2529 S000389302       Candidatus Xiphinematobacter SPECIES       Candidatus Xiphinematobacter rivesi  2690     2690  100.00 1.0000000#
2530 S000389303       Candidatus Xiphinematobacter SPECIES   Candidatus Xiphinematobacter brevicolli  2946     2946  100.00 1.0000000#
2666 S000391664                    Simonsiella sp. SPECIES                   Conchiformibius kuhniae  2878     2878  100.00 1.0000000#
2704 S000392506                    Yersinia pestis SPECIES               Yersinia pseudotuberculosis  2896     2896  100.00 1.0000000#
2708 S000392553             Zymophilus paucivorans SPECIES                Zymophilus raffinosivorans  2512     2512   97.57 0.9315160#
2757 S000394134        Paenibacillus hongkongensis SPECIES                    Cohnella hongkongensis  2910     2910  100.00 1.0000000#
2801 S000395648     Actinoalloteichus cyanogriseus SPECIES                       Streptomyces laceyi  2866     2866  100.00 1.0000000#
2864 S000403035         Candidatus Rhabdochlamydia SPECIES   Candidatus Rhabdochlamydia porcellionis  2708     2708  100.00 1.0000000#
2874 S000404896         Thermovibrio ammoniificans SPECIES                 Thermovibrio ammonificans  2876     2876  100.00 1.0000000#
2896 S000413471               Rhizobium rhizogenes SPECIES                  Agrobacterium rhizogenes  2666     2666  100.00 1.0000000#
2901 S000413535                     Ensifer fredii SPECIES                      Sinorhizobium fredii  2918     2918  100.00 1.0000000#
2974 S000413975             Staphylococcus xylosus SPECIES              Staphylococcus saprophyticus  2928     2928  100.00 1.0000000#
3078 S000414470          Prevotella heparinolytica SPECIES               Bacteroides heparinolyticus  2791     2791  100.00 0.9945799#
3079 S000414471          Prevotella zoogleoformans SPECIES                Bacteroides zoogleoformans  2753     2753  100.00 1.0000000#
3086 S000414478            Tannerella forsythensis SPECIES                      Tannerella forsythia  2847     2847  100.00 0.9993179#
3095 S000414518            Candidatus Liberibacter SPECIES         Candidatus Liberibacter asiaticus  2817     2817  100.00 1.0000000#
3159 S000415011            Candidatus Neoehrlichia SPECIES        Candidatus Neoehrlichia mikurensis  2761     2761  100.00 1.0000000#
3164 S000415130              Jannaschia cystaugens SPECIES             Thalassobacter stenotrophicus  2656     2656  100.00 1.0000000#
3175 S000416814                    Clostridium sp. SPECIES                 Subdoligranulum variabile  2783     2783  100.00 1.0000000#
3176 S000416815      Mycobacterium psychrotolerans SPECIES                   Mycobacterium fortuitum  2763     2763   98.28 0.9986816#
3191 S000417331                    Marinomonas sp. SPECIES                       Marinomonas polaris  2924     2924  100.00 1.0000000#
3192 S000417333                 Byssophaga cruenta SPECIES                        Byssovorax cruenta  3031     3031  100.00 1.0000000#
3289 S000428013         Burkholderia vietnamiensis SPECIES                    Burkholderia ambifaria  2817     2817  100.00 1.0000000#
3344 S000428386               Candidatus Odyssella SPECIES     Candidatus Odyssella thessalonicensis  2882     2882  100.00 1.0000000#
3369 S000428517                  Acidovorax avenae SPECIES                       Acidovorax citrulli  3007     3007  100.00 1.0000000#
3370 S000428518                  Acidovorax avenae SPECIES                      Acidovorax cattleyae  3001     3001  100.00 1.0000000#
3392 S000428680         Streptococcus gallolyticus SPECIES                 Streptococcus macedonicus  2942     2942  100.00 1.0000000#
3394 S000428720             Candidatus Phytoplasma SPECIES            Candidatus Phytoplasma fraxini  2965     2965  100.00 1.0000000#
3458 S000430606                Acinetobacter junii SPECIES                   Acinetobacter grimontii  2626     2626  100.00 1.0000000#
3464 S000430990             Candidatus Phytoplasma SPECIES         Candidatus Phytoplasma phoenicium  2864     2864  100.00 1.0000000#
3493 S000434385       Methylobacterium rhodesianum SPECIES                Methylobacterium lusitanum  2734     2734  100.00 0.9992893#
3502 S000434588                   Nocardiopsis sp. SPECIES                     Nocardiopsis exhalans  2876     2876  100.00 1.0000000#
3538 S000435483            Bacteroidetes bacterium SPECIES                  Polaribacter butkevichii  2841     2841  100.00 1.0000000#
3588 S000436036              Rhizobium radiobacter SPECIES                 Agrobacterium tumefaciens  2952     2952  100.00 1.0000000#
3804 S000436672                 Haemophilus segnis SPECIES                    Aggregatibacter segnis  2805     2805  100.00 0.9972955#
3862 S000437097            Moraxella (Branhamella) SPECIES                     Moraxella catarrhalis  2995     2995  100.00 1.0000000#
3874 S000437159          Thermoanerobacter brockii SPECIES                Thermoanaerobacter brockii  2969     2969  100.00 1.0000000#
3882 S000437198             Candidatus Phytoplasma SPECIES       Candidatus Phytoplasma aurantifolia  2999     2999  100.00 1.0000000#
3922 S000437528       Butyrivibrio proteoclasticus SPECIES               Clostridium proteoclasticum  3005     3005  100.00 1.0000000#
3924 S000437566 Caldanaerobius polysaccharolyticus SPECIES Thermoanaerobacterium polysaccharolyticum  2850     2850  100.00 1.0000000#
4015 S000438421                Caldanaerobius zeae SPECIES                Thermoanaerobacterium zeae  2801     2801  100.00 1.0000000#
4048 S000438807            Candidatus Phlomobacter SPECIES         Candidatus Phlomobacter fragariae  2874     2874  100.00 1.0000000#
4050 S000438835            Candidatus Arsenophonus SPECIES     Candidatus Arsenophonus triatominarum  2698     2698  100.00 1.0000000#
4080 S000439318              Rhodocista centenaria SPECIES                   Rhodospirillum centenum  2535     2535  100.00 1.0000000#
4154 S000445670                Rhodanobacter fulva SPECIES                      Rhodanobacter fulvus  2934     2934  100.00 1.0000000#
4173 S000447136        Brevibacterium halotolerans SPECIES             [Brevibacterium] halotolerans  2999     2999  100.00 1.0000000#
4206 S000460393             Mycobacterium bonickei SPECIES                   Mycobacterium boenickei  2969     2969  100.00 1.0000000#
4238 S000468990                     Ensifer fredii SPECIES                Sinorhizobium xinjiangense  2833     2833  100.00 1.0000000#
4252 S000469274            Kitasatospora cochleata SPECIES                Streptomyces cinereorectus  2989     2989  100.00 0.9973597#
4260 S000469294           Acetobacter pasteurianus SPECIES                    Acetobacter peroxydans  2646     2646  100.00 1.0000000#
4294 S000471091               Lactobacillus rossii SPECIES                     Lactobacillus rossiae  2712     2712  100.00 1.0000000#
4307 S000471772              Jannaschia cystaugens SPECIES             Thalassobacter stenotrophicus  2904     2904  100.00 1.0000000#
4314 S000472247       Photobacterium eurosenbergii SPECIES                Photobacterium rosenbergii  2956     2956  100.00 1.0000000#
4392 S000484620            Candidatus Burkholderia SPECIES             Candidatus Burkholderia calva  3023     3023  100.00 1.0000000#
4393 S000484621            Candidatus Burkholderia SPECIES     Candidatus Burkholderia nigropunctata  3019     3019  100.00 1.0000000#
4447 S000499934            Candidatus Burkholderia SPECIES            Candidatus Burkholderia kirkii  3027     3027  100.00 1.0000000#
4492 S000514212                Enterococcus caccae SPECIES                   Enterococcus silesiacus  2940     2940  100.00 1.0000000#
4533 S000536517           Clostridium alkalicellum SPECIES               Clostridium alkalicellulosi  2952     2952  100.00 1.0000000#
4610 S000540395               Pseudomonas stutzeri SPECIES             Pseudomonas chloritidismutans  2969     2969  100.00 1.0000000#
4615 S000540524          Eggerthella hongkongensis SPECIES             Paraeggerthella hongkongensis  2829     2829  100.00 1.0000000#
4625 S000540599                Bacillus mojavensis SPECIES                     Bacillus malacitensis  2815     2815  100.00 1.0000000#
4626 S000540600                Bacillus mojavensis SPECIES                     Bacillus axarquiensis  2989     2989  100.00 1.0000000#
4649 S000541626             Donghaeana dokdonensis SPECIES                  Persicivirga dokdonensis  2936     2936  100.00 1.0000000#
4653 S000541807                   marine firmicute SPECIES                  Oceanobacillus iheyensis  3023     3023  100.00 1.0000000#
4680 S000543982                      Neisseria sp. SPECIES                            Kingella potus  2829     2829  100.00 1.0000000#
4707 S000544217            Streptomyces mashuensis SPECIES                Streptomyces kishiwadensis  2892     2892  100.00 1.0000000#
4713 S000544225             Streptomyces lilacinus SPECIES                Streptomyces kashimirensis  2841     2841   99.25 0.9925474#
4715 S000544227            Streptomyces abikoensis SPECIES              Streptomyces parvisporogenes  2922     2922  100.00 1.0000000#
4736 S000544255       Streptomyces spinoverrucosus SPECIES                 Streptomyces purpurascens  2789     2789   98.38 1.0013541#
4738 S000544257           Streptomyces cinnamoneus SPECIES                Streptomyces sapporonensis  2926     2926  100.00 1.0000000#
4825 S000570539    Streptomyces olivoverticillatus SPECIES                 Streptomyces viridiflavus  2922     2922  100.00 1.0000000#
4832 S000571530                Exiguobacterium sp. SPECIES                 Exiguobacterium mexicanum  2791     2791  100.00 1.0000000#
4873 S000576723                   Dyella koreensis SPECIES                               Dyella soli  2946     2946  100.00 1.0000000#
4926 S000603879      Pseudoxanthomonas dokdonensis SPECIES              Stenotrophomonas dokdonensis  2973     2973  100.00 1.0000000#
5018 S000631791            Mycobacterium phocaicum SPECIES                 Mycobacterium mucogenicum  2938     2938  100.00 1.0000000#
5071 S000701177           Sinorhizobium americanum SPECIES                      Sinorhizobium fredii  2849     2849  100.00 1.0000000#
5086 S000735276           Lactobacillus amylovorus SPECIES                     Lactobacillus sobrius  3102     3102  100.00 1.0000000#
5119 S000979021                Ensifer kummerowiae SPECIES                 Sinorhizobium kummerowiae  2720     2720  100.00 1.0000000#
                                                                                                                                                                         full votesfor#
16                                                            Bacteria::Proteobacteria:Gammaproteobacteria:Oceanospirillales:Halomonadaceae:Carnimonas:Carnimonas nigrificans        1#
149                                                        Bacteria::Proteobacteria:Gammaproteobacteria:Pseudomonadales:Pseudomonadaceae:Pseudomonas:Pseudomonas ficuserectae        1#
178                                      Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Microbacteriaceae:Microbacterium:Microbacterium trichothecenolyticum        1#
298                                                Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Micromonosporaceae:Catellatospora:Catellatospora tsunoense        1#
406                                                                          Bacteria::Proteobacteria:Gammaproteobacteria:Vibrionales:Vibrionaceae:Aliivibrio:Vibrio fischeri        1#
425                                                           Bacteria::Bacteroidetes:Sphingobacteria:Sphingobacteriales:Flexibacteraceae:Hymenobacter:Hymenobacter ocellatus        1#
477                                                      Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Streptosporangiaceae:Microbispora:Microbispora rosea        1#
632                                                       Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Beutenbergiaceae:Beutenbergia:Beutenbergia cavernae        1#
643                                   Bacteria::Nitrospirae:Nitrospira (class):Nitrospirales:Nitrospiraceae:Candidatus Magnetobacterium:Candidatus Magnetobacterium bavaricum        1#
715                                                   Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Streptomycetaceae:Streptomyces:Streptomyces argenteolus        1#
751                                                                             Bacteria::Firmicutes:Clostridia:Clostridiales:Clostridiaceae:Clostridium:Clostridium isatidis        1#
783                                                         Bacteria::Proteobacteria:Gammaproteobacteria:Xanthomonadales:Xanthomonadaceae:Xanthomonas:Xanthomonas vesicatoria        2#
849                                        Bacteria::Proteobacteria:Epsilonproteobacteria:Campylobacterales:Helicobacteraceae:Helicobacter:Candidatus Helicobacter heilmannii        1#
948                                                           Bacteria::Proteobacteria:Gammaproteobacteria:Xanthomonadales:Xanthomonadaceae:Xanthomonas:Xanthomonas hyacinthi        1#
949                                                         Bacteria::Proteobacteria:Gammaproteobacteria:Xanthomonadales:Xanthomonadaceae:Xanthomonas:Xanthomonas vesicatoria        2#
950                                                          Bacteria::Proteobacteria:Gammaproteobacteria:Xanthomonadales:Xanthomonadaceae:Xanthomonas:Xanthomonas axonopodis        2#
985                                           Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Streptosporangiaceae:Planomonospora:Planomonospora parontospora        1#
1010                                                            Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Gordoniaceae:Gordonia:Gordonia rubripertincta        1#
1133                                                            Bacteria::Proteobacteria:Alphaproteobacteria:Rhizobiales:Rhizobiaceae:Agrobacterium:Agrobacterium larrymoorei        1#
1240                                               Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Promicromonosporaceae:Isoptericola:Isoptericola variabilis        1#
1268                                                      Bacteria::Proteobacteria:Alphaproteobacteria:Sphingomonadales:Sphingomonadaceae:Sphingomonas:Sphingomonas ursincola        1#
1277                                           Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Pseudonocardiaceae:Kibdelosporangium:Kibdelosporangium albatum        1#
1286                                                                 Bacteria::Firmicutes:Bacilli:Lactobacillales:Lactobacillaceae:Lactobacillus:Lactobacillus vaccinostercus        8#
1324                                                                              Bacteria::Firmicutes:Bacilli:Bacillales:Planococcaceae:Solibacillus:Solibacillus silvestris        1#
1355                                                         Bacteria::Proteobacteria:Gammaproteobacteria:Alteromonadales:Shewanellaceae:Shewanella:Shewanella marinintestina        3#
1461                                                    Bacteria::Proteobacteria:Alphaproteobacteria:Rhodospirillales:Rhodospirillaceae:Novispirillum:Novospirillum itersonii        1#
1618                                                                           Bacteria::Chlorobi:Chlorobia:Chlorobiales:Chlorobiaceae:Pelodictyon:Pelodictyon clathratiforme        1#
1622                                                                                 Bacteria::Chlorobi:Chlorobia:Chlorobiales:Chlorobiaceae:Pelodictyon:Pelodictyon luteolum        1#
1650                                                       Bacteria::Proteobacteria:Alphaproteobacteria:Rhodospirillales:Acetobacteraceae:Roseomonas:Roseomonas ludipueritiae        1#
1653                                                                Bacteria::Proteobacteria:Gammaproteobacteria:Aeromonadales:Aeromonadaceae:Aeromonas:Aeromonas salmonicida        7#
1655                                                               Bacteria::Proteobacteria:Alphaproteobacteria:Rhodospirillales:Acetobacteraceae:Roseomonas:Roseomonas rosea        1#
1658                                                   Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Streptomycetaceae:Streptomyces:Streptomyces coelicolor        4#
1681                                                                 Bacteria::Firmicutes:Bacilli:Bacillales:Planococcaceae:Paenisporosarcina:Paenisporosarcina macmurdoensis        1#
1701                                                                    Bacteria::Deinococcus-Thermus:Deinococci:Deinococcales:Deinococcaceae:Deinococcus:Deinococcus frigens        1#
1702                                                                   Bacteria::Deinococcus-Thermus:Deinococci:Deinococcales:Deinococcaceae:Deinococcus:Deinococcus saxicola        1#
1703                                                                   Bacteria::Deinococcus-Thermus:Deinococci:Deinococcales:Deinococcaceae:Deinococcus:Deinococcus marmoris        1#
1815                                                     Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Streptomycetaceae:Streptomyces:Streptomyces erumpens        1#
1868                                                       Bacteria::Proteobacteria:Gammaproteobacteria:Enterobacteriales:Enterobacteriaceae:Klebsiella:Klebsiella pneumoniae        3#
1872                                                        Bacteria::Proteobacteria:Alphaproteobacteria:Rhodobacterales:Rhodobacteraceae:Citreicella:Citreicella thiooxidans        1#
1921                                                             Bacteria::Spirochaetes:Spirochaetes (class):Spirochaetales:Spirochaetaceae:Spirochaeta:Spirochaeta coccoides        1#
1948                                                 Bacteria::Tenericutes:Mollicutes:Acholeplasmatales:Acholeplasmataceae:Candidatus Phytoplasma:Candidatus Phytoplasma ulmi        1#
1962                                                                                            Bacteria::Bacteroidetes::::Candidatus Cardinium:Candidatus Cardinium hertigii        1#
1974                                                  Bacteria::Proteobacteria:Epsilonproteobacteria:Campylobacterales:Helicobacteraceae:Helicobacter:Helicobacter pametensis        1#
1983                                                               Bacteria::Proteobacteria:Alphaproteobacteria:Rhizobiales:Rhizobiaceae:Sinorhizobium:Sinorhizobium meliloti       10#
1984                                                                  Bacteria::Proteobacteria:Alphaproteobacteria:Rhizobiales:Rhizobiaceae:Agrobacterium:Agrobacterium vitis        6#
1985                                                                   Bacteria::Proteobacteria:Alphaproteobacteria:Rhizobiales:Rhizobiaceae:Agrobacterium:Agrobacterium rubi        1#
1986                                                               Bacteria::Proteobacteria:Alphaproteobacteria:Rhizobiales:Rhizobiaceae:Sinorhizobium:Sinorhizobium terangae        2#
1987                                                                 Bacteria::Proteobacteria:Alphaproteobacteria:Rhizobiales:Rhizobiaceae:Sinorhizobium:Sinorhizobium saheli        1#
2011                                                                  Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Nocardiaceae:Nocardia:Nocardia anaemiae        1#
2030                                                 Bacteria::Tenericutes:Mollicutes:Acholeplasmatales:Acholeplasmataceae:Candidatus Phytoplasma:Candidatus Phytoplasma mali        1#
2031                                                 Bacteria::Tenericutes:Mollicutes:Acholeplasmatales:Acholeplasmataceae:Candidatus Phytoplasma:Candidatus Phytoplasma pyri        1#
2032                                             Bacteria::Tenericutes:Mollicutes:Acholeplasmatales:Acholeplasmataceae:Candidatus Phytoplasma:Candidatus Phytoplasma prunorum        1#
2034                                                           Bacteria::Proteobacteria:Alphaproteobacteria:Rhizobiales:Hyphomicrobiaceae:Devosia:Candidatus Devosia euplotis        2#
2037                                           Bacteria::Tenericutes:Mollicutes:Acholeplasmatales:Acholeplasmataceae:Candidatus Phytoplasma:Candidatus Phytoplasma cynodontis        1#
2072                                             Bacteria::Tenericutes:Mollicutes:Acholeplasmatales:Acholeplasmataceae:Candidatus Phytoplasma:Candidatus Phytoplasma trifolii        1#
2118                                                           Bacteria::Firmicutes:Bacilli:Bacillales:Alicyclobacillaceae:Alicyclobacillus:Alicyclobacillus disulfidooxidans        1#
2125                                                           Bacteria::Proteobacteria:Gammaproteobacteria:Enterobacteriales:Enterobacteriaceae:Dickeya:Erwinia chrysanthemi        1#
2170                                                                        Bacteria::Firmicutes:Bacilli:Lactobacillales:Streptococcaceae:Streptococcus:Streptococcus equinus        1#
2219                                            Bacteria::Tenericutes:Mollicutes:Acholeplasmatales:Acholeplasmataceae:Candidatus Phytoplasma:Candidatus Phytoplasma japonicum        1#
2296                                            Bacteria::Tenericutes:Mollicutes:Acholeplasmatales:Acholeplasmataceae:Candidatus Phytoplasma:Candidatus Phytoplasma castaneae        1#
2344                                                                  Bacteria::Proteobacteria:Gammaproteobacteria:Pseudomonadales:Moraxellaceae:Moraxella:Moraxella lacunata        2#
2345                                                                     Bacteria::Proteobacteria:Gammaproteobacteria:Pseudomonadales:Moraxellaceae:Moraxella:Moraxella bovis        1#
2346                                                               Bacteria::Proteobacteria:Gammaproteobacteria:Pseudomonadales:Moraxellaceae:Moraxella:Moraxella catarrhalis        1#
2347                                                                      Bacteria::Proteobacteria:Gammaproteobacteria:Pseudomonadales:Moraxellaceae:Moraxella:Moraxella ovis        1#
2348                                                                    Bacteria::Proteobacteria:Gammaproteobacteria:Pseudomonadales:Moraxellaceae:Moraxella:Moraxella caviae        1#
2398                                         Bacteria::Proteobacteria:Gammaproteobacteria:Thiotrichales:Piscirickettsiaceae:Thioalkalimicrobium:Thioalkalimicrobium sibiricum        1#
2436                                          Bacteria::Tenericutes:Mollicutes:Acholeplasmatales:Acholeplasmataceae:Candidatus Phytoplasma:Candidatus Phytoplasma brasiliense        1#
2461                                               Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Thermomonosporaceae:Actinoallomurus:Actinoallomurus spadix        1#
2468                                                                          Bacteria::Firmicutes:Bacilli:Bacillales:Planococcaceae:Rummeliibacillus:Rummeliibacillus pycnus        2#
2474                                               Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Micromonosporaceae:Catellatospora:Catellatospora koreensis        1#
2482                                             Bacteria::Firmicutes:Clostridia:Thermoanaerobacterales:Thermoanaerobacteraceae:Carboxydibrachium:Carboxydibrachium pacificum        1#
2490                                          Bacteria::Proteobacteria:Betaproteobacteria:Procabacteriales:Procabacteriaceae:Procabacter:Candidatus Procabacter acanthamoebae        1#
2496                                                      Bacteria::Proteobacteria:Alphaproteobacteria:Rhodospirillales:Rhodospirillaceae:Defluviicoccus:Defluviicoccus vanus        1#
2515                                          Bacteria::Proteobacteria:Alphaproteobacteria:Rhizobiales:Methylobacteriaceae:Methylobacterium:Methylobacterium chloromethanicum        1#
2522                                       Bacteria::Firmicutes:Clostridia:Thermoanaerobacterales:Thermoanaerobacteraceae:Thermoanaerobacter:Thermoanaerobacter tengcongensis        1#
2525                                         Bacteria::Firmicutes:Clostridia:Thermoanaerobacterales:Thermoanaerobacteraceae:Thermoanaerobacter:Thermoanaerobacter yonseiensis        1#
2528                                                           Bacteria::Verrucomicrobia:Spartobacteria:::Candidatus Xiphinematobacter:Candidatus Xiphinematobacter americani        1#
2529                                                              Bacteria::Verrucomicrobia:Spartobacteria:::Candidatus Xiphinematobacter:Candidatus Xiphinematobacter rivesi        1#
2530                                                          Bacteria::Verrucomicrobia:Spartobacteria:::Candidatus Xiphinematobacter:Candidatus Xiphinematobacter brevicolli        1#
2666                                                           Bacteria::Proteobacteria:Betaproteobacteria:Neisseriales:Neisseriaceae:Conchiformibius:Conchiformibius kuhniae        1#
2704                                                   Bacteria::Proteobacteria:Gammaproteobacteria:Enterobacteriales:Enterobacteriaceae:Yersinia:Yersinia pseudotuberculosis        4#
2708                                                                      Bacteria::Firmicutes:Clostridia:Clostridiales:Veillonellaceae:Zymophilus:Zymophilus raffinosivorans        1#
2757                                                                                 Bacteria::Firmicutes:Bacilli:Bacillales:Paenibacillaceae:Cohnella:Cohnella hongkongensis        1#
2801                                                       Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Streptomycetaceae:Streptomyces:Streptomyces laceyi        2#
2864                                                 Bacteria::Chlamydiae:Chlamydiae (class):Chlamydiales::Candidatus Rhabdochlamydia:Candidatus Rhabdochlamydia porcellionis        1#
2874                                                           Bacteria::Aquificae:Aquificae (class):Aquificales:Desulfurobacteriaceae:Thermovibrio:Thermovibrio ammonificans        1#
2896                                                             Bacteria::Proteobacteria:Alphaproteobacteria:Rhizobiales:Rhizobiaceae:Agrobacterium:Agrobacterium rhizogenes        1#
2901                                                                 Bacteria::Proteobacteria:Alphaproteobacteria:Rhizobiales:Rhizobiaceae:Sinorhizobium:Sinorhizobium fredii        1#
2974                                                                    Bacteria::Firmicutes:Bacilli:Bacillales:Staphylococcaceae:Staphylococcus:Staphylococcus saprophyticus        2#
3078                                                                 Bacteria::Bacteroidetes:Bacteroidia:Bacteroidales:Bacteroidaceae:Bacteroides:Bacteroides heparinolyticus        1#
3079                                                                  Bacteria::Bacteroidetes:Bacteroidia:Bacteroidales:Bacteroidaceae:Bacteroides:Bacteroides zoogleoformans        1#
3086                                                                     Bacteria::Bacteroidetes:Bacteroidia:Bacteroidales:Porphyromonadaceae:Tannerella:Tannerella forsythia        1#
3095                                          Bacteria::Proteobacteria:Alphaproteobacteria:Rhizobiales:Rhizobiaceae:Candidatus Liberibacter:Candidatus Liberibacter asiaticus        1#
3159                                    Bacteria::Proteobacteria:Alphaproteobacteria:Rickettsiales:Anaplasmataceae:Candidatus Neoehrlichia:Candidatus Neoehrlichia mikurensis        2#
3164                                               Bacteria::Proteobacteria:Alphaproteobacteria:Rhodobacterales:Rhodobacteraceae:Thalassobacter:Thalassobacter stenotrophicus        1#
3175                                                                  Bacteria::Firmicutes:Clostridia:Clostridiales:Ruminococcaceae:Subdoligranulum:Subdoligranulum variabile        1#
3176                                                   Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Mycobacteriaceae:Mycobacterium:Mycobacterium fortuitum        2#
3191                                                        Bacteria::Proteobacteria:Gammaproteobacteria:Oceanospirillales:Oceanospirillaceae:Marinomonas:Marinomonas polaris        1#
3192                                                                    Bacteria::Proteobacteria:Deltaproteobacteria:Myxococcales:Polyangiaceae:Byssovorax:Byssovorax cruenta        1#
3289                                                         Bacteria::Proteobacteria:Betaproteobacteria:Burkholderiales:Burkholderiaceae:Burkholderia:Burkholderia ambifaria        1#
3344                                                   Bacteria::Proteobacteria:Alphaproteobacteria:Rickettsiales::Candidatus Odyssella:Candidatus Odyssella thessalonicensis        1#
3369                                                                Bacteria::Proteobacteria:Betaproteobacteria:Burkholderiales:Comamonadaceae:Acidovorax:Acidovorax citrulli        1#
3370                                                               Bacteria::Proteobacteria:Betaproteobacteria:Burkholderiales:Comamonadaceae:Acidovorax:Acidovorax cattleyae        1#
3392                                                                    Bacteria::Firmicutes:Bacilli:Lactobacillales:Streptococcaceae:Streptococcus:Streptococcus macedonicus        1#
3394                                              Bacteria::Tenericutes:Mollicutes:Acholeplasmatales:Acholeplasmataceae:Candidatus Phytoplasma:Candidatus Phytoplasma fraxini        1#
3458                                                         Bacteria::Proteobacteria:Gammaproteobacteria:Pseudomonadales:Moraxellaceae:Acinetobacter:Acinetobacter grimontii        1#
3464                                           Bacteria::Tenericutes:Mollicutes:Acholeplasmatales:Acholeplasmataceae:Candidatus Phytoplasma:Candidatus Phytoplasma phoenicium        1#
3493                                                 Bacteria::Proteobacteria:Alphaproteobacteria:Rhizobiales:Methylobacteriaceae:Methylobacterium:Methylobacterium lusitanum        1#
3502                                                       Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Nocardiopsaceae:Nocardiopsis:Nocardiopsis exhalans        2#
3538                                                           Bacteria::Bacteroidetes:Flavobacteria:Flavobacteriales:Flavobacteriaceae:Polaribacter:Polaribacter butkevichii        1#
3588                                                            Bacteria::Proteobacteria:Alphaproteobacteria:Rhizobiales:Rhizobiaceae:Agrobacterium:Agrobacterium tumefaciens        1#
3804                                                       Bacteria::Proteobacteria:Gammaproteobacteria:Pasteurellales:Pasteurellaceae:Aggregatibacter:Aggregatibacter segnis        1#
3862                                                               Bacteria::Proteobacteria:Gammaproteobacteria:Pseudomonadales:Moraxellaceae:Moraxella:Moraxella catarrhalis        1#
3874                                             Bacteria::Firmicutes:Clostridia:Thermoanaerobacterales:Thermoanaerobacteraceae:Thermoanaerobacter:Thermoanaerobacter brockii        1#
3882                                         Bacteria::Tenericutes:Mollicutes:Acholeplasmatales:Acholeplasmataceae:Candidatus Phytoplasma:Candidatus Phytoplasma aurantifolia        1#
3922                                                                   Bacteria::Firmicutes:Clostridia:Clostridiales:Lachnospiraceae:Butyrivibrio:Clostridium proteoclasticum        1#
3924 Bacteria::Firmicutes:Clostridia:Thermoanaerobacterales:Thermoanaerobacterales Family III. Incertae Sedis:Thermoanaerobacterium:Thermoanaerobacterium polysaccharolyticum        1#
4015                Bacteria::Firmicutes:Clostridia:Thermoanaerobacterales:Thermoanaerobacterales Family III. Incertae Sedis:Thermoanaerobacterium:Thermoanaerobacterium zeae        1#
4048                              Bacteria::Proteobacteria:Gammaproteobacteria:Enterobacteriales:Enterobacteriaceae:Candidatus Phlomobacter:Candidatus Phlomobacter fragariae        1#
4050                                     Bacteria::Proteobacteria:Gammaproteobacteria:Enterobacteriales:Enterobacteriaceae:Arsenophonus:Candidatus Arsenophonus triatominarum        1#
4080                                                   Bacteria::Proteobacteria:Alphaproteobacteria:Rhodospirillales:Rhodospirillaceae:Rhodospirillum:Rhodospirillum centenum        1#
4154                                                         Bacteria::Proteobacteria:Gammaproteobacteria:Xanthomonadales:Xanthomonadaceae:Rhodanobacter:Rhodanobacter fulvus        1#
4173                                                                               Bacteria::Firmicutes:Bacilli:Bacillales:Bacillaceae:Bacillus:[Brevibacterium] halotolerans        2#
4206                                                   Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Mycobacteriaceae:Mycobacterium:Mycobacterium boenickei        1#
4238                                                           Bacteria::Proteobacteria:Alphaproteobacteria:Rhizobiales:Rhizobiaceae:Sinorhizobium:Sinorhizobium xinjiangense        1#
4252                                                Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Streptomycetaceae:Streptomyces:Streptomyces cinereorectus        1#
4260                                                        Bacteria::Proteobacteria:Alphaproteobacteria:Rhodospirillales:Acetobacteraceae:Acetobacter:Acetobacter peroxydans        1#
4294                                                                        Bacteria::Firmicutes:Bacilli:Lactobacillales:Lactobacillaceae:Lactobacillus:Lactobacillus rossiae        1#
4307                                               Bacteria::Proteobacteria:Alphaproteobacteria:Rhodobacterales:Rhodobacteraceae:Thalassobacter:Thalassobacter stenotrophicus        1#
4314                                                          Bacteria::Proteobacteria:Gammaproteobacteria:Vibrionales:Vibrionaceae:Photobacterium:Photobacterium rosenbergii        1#
4392                                                  Bacteria::Proteobacteria:Betaproteobacteria:Burkholderiales:Burkholderiaceae:Burkholderia:Candidatus Burkholderia calva        1#
4393                                          Bacteria::Proteobacteria:Betaproteobacteria:Burkholderiales:Burkholderiaceae:Burkholderia:Candidatus Burkholderia nigropunctata        1#
4447                                                 Bacteria::Proteobacteria:Betaproteobacteria:Burkholderiales:Burkholderiaceae:Burkholderia:Candidatus Burkholderia kirkii        1#
4492                                                                        Bacteria::Firmicutes:Bacilli:Lactobacillales:Enterococcaceae:Enterococcus:Enterococcus silesiacus        2#
4533                                                                     Bacteria::Firmicutes:Clostridia:Clostridiales:Clostridiaceae:Clostridium:Clostridium alkalicellulosi        1#
4610                                                  Bacteria::Proteobacteria:Gammaproteobacteria:Pseudomonadales:Pseudomonadaceae:Pseudomonas:Pseudomonas chloritidismutans        1#
4615                                         Bacteria::Actinobacteria:Actinobacteria (class):Coriobacteriales:Coriobacteriaceae:Paraeggerthella:Paraeggerthella hongkongensis        1#
4625                                                                                       Bacteria::Firmicutes:Bacilli:Bacillales:Bacillaceae:Bacillus:Bacillus malacitensis        1#
4626                                                                                       Bacteria::Firmicutes:Bacilli:Bacillales:Bacillaceae:Bacillus:Bacillus axarquiensis        1#
4649                                                           Bacteria::Bacteroidetes:Flavobacteria:Flavobacteriales:Flavobacteriaceae:Persicivirga:Persicivirga dokdonensis        1#
4653                                                                              Bacteria::Firmicutes:Bacilli:Bacillales:Bacillaceae:Oceanobacillus:Oceanobacillus iheyensis        1#
4680                                                                           Bacteria::Proteobacteria:Betaproteobacteria:Neisseriales:Neisseriaceae:Kingella:Kingella potus        1#
4707                                                Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Streptomycetaceae:Streptomyces:Streptomyces kishiwadensis        1#
4713                                                Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Streptomycetaceae:Streptomyces:Streptomyces kashimirensis        1#
4715                                              Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Streptomycetaceae:Streptomyces:Streptomyces parvisporogenes        1#
4736                                                 Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Streptomycetaceae:Streptomyces:Streptomyces purpurascens        1#
4738                                                Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Streptomycetaceae:Streptomyces:Streptomyces sapporonensis        1#
4825                                                 Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Streptomycetaceae:Streptomyces:Streptomyces viridiflavus        1#
4832                                                                                       Bacteria::Firmicutes:Bacilli:Bacillales::Exiguobacterium:Exiguobacterium mexicanum        1#
4873                                                                         Bacteria::Proteobacteria:Gammaproteobacteria:Xanthomonadales:Xanthomonadaceae:Dyella:Dyella soli        1#
4926                                              Bacteria::Proteobacteria:Gammaproteobacteria:Xanthomonadales:Xanthomonadaceae:Stenotrophomonas:Stenotrophomonas dokdonensis        1#
5018                                                 Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:Mycobacteriaceae:Mycobacterium:Mycobacterium mucogenicum        4#
5071                                                                 Bacteria::Proteobacteria:Alphaproteobacteria:Rhizobiales:Rhizobiaceae:Sinorhizobium:Sinorhizobium fredii        2#
5086                                                                        Bacteria::Firmicutes:Bacilli:Lactobacillales:Lactobacillaceae:Lactobacillus:Lactobacillus sobrius        1#
5119                                                            Bacteria::Proteobacteria:Alphaproteobacteria:Rhizobiales:Rhizobiaceae:Sinorhizobium:Sinorhizobium kummerowiae        1#
     votestotal newOrder#
16            1       10#
149           1       10#
178           1       10#
298           1       10#
406           1       10#
425           1       10#
477           1       10#
632           1       10#
643           1       10#
715           1       10#
751           1       10#
783           3       10#
849           1       10#
948           1       10#
949           3       10#
950           3       10#
985           1       10#
1010          1       10#
1133          1       10#
1240          1       10#
1268          1       10#
1277          1       10#
1286          8       10#
1324          1       10#
1355          4       10#
1461          1       10#
1618          1       10#
1622          1       10#
1650          1       10#
1653          8       10#
1655          1       10#
1658          6       10#
1681          1       10#
1701          1       10#
1702          1       10#
1703          1       10#
1815          1       10#
1868          4       10#
1872          1       10#
1921          1       10#
1948          1       10#
1962          1       10#
1974          1       10#
1983         12       10#
1984          6       10#
1985          1       10#
1986          2       10#
1987          1       10#
2011          1       10#
2030          1       10#
2031          1       10#
2032          1       10#
2034          2       10#
2037          1       10#
2072          1       10#
2118          1       10#
2125          1       10#
2170          1       10#
2219          1       10#
2296          1       10#
2344          2       10#
2345          1       10#
2346          1       10#
2347          1       10#
2348          1       10#
2398          1       10#
2436          1       10#
2461          1       10#
2468          2       10#
2474          1       10#
2482          1       10#
2490          1       10#
2496          1       10#
2515          1       10#
2522          1       10#
2525          1       10#
2528          1       10#
2529          1       10#
2530          1       10#
2666          1       10#
2704          6       10#
2708          1       10#
2757          1       10#
2801          3       10#
2864          1       10#
2874          1       10#
2896          1       10#
2901          1       10#
2974          3       10#
3078          1       10#
3079          1       10#
3086          1       10#
3095          1       10#
3159          2       10#
3164          1       10#
3175          1       10#
3176          2       10#
3191          1       10#
3192          1       10#
3289          1       10#
3344          1       10#
3369          1       10#
3370          1       10#
3392          1       10#
3394          1       10#
3458          1       10#
3464          1       10#
3493          1       10#
3502          2       10#
3538          1       10#
3588          1       10#
3804          1       10#
3862          1       10#
3874          1       10#
3882          1       10#
3922          1       10#
3924          1       10#
4015          1       10#
4048          1       10#
4050          1       10#
4080          1       10#
4154          1       10#
4173          2       10#
4206          1       10#
4238          1       10#
4252          1       10#
4260          1       10#
4294          1       10#
4307          1       10#
4314          1       10#
4392          1       10#
4393          1       10#
4447          1       10#
4492          3       10#
4533          1       10#
4610          1       10#
4615          1       10#
4625          1       10#
4626          1       10#
4649          1       10#
4653          1       10#
4680          1       10#
4707          1       10#
4713          1       10#
4715          1       10#
4736          1       10#
4738          1       10#
4825          1       10#
4832          1       10#
4873          1       10#
4926          1       10#
5018          5       10#
5071          3       10#
5086          1       10#
5119          1       10#
> errors[which(errors$level=="SPECIES"),c(1,2,4)]#
             id                               Taxa                                     taxon#
16   S000000222            Carnimonas nigrifaciens                    Carnimonas nigrificans#
149  S000002381               Pseudomonas amygdali                  Pseudomonas ficuserectae#
178  S000002959 Microbacterium trichotecenolyticum       Microbacterium trichothecenolyticum#
298  S000004727                Hamadaea tsunoensis                  Catellatospora tsunoense#
406  S000006317                Aliivibrio fischeri                           Vibrio fischeri#
425  S000006685              Taxeobacter ocellatus                    Hymenobacter ocellatus#
477  S000007578           Acrocarpospora corrugata                        Microbispora rosea#
632  S000010347             Beutenbergia cavernosa                     Beutenbergia cavernae#
643  S000010403        Candidauts Magnetobacterium     Candidatus Magnetobacterium bavaricum#
715  S000011833               Streptomyces griseus                  Streptomyces argenteolus#
751  S000012343                    Clostridium sp.                      Clostridium isatidis#
783  S000012797                  Xanthomonas bromi                   Xanthomonas vesicatoria#
849  S000014116            Candidatus Helicobacter        Candidatus Helicobacter heilmannii#
948  S000015789             Xanthomonas campestris                     Xanthomonas hyacinthi#
949  S000015790                   Xanthomonas pisi                   Xanthomonas vesicatoria#
950  S000015791               Xanthomonas vasicola                    Xanthomonas axonopodis#
985  S000016631   Streptosporangium nondiastaticum               Planomonospora parontospora#
1010 S000016939           Gordonia rubripertinctus                   Gordonia rubripertincta#
1133 S000021216              Rhizobium larrymoorei                 Agrobacterium larrymoorei#
1240 S000083870             Isoptericola variabile                   Isoptericola variabilis#
1268 S000089782              Blastomonas ursincola                    Sphingomonas ursincola#
1277 S000091708               Allokutzneria albata                 Kibdelosporangium albatum#
1286 S000099372             Lactobacillus durianis              Lactobacillus vaccinostercus#
1324 S000113071                Bacillus silvestris                   Solibacillus silvestris#
1355 S000122852                  Shewanella sairae                 Shewanella marinintestina#
1461 S000128881            Novispirillum itersonii                   Novospirillum itersonii#
1618 S000136808          Chlorobium clathratiforme                Pelodictyon clathratiforme#
1622 S000137057                Chlorobium luteolum                      Pelodictyon luteolum#
1650 S000141396         Teichococcus ludipueritiae                  Roseomonas ludipueritiae#
1653 S000142049                Aeromonas bestiarum                     Aeromonas salmonicida#
1655 S000142444                  Muricoccus roseus                          Roseomonas rosea#
1658 S000143178            Streptomyces coelescens                   Streptomyces coelicolor#
1681 S000146513         Sporosarcina macmurdoensis           Paenisporosarcina macmurdoensis#
1701 S000247785                    Deinococcus sp.                       Deinococcus frigens#
1702 S000247787                    Deinococcus sp.                      Deinococcus saxicola#
1703 S000247788                    Deinococcus sp.                      Deinococcus marmoris#
1815 S000270583               Streptomyces griseus                     Streptomyces erumpens#
1868 S000324392               Klebsiella variicola                     Klebsiella pneumoniae#
1872 S000333610             Citricella thiooxidans                   Citreicella thiooxidans#
1921 S000352703                    Spirochaeta sp.                     Spirochaeta coccoides#
1948 S000356576             Candidatus Phytoplasma               Candidatus Phytoplasma ulmi#
1962 S000358005               Candidatus Cardinium             Candidatus Cardinium hertigii#
1974 S000363187                   Helicobacter sp.                   Helicobacter pametensis#
1983 S000364328                   Ensifer meliloti                    Sinorhizobium meliloti#
1984 S000364331                    Rhizobium vitis                       Agrobacterium vitis#
1985 S000364334                     Rhizobium rubi                        Agrobacterium rubi#
1986 S000364342                   Ensifer terangae                    Sinorhizobium terangae#
1987 S000364344                     Ensifer saheli                      Sinorhizobium saheli#
2011 S000364783                       Nocardia sp.                         Nocardia anaemiae#
2030 S000366449             Candidatus Phytoplasma               Candidatus Phytoplasma mali#
2031 S000366451             Candidatus Phytoplasma               Candidatus Phytoplasma pyri#
2032 S000366452             Candidatus Phytoplasma           Candidatus Phytoplasma prunorum#
2034 S000366461                 Candidatus Devosia               Candidatus Devosia euplotis#
2037 S000366465             Candidatus Phytoplasma         Candidatus Phytoplasma cynodontis#
2072 S000368724             Candidatus Phytoplasma           Candidatus Phytoplasma trifolii#
2118 S000381077  Alicyclobacillus disulfidooxydans         Alicyclobacillus disulfidooxidans#
2125 S000381172               Dickeya chrysanthemi                      Erwinia chrysanthemi#
2170 S000381650                Streptococcus bovis                     Streptococcus equinus#
2219 S000381995             Candidatus Phytoplasma          Candidatus Phytoplasma japonicum#
2296 S000383720             Candidatus Phytoplasma          Candidatus Phytoplasma castaneae#
2344 S000386953              Moraxella (Moraxella)                        Moraxella lacunata#
2345 S000386975              Moraxella (Moraxella)                           Moraxella bovis#
2346 S000386978            Moraxella (Branhamella)                     Moraxella catarrhalis#
2347 S000386979            Moraxella (Branhamella)                            Moraxella ovis#
2348 S000386980            Moraxella (Branhamella)                          Moraxella caviae#
2398 S000387300       Thialkalimicrobium sibericum             Thioalkalimicrobium sibiricum#
2436 S000388154             Candidatus Phytoplasma        Candidatus Phytoplasma brasiliense#
2461 S000388391                Actinomadura spadix                    Actinoallomurus spadix#
2468 S000388482                    Bacillus pycnus                   Rummeliibacillus pycnus#
2474 S000388556      Catelliglobosispora koreensis                  Catellatospora koreensis#
2482 S000388584      Caldanaerobacter subterraneus               Carboxydibrachium pacificum#
2490 S000388686             Candidatus Procabacter      Candidatus Procabacter acanthamoebae#
2496 S000388715                Defluvicoccus vanus                      Defluviicoccus vanus#
2515 S000388994        Methylobacterium extorquens         Methylobacterium chloromethanicum#
2522 S000389130      Caldanaerobacter subterraneus          Thermoanaerobacter tengcongensis#
2525 S000389225      Caldanaerobacter subterraneus            Thermoanaerobacter yonseiensis#
2528 S000389301       Candidatus Xiphinematobacter    Candidatus Xiphinematobacter americani#
2529 S000389302       Candidatus Xiphinematobacter       Candidatus Xiphinematobacter rivesi#
2530 S000389303       Candidatus Xiphinematobacter   Candidatus Xiphinematobacter brevicolli#
2666 S000391664                    Simonsiella sp.                   Conchiformibius kuhniae#
2704 S000392506                    Yersinia pestis               Yersinia pseudotuberculosis#
2708 S000392553             Zymophilus paucivorans                Zymophilus raffinosivorans#
2757 S000394134        Paenibacillus hongkongensis                    Cohnella hongkongensis#
2801 S000395648     Actinoalloteichus cyanogriseus                       Streptomyces laceyi#
2864 S000403035         Candidatus Rhabdochlamydia   Candidatus Rhabdochlamydia porcellionis#
2874 S000404896         Thermovibrio ammoniificans                 Thermovibrio ammonificans#
2896 S000413471               Rhizobium rhizogenes                  Agrobacterium rhizogenes#
2901 S000413535                     Ensifer fredii                      Sinorhizobium fredii#
2974 S000413975             Staphylococcus xylosus              Staphylococcus saprophyticus#
3078 S000414470          Prevotella heparinolytica               Bacteroides heparinolyticus#
3079 S000414471          Prevotella zoogleoformans                Bacteroides zoogleoformans#
3086 S000414478            Tannerella forsythensis                      Tannerella forsythia#
3095 S000414518            Candidatus Liberibacter         Candidatus Liberibacter asiaticus#
3159 S000415011            Candidatus Neoehrlichia        Candidatus Neoehrlichia mikurensis#
3164 S000415130              Jannaschia cystaugens             Thalassobacter stenotrophicus#
3175 S000416814                    Clostridium sp.                 Subdoligranulum variabile#
3176 S000416815      Mycobacterium psychrotolerans                   Mycobacterium fortuitum#
3191 S000417331                    Marinomonas sp.                       Marinomonas polaris#
3192 S000417333                 Byssophaga cruenta                        Byssovorax cruenta#
3289 S000428013         Burkholderia vietnamiensis                    Burkholderia ambifaria#
3344 S000428386               Candidatus Odyssella     Candidatus Odyssella thessalonicensis#
3369 S000428517                  Acidovorax avenae                       Acidovorax citrulli#
3370 S000428518                  Acidovorax avenae                      Acidovorax cattleyae#
3392 S000428680         Streptococcus gallolyticus                 Streptococcus macedonicus#
3394 S000428720             Candidatus Phytoplasma            Candidatus Phytoplasma fraxini#
3458 S000430606                Acinetobacter junii                   Acinetobacter grimontii#
3464 S000430990             Candidatus Phytoplasma         Candidatus Phytoplasma phoenicium#
3493 S000434385       Methylobacterium rhodesianum                Methylobacterium lusitanum#
3502 S000434588                   Nocardiopsis sp.                     Nocardiopsis exhalans#
3538 S000435483            Bacteroidetes bacterium                  Polaribacter butkevichii#
3588 S000436036              Rhizobium radiobacter                 Agrobacterium tumefaciens#
3804 S000436672                 Haemophilus segnis                    Aggregatibacter segnis#
3862 S000437097            Moraxella (Branhamella)                     Moraxella catarrhalis#
3874 S000437159          Thermoanerobacter brockii                Thermoanaerobacter brockii#
3882 S000437198             Candidatus Phytoplasma       Candidatus Phytoplasma aurantifolia#
3922 S000437528       Butyrivibrio proteoclasticus               Clostridium proteoclasticum#
3924 S000437566 Caldanaerobius polysaccharolyticus Thermoanaerobacterium polysaccharolyticum#
4015 S000438421                Caldanaerobius zeae                Thermoanaerobacterium zeae#
4048 S000438807            Candidatus Phlomobacter         Candidatus Phlomobacter fragariae#
4050 S000438835            Candidatus Arsenophonus     Candidatus Arsenophonus triatominarum#
4080 S000439318              Rhodocista centenaria                   Rhodospirillum centenum#
4154 S000445670                Rhodanobacter fulva                      Rhodanobacter fulvus#
4173 S000447136        Brevibacterium halotolerans             [Brevibacterium] halotolerans#
4206 S000460393             Mycobacterium bonickei                   Mycobacterium boenickei#
4238 S000468990                     Ensifer fredii                Sinorhizobium xinjiangense#
4252 S000469274            Kitasatospora cochleata                Streptomyces cinereorectus#
4260 S000469294           Acetobacter pasteurianus                    Acetobacter peroxydans#
4294 S000471091               Lactobacillus rossii                     Lactobacillus rossiae#
4307 S000471772              Jannaschia cystaugens             Thalassobacter stenotrophicus#
4314 S000472247       Photobacterium eurosenbergii                Photobacterium rosenbergii#
4392 S000484620            Candidatus Burkholderia             Candidatus Burkholderia calva#
4393 S000484621            Candidatus Burkholderia     Candidatus Burkholderia nigropunctata#
4447 S000499934            Candidatus Burkholderia            Candidatus Burkholderia kirkii#
4492 S000514212                Enterococcus caccae                   Enterococcus silesiacus#
4533 S000536517           Clostridium alkalicellum               Clostridium alkalicellulosi#
4610 S000540395               Pseudomonas stutzeri             Pseudomonas chloritidismutans#
4615 S000540524          Eggerthella hongkongensis             Paraeggerthella hongkongensis#
4625 S000540599                Bacillus mojavensis                     Bacillus malacitensis#
4626 S000540600                Bacillus mojavensis                     Bacillus axarquiensis#
4649 S000541626             Donghaeana dokdonensis                  Persicivirga dokdonensis#
4653 S000541807                   marine firmicute                  Oceanobacillus iheyensis#
4680 S000543982                      Neisseria sp.                            Kingella potus#
4707 S000544217            Streptomyces mashuensis                Streptomyces kishiwadensis#
4713 S000544225             Streptomyces lilacinus                Streptomyces kashimirensis#
4715 S000544227            Streptomyces abikoensis              Streptomyces parvisporogenes#
4736 S000544255       Streptomyces spinoverrucosus                 Streptomyces purpurascens#
4738 S000544257           Streptomyces cinnamoneus                Streptomyces sapporonensis#
4825 S000570539    Streptomyces olivoverticillatus                 Streptomyces viridiflavus#
4832 S000571530                Exiguobacterium sp.                 Exiguobacterium mexicanum#
4873 S000576723                   Dyella koreensis                               Dyella soli#
4926 S000603879      Pseudoxanthomonas dokdonensis              Stenotrophomonas dokdonensis#
5018 S000631791            Mycobacterium phocaicum                 Mycobacterium mucogenicum#
5071 S000701177           Sinorhizobium americanum                      Sinorhizobium fredii#
5086 S000735276           Lactobacillus amylovorus                     Lactobacillus sobrius#
5119 S000979021                Ensifer kummerowiae                 Sinorhizobium kummerowiae#
> errors[which(errors$level=="SPECIES"),c(1,2,4)] -> sppErrors#
> cbind(sppErrors)#
             id                               Taxa                                     taxon#
16   S000000222            Carnimonas nigrifaciens                    Carnimonas nigrificans#
149  S000002381               Pseudomonas amygdali                  Pseudomonas ficuserectae#
178  S000002959 Microbacterium trichotecenolyticum       Microbacterium trichothecenolyticum#
298  S000004727                Hamadaea tsunoensis                  Catellatospora tsunoense#
406  S000006317                Aliivibrio fischeri                           Vibrio fischeri#
425  S000006685              Taxeobacter ocellatus                    Hymenobacter ocellatus#
477  S000007578           Acrocarpospora corrugata                        Microbispora rosea#
632  S000010347             Beutenbergia cavernosa                     Beutenbergia cavernae#
643  S000010403        Candidauts Magnetobacterium     Candidatus Magnetobacterium bavaricum#
715  S000011833               Streptomyces griseus                  Streptomyces argenteolus#
751  S000012343                    Clostridium sp.                      Clostridium isatidis#
783  S000012797                  Xanthomonas bromi                   Xanthomonas vesicatoria#
849  S000014116            Candidatus Helicobacter        Candidatus Helicobacter heilmannii#
948  S000015789             Xanthomonas campestris                     Xanthomonas hyacinthi#
949  S000015790                   Xanthomonas pisi                   Xanthomonas vesicatoria#
950  S000015791               Xanthomonas vasicola                    Xanthomonas axonopodis#
985  S000016631   Streptosporangium nondiastaticum               Planomonospora parontospora#
1010 S000016939           Gordonia rubripertinctus                   Gordonia rubripertincta#
1133 S000021216              Rhizobium larrymoorei                 Agrobacterium larrymoorei#
1240 S000083870             Isoptericola variabile                   Isoptericola variabilis#
1268 S000089782              Blastomonas ursincola                    Sphingomonas ursincola#
1277 S000091708               Allokutzneria albata                 Kibdelosporangium albatum#
1286 S000099372             Lactobacillus durianis              Lactobacillus vaccinostercus#
1324 S000113071                Bacillus silvestris                   Solibacillus silvestris#
1355 S000122852                  Shewanella sairae                 Shewanella marinintestina#
1461 S000128881            Novispirillum itersonii                   Novospirillum itersonii#
1618 S000136808          Chlorobium clathratiforme                Pelodictyon clathratiforme#
1622 S000137057                Chlorobium luteolum                      Pelodictyon luteolum#
1650 S000141396         Teichococcus ludipueritiae                  Roseomonas ludipueritiae#
1653 S000142049                Aeromonas bestiarum                     Aeromonas salmonicida#
1655 S000142444                  Muricoccus roseus                          Roseomonas rosea#
1658 S000143178            Streptomyces coelescens                   Streptomyces coelicolor#
1681 S000146513         Sporosarcina macmurdoensis           Paenisporosarcina macmurdoensis#
1701 S000247785                    Deinococcus sp.                       Deinococcus frigens#
1702 S000247787                    Deinococcus sp.                      Deinococcus saxicola#
1703 S000247788                    Deinococcus sp.                      Deinococcus marmoris#
1815 S000270583               Streptomyces griseus                     Streptomyces erumpens#
1868 S000324392               Klebsiella variicola                     Klebsiella pneumoniae#
1872 S000333610             Citricella thiooxidans                   Citreicella thiooxidans#
1921 S000352703                    Spirochaeta sp.                     Spirochaeta coccoides#
1948 S000356576             Candidatus Phytoplasma               Candidatus Phytoplasma ulmi#
1962 S000358005               Candidatus Cardinium             Candidatus Cardinium hertigii#
1974 S000363187                   Helicobacter sp.                   Helicobacter pametensis#
1983 S000364328                   Ensifer meliloti                    Sinorhizobium meliloti#
1984 S000364331                    Rhizobium vitis                       Agrobacterium vitis#
1985 S000364334                     Rhizobium rubi                        Agrobacterium rubi#
1986 S000364342                   Ensifer terangae                    Sinorhizobium terangae#
1987 S000364344                     Ensifer saheli                      Sinorhizobium saheli#
2011 S000364783                       Nocardia sp.                         Nocardia anaemiae#
2030 S000366449             Candidatus Phytoplasma               Candidatus Phytoplasma mali#
2031 S000366451             Candidatus Phytoplasma               Candidatus Phytoplasma pyri#
2032 S000366452             Candidatus Phytoplasma           Candidatus Phytoplasma prunorum#
2034 S000366461                 Candidatus Devosia               Candidatus Devosia euplotis#
2037 S000366465             Candidatus Phytoplasma         Candidatus Phytoplasma cynodontis#
2072 S000368724             Candidatus Phytoplasma           Candidatus Phytoplasma trifolii#
2118 S000381077  Alicyclobacillus disulfidooxydans         Alicyclobacillus disulfidooxidans#
2125 S000381172               Dickeya chrysanthemi                      Erwinia chrysanthemi#
2170 S000381650                Streptococcus bovis                     Streptococcus equinus#
2219 S000381995             Candidatus Phytoplasma          Candidatus Phytoplasma japonicum#
2296 S000383720             Candidatus Phytoplasma          Candidatus Phytoplasma castaneae#
2344 S000386953              Moraxella (Moraxella)                        Moraxella lacunata#
2345 S000386975              Moraxella (Moraxella)                           Moraxella bovis#
2346 S000386978            Moraxella (Branhamella)                     Moraxella catarrhalis#
2347 S000386979            Moraxella (Branhamella)                            Moraxella ovis#
2348 S000386980            Moraxella (Branhamella)                          Moraxella caviae#
2398 S000387300       Thialkalimicrobium sibericum             Thioalkalimicrobium sibiricum#
2436 S000388154             Candidatus Phytoplasma        Candidatus Phytoplasma brasiliense#
2461 S000388391                Actinomadura spadix                    Actinoallomurus spadix#
2468 S000388482                    Bacillus pycnus                   Rummeliibacillus pycnus#
2474 S000388556      Catelliglobosispora koreensis                  Catellatospora koreensis#
2482 S000388584      Caldanaerobacter subterraneus               Carboxydibrachium pacificum#
2490 S000388686             Candidatus Procabacter      Candidatus Procabacter acanthamoebae#
2496 S000388715                Defluvicoccus vanus                      Defluviicoccus vanus#
2515 S000388994        Methylobacterium extorquens         Methylobacterium chloromethanicum#
2522 S000389130      Caldanaerobacter subterraneus          Thermoanaerobacter tengcongensis#
2525 S000389225      Caldanaerobacter subterraneus            Thermoanaerobacter yonseiensis#
2528 S000389301       Candidatus Xiphinematobacter    Candidatus Xiphinematobacter americani#
2529 S000389302       Candidatus Xiphinematobacter       Candidatus Xiphinematobacter rivesi#
2530 S000389303       Candidatus Xiphinematobacter   Candidatus Xiphinematobacter brevicolli#
2666 S000391664                    Simonsiella sp.                   Conchiformibius kuhniae#
2704 S000392506                    Yersinia pestis               Yersinia pseudotuberculosis#
2708 S000392553             Zymophilus paucivorans                Zymophilus raffinosivorans#
2757 S000394134        Paenibacillus hongkongensis                    Cohnella hongkongensis#
2801 S000395648     Actinoalloteichus cyanogriseus                       Streptomyces laceyi#
2864 S000403035         Candidatus Rhabdochlamydia   Candidatus Rhabdochlamydia porcellionis#
2874 S000404896         Thermovibrio ammoniificans                 Thermovibrio ammonificans#
2896 S000413471               Rhizobium rhizogenes                  Agrobacterium rhizogenes#
2901 S000413535                     Ensifer fredii                      Sinorhizobium fredii#
2974 S000413975             Staphylococcus xylosus              Staphylococcus saprophyticus#
3078 S000414470          Prevotella heparinolytica               Bacteroides heparinolyticus#
3079 S000414471          Prevotella zoogleoformans                Bacteroides zoogleoformans#
3086 S000414478            Tannerella forsythensis                      Tannerella forsythia#
3095 S000414518            Candidatus Liberibacter         Candidatus Liberibacter asiaticus#
3159 S000415011            Candidatus Neoehrlichia        Candidatus Neoehrlichia mikurensis#
3164 S000415130              Jannaschia cystaugens             Thalassobacter stenotrophicus#
3175 S000416814                    Clostridium sp.                 Subdoligranulum variabile#
3176 S000416815      Mycobacterium psychrotolerans                   Mycobacterium fortuitum#
3191 S000417331                    Marinomonas sp.                       Marinomonas polaris#
3192 S000417333                 Byssophaga cruenta                        Byssovorax cruenta#
3289 S000428013         Burkholderia vietnamiensis                    Burkholderia ambifaria#
3344 S000428386               Candidatus Odyssella     Candidatus Odyssella thessalonicensis#
3369 S000428517                  Acidovorax avenae                       Acidovorax citrulli#
3370 S000428518                  Acidovorax avenae                      Acidovorax cattleyae#
3392 S000428680         Streptococcus gallolyticus                 Streptococcus macedonicus#
3394 S000428720             Candidatus Phytoplasma            Candidatus Phytoplasma fraxini#
3458 S000430606                Acinetobacter junii                   Acinetobacter grimontii#
3464 S000430990             Candidatus Phytoplasma         Candidatus Phytoplasma phoenicium#
3493 S000434385       Methylobacterium rhodesianum                Methylobacterium lusitanum#
3502 S000434588                   Nocardiopsis sp.                     Nocardiopsis exhalans#
3538 S000435483            Bacteroidetes bacterium                  Polaribacter butkevichii#
3588 S000436036              Rhizobium radiobacter                 Agrobacterium tumefaciens#
3804 S000436672                 Haemophilus segnis                    Aggregatibacter segnis#
3862 S000437097            Moraxella (Branhamella)                     Moraxella catarrhalis#
3874 S000437159          Thermoanerobacter brockii                Thermoanaerobacter brockii#
3882 S000437198             Candidatus Phytoplasma       Candidatus Phytoplasma aurantifolia#
3922 S000437528       Butyrivibrio proteoclasticus               Clostridium proteoclasticum#
3924 S000437566 Caldanaerobius polysaccharolyticus Thermoanaerobacterium polysaccharolyticum#
4015 S000438421                Caldanaerobius zeae                Thermoanaerobacterium zeae#
4048 S000438807            Candidatus Phlomobacter         Candidatus Phlomobacter fragariae#
4050 S000438835            Candidatus Arsenophonus     Candidatus Arsenophonus triatominarum#
4080 S000439318              Rhodocista centenaria                   Rhodospirillum centenum#
4154 S000445670                Rhodanobacter fulva                      Rhodanobacter fulvus#
4173 S000447136        Brevibacterium halotolerans             [Brevibacterium] halotolerans#
4206 S000460393             Mycobacterium bonickei                   Mycobacterium boenickei#
4238 S000468990                     Ensifer fredii                Sinorhizobium xinjiangense#
4252 S000469274            Kitasatospora cochleata                Streptomyces cinereorectus#
4260 S000469294           Acetobacter pasteurianus                    Acetobacter peroxydans#
4294 S000471091               Lactobacillus rossii                     Lactobacillus rossiae#
4307 S000471772              Jannaschia cystaugens             Thalassobacter stenotrophicus#
4314 S000472247       Photobacterium eurosenbergii                Photobacterium rosenbergii#
4392 S000484620            Candidatus Burkholderia             Candidatus Burkholderia calva#
4393 S000484621            Candidatus Burkholderia     Candidatus Burkholderia nigropunctata#
4447 S000499934            Candidatus Burkholderia            Candidatus Burkholderia kirkii#
4492 S000514212                Enterococcus caccae                   Enterococcus silesiacus#
4533 S000536517           Clostridium alkalicellum               Clostridium alkalicellulosi#
4610 S000540395               Pseudomonas stutzeri             Pseudomonas chloritidismutans#
4615 S000540524          Eggerthella hongkongensis             Paraeggerthella hongkongensis#
4625 S000540599                Bacillus mojavensis                     Bacillus malacitensis#
4626 S000540600                Bacillus mojavensis                     Bacillus axarquiensis#
4649 S000541626             Donghaeana dokdonensis                  Persicivirga dokdonensis#
4653 S000541807                   marine firmicute                  Oceanobacillus iheyensis#
4680 S000543982                      Neisseria sp.                            Kingella potus#
4707 S000544217            Streptomyces mashuensis                Streptomyces kishiwadensis#
4713 S000544225             Streptomyces lilacinus                Streptomyces kashimirensis#
4715 S000544227            Streptomyces abikoensis              Streptomyces parvisporogenes#
4736 S000544255       Streptomyces spinoverrucosus                 Streptomyces purpurascens#
4738 S000544257           Streptomyces cinnamoneus                Streptomyces sapporonensis#
4825 S000570539    Streptomyces olivoverticillatus                 Streptomyces viridiflavus#
4832 S000571530                Exiguobacterium sp.                 Exiguobacterium mexicanum#
4873 S000576723                   Dyella koreensis                               Dyella soli#
4926 S000603879      Pseudoxanthomonas dokdonensis              Stenotrophomonas dokdonensis#
5018 S000631791            Mycobacterium phocaicum                 Mycobacterium mucogenicum#
5071 S000701177           Sinorhizobium americanum                      Sinorhizobium fredii#
5086 S000735276           Lactobacillus amylovorus                     Lactobacillus sobrius#
5119 S000979021                Ensifer kummerowiae                 Sinorhizobium kummerowiae#
> cbind(sppErrors,character(nrow(sppErrors))#
+ )#
             id                               Taxa                                     taxon character(nrow(sppErrors))#
16   S000000222            Carnimonas nigrifaciens                    Carnimonas nigrificans                           #
149  S000002381               Pseudomonas amygdali                  Pseudomonas ficuserectae                           #
178  S000002959 Microbacterium trichotecenolyticum       Microbacterium trichothecenolyticum                           #
298  S000004727                Hamadaea tsunoensis                  Catellatospora tsunoense                           #
406  S000006317                Aliivibrio fischeri                           Vibrio fischeri                           #
425  S000006685              Taxeobacter ocellatus                    Hymenobacter ocellatus                           #
477  S000007578           Acrocarpospora corrugata                        Microbispora rosea                           #
632  S000010347             Beutenbergia cavernosa                     Beutenbergia cavernae                           #
643  S000010403        Candidauts Magnetobacterium     Candidatus Magnetobacterium bavaricum                           #
715  S000011833               Streptomyces griseus                  Streptomyces argenteolus                           #
751  S000012343                    Clostridium sp.                      Clostridium isatidis                           #
783  S000012797                  Xanthomonas bromi                   Xanthomonas vesicatoria                           #
849  S000014116            Candidatus Helicobacter        Candidatus Helicobacter heilmannii                           #
948  S000015789             Xanthomonas campestris                     Xanthomonas hyacinthi                           #
949  S000015790                   Xanthomonas pisi                   Xanthomonas vesicatoria                           #
950  S000015791               Xanthomonas vasicola                    Xanthomonas axonopodis                           #
985  S000016631   Streptosporangium nondiastaticum               Planomonospora parontospora                           #
1010 S000016939           Gordonia rubripertinctus                   Gordonia rubripertincta                           #
1133 S000021216              Rhizobium larrymoorei                 Agrobacterium larrymoorei                           #
1240 S000083870             Isoptericola variabile                   Isoptericola variabilis                           #
1268 S000089782              Blastomonas ursincola                    Sphingomonas ursincola                           #
1277 S000091708               Allokutzneria albata                 Kibdelosporangium albatum                           #
1286 S000099372             Lactobacillus durianis              Lactobacillus vaccinostercus                           #
1324 S000113071                Bacillus silvestris                   Solibacillus silvestris                           #
1355 S000122852                  Shewanella sairae                 Shewanella marinintestina                           #
1461 S000128881            Novispirillum itersonii                   Novospirillum itersonii                           #
1618 S000136808          Chlorobium clathratiforme                Pelodictyon clathratiforme                           #
1622 S000137057                Chlorobium luteolum                      Pelodictyon luteolum                           #
1650 S000141396         Teichococcus ludipueritiae                  Roseomonas ludipueritiae                           #
1653 S000142049                Aeromonas bestiarum                     Aeromonas salmonicida                           #
1655 S000142444                  Muricoccus roseus                          Roseomonas rosea                           #
1658 S000143178            Streptomyces coelescens                   Streptomyces coelicolor                           #
1681 S000146513         Sporosarcina macmurdoensis           Paenisporosarcina macmurdoensis                           #
1701 S000247785                    Deinococcus sp.                       Deinococcus frigens                           #
1702 S000247787                    Deinococcus sp.                      Deinococcus saxicola                           #
1703 S000247788                    Deinococcus sp.                      Deinococcus marmoris                           #
1815 S000270583               Streptomyces griseus                     Streptomyces erumpens                           #
1868 S000324392               Klebsiella variicola                     Klebsiella pneumoniae                           #
1872 S000333610             Citricella thiooxidans                   Citreicella thiooxidans                           #
1921 S000352703                    Spirochaeta sp.                     Spirochaeta coccoides                           #
1948 S000356576             Candidatus Phytoplasma               Candidatus Phytoplasma ulmi                           #
1962 S000358005               Candidatus Cardinium             Candidatus Cardinium hertigii                           #
1974 S000363187                   Helicobacter sp.                   Helicobacter pametensis                           #
1983 S000364328                   Ensifer meliloti                    Sinorhizobium meliloti                           #
1984 S000364331                    Rhizobium vitis                       Agrobacterium vitis                           #
1985 S000364334                     Rhizobium rubi                        Agrobacterium rubi                           #
1986 S000364342                   Ensifer terangae                    Sinorhizobium terangae                           #
1987 S000364344                     Ensifer saheli                      Sinorhizobium saheli                           #
2011 S000364783                       Nocardia sp.                         Nocardia anaemiae                           #
2030 S000366449             Candidatus Phytoplasma               Candidatus Phytoplasma mali                           #
2031 S000366451             Candidatus Phytoplasma               Candidatus Phytoplasma pyri                           #
2032 S000366452             Candidatus Phytoplasma           Candidatus Phytoplasma prunorum                           #
2034 S000366461                 Candidatus Devosia               Candidatus Devosia euplotis                           #
2037 S000366465             Candidatus Phytoplasma         Candidatus Phytoplasma cynodontis                           #
2072 S000368724             Candidatus Phytoplasma           Candidatus Phytoplasma trifolii                           #
2118 S000381077  Alicyclobacillus disulfidooxydans         Alicyclobacillus disulfidooxidans                           #
2125 S000381172               Dickeya chrysanthemi                      Erwinia chrysanthemi                           #
2170 S000381650                Streptococcus bovis                     Streptococcus equinus                           #
2219 S000381995             Candidatus Phytoplasma          Candidatus Phytoplasma japonicum                           #
2296 S000383720             Candidatus Phytoplasma          Candidatus Phytoplasma castaneae                           #
2344 S000386953              Moraxella (Moraxella)                        Moraxella lacunata                           #
2345 S000386975              Moraxella (Moraxella)                           Moraxella bovis                           #
2346 S000386978            Moraxella (Branhamella)                     Moraxella catarrhalis                           #
2347 S000386979            Moraxella (Branhamella)                            Moraxella ovis                           #
2348 S000386980            Moraxella (Branhamella)                          Moraxella caviae                           #
2398 S000387300       Thialkalimicrobium sibericum             Thioalkalimicrobium sibiricum                           #
2436 S000388154             Candidatus Phytoplasma        Candidatus Phytoplasma brasiliense                           #
2461 S000388391                Actinomadura spadix                    Actinoallomurus spadix                           #
2468 S000388482                    Bacillus pycnus                   Rummeliibacillus pycnus                           #
2474 S000388556      Catelliglobosispora koreensis                  Catellatospora koreensis                           #
2482 S000388584      Caldanaerobacter subterraneus               Carboxydibrachium pacificum                           #
2490 S000388686             Candidatus Procabacter      Candidatus Procabacter acanthamoebae                           #
2496 S000388715                Defluvicoccus vanus                      Defluviicoccus vanus                           #
2515 S000388994        Methylobacterium extorquens         Methylobacterium chloromethanicum                           #
2522 S000389130      Caldanaerobacter subterraneus          Thermoanaerobacter tengcongensis                           #
2525 S000389225      Caldanaerobacter subterraneus            Thermoanaerobacter yonseiensis                           #
2528 S000389301       Candidatus Xiphinematobacter    Candidatus Xiphinematobacter americani                           #
2529 S000389302       Candidatus Xiphinematobacter       Candidatus Xiphinematobacter rivesi                           #
2530 S000389303       Candidatus Xiphinematobacter   Candidatus Xiphinematobacter brevicolli                           #
2666 S000391664                    Simonsiella sp.                   Conchiformibius kuhniae                           #
2704 S000392506                    Yersinia pestis               Yersinia pseudotuberculosis                           #
2708 S000392553             Zymophilus paucivorans                Zymophilus raffinosivorans                           #
2757 S000394134        Paenibacillus hongkongensis                    Cohnella hongkongensis                           #
2801 S000395648     Actinoalloteichus cyanogriseus                       Streptomyces laceyi                           #
2864 S000403035         Candidatus Rhabdochlamydia   Candidatus Rhabdochlamydia porcellionis                           #
2874 S000404896         Thermovibrio ammoniificans                 Thermovibrio ammonificans                           #
2896 S000413471               Rhizobium rhizogenes                  Agrobacterium rhizogenes                           #
2901 S000413535                     Ensifer fredii                      Sinorhizobium fredii                           #
2974 S000413975             Staphylococcus xylosus              Staphylococcus saprophyticus                           #
3078 S000414470          Prevotella heparinolytica               Bacteroides heparinolyticus                           #
3079 S000414471          Prevotella zoogleoformans                Bacteroides zoogleoformans                           #
3086 S000414478            Tannerella forsythensis                      Tannerella forsythia                           #
3095 S000414518            Candidatus Liberibacter         Candidatus Liberibacter asiaticus                           #
3159 S000415011            Candidatus Neoehrlichia        Candidatus Neoehrlichia mikurensis                           #
3164 S000415130              Jannaschia cystaugens             Thalassobacter stenotrophicus                           #
3175 S000416814                    Clostridium sp.                 Subdoligranulum variabile                           #
3176 S000416815      Mycobacterium psychrotolerans                   Mycobacterium fortuitum                           #
3191 S000417331                    Marinomonas sp.                       Marinomonas polaris                           #
3192 S000417333                 Byssophaga cruenta                        Byssovorax cruenta                           #
3289 S000428013         Burkholderia vietnamiensis                    Burkholderia ambifaria                           #
3344 S000428386               Candidatus Odyssella     Candidatus Odyssella thessalonicensis                           #
3369 S000428517                  Acidovorax avenae                       Acidovorax citrulli                           #
3370 S000428518                  Acidovorax avenae                      Acidovorax cattleyae                           #
3392 S000428680         Streptococcus gallolyticus                 Streptococcus macedonicus                           #
3394 S000428720             Candidatus Phytoplasma            Candidatus Phytoplasma fraxini                           #
3458 S000430606                Acinetobacter junii                   Acinetobacter grimontii                           #
3464 S000430990             Candidatus Phytoplasma         Candidatus Phytoplasma phoenicium                           #
3493 S000434385       Methylobacterium rhodesianum                Methylobacterium lusitanum                           #
3502 S000434588                   Nocardiopsis sp.                     Nocardiopsis exhalans                           #
3538 S000435483            Bacteroidetes bacterium                  Polaribacter butkevichii                           #
3588 S000436036              Rhizobium radiobacter                 Agrobacterium tumefaciens                           #
3804 S000436672                 Haemophilus segnis                    Aggregatibacter segnis                           #
3862 S000437097            Moraxella (Branhamella)                     Moraxella catarrhalis                           #
3874 S000437159          Thermoanerobacter brockii                Thermoanaerobacter brockii                           #
3882 S000437198             Candidatus Phytoplasma       Candidatus Phytoplasma aurantifolia                           #
3922 S000437528       Butyrivibrio proteoclasticus               Clostridium proteoclasticum                           #
3924 S000437566 Caldanaerobius polysaccharolyticus Thermoanaerobacterium polysaccharolyticum                           #
4015 S000438421                Caldanaerobius zeae                Thermoanaerobacterium zeae                           #
4048 S000438807            Candidatus Phlomobacter         Candidatus Phlomobacter fragariae                           #
4050 S000438835            Candidatus Arsenophonus     Candidatus Arsenophonus triatominarum                           #
4080 S000439318              Rhodocista centenaria                   Rhodospirillum centenum                           #
4154 S000445670                Rhodanobacter fulva                      Rhodanobacter fulvus                           #
4173 S000447136        Brevibacterium halotolerans             [Brevibacterium] halotolerans                           #
4206 S000460393             Mycobacterium bonickei                   Mycobacterium boenickei                           #
4238 S000468990                     Ensifer fredii                Sinorhizobium xinjiangense                           #
4252 S000469274            Kitasatospora cochleata                Streptomyces cinereorectus                           #
4260 S000469294           Acetobacter pasteurianus                    Acetobacter peroxydans                           #
4294 S000471091               Lactobacillus rossii                     Lactobacillus rossiae                           #
4307 S000471772              Jannaschia cystaugens             Thalassobacter stenotrophicus                           #
4314 S000472247       Photobacterium eurosenbergii                Photobacterium rosenbergii                           #
4392 S000484620            Candidatus Burkholderia             Candidatus Burkholderia calva                           #
4393 S000484621            Candidatus Burkholderia     Candidatus Burkholderia nigropunctata                           #
4447 S000499934            Candidatus Burkholderia            Candidatus Burkholderia kirkii                           #
4492 S000514212                Enterococcus caccae                   Enterococcus silesiacus                           #
4533 S000536517           Clostridium alkalicellum               Clostridium alkalicellulosi                           #
4610 S000540395               Pseudomonas stutzeri             Pseudomonas chloritidismutans                           #
4615 S000540524          Eggerthella hongkongensis             Paraeggerthella hongkongensis                           #
4625 S000540599                Bacillus mojavensis                     Bacillus malacitensis                           #
4626 S000540600                Bacillus mojavensis                     Bacillus axarquiensis                           #
4649 S000541626             Donghaeana dokdonensis                  Persicivirga dokdonensis                           #
4653 S000541807                   marine firmicute                  Oceanobacillus iheyensis                           #
4680 S000543982                      Neisseria sp.                            Kingella potus                           #
4707 S000544217            Streptomyces mashuensis                Streptomyces kishiwadensis                           #
4713 S000544225             Streptomyces lilacinus                Streptomyces kashimirensis                           #
4715 S000544227            Streptomyces abikoensis              Streptomyces parvisporogenes                           #
4736 S000544255       Streptomyces spinoverrucosus                 Streptomyces purpurascens                           #
4738 S000544257           Streptomyces cinnamoneus                Streptomyces sapporonensis                           #
4825 S000570539    Streptomyces olivoverticillatus                 Streptomyces viridiflavus                           #
4832 S000571530                Exiguobacterium sp.                 Exiguobacterium mexicanum                           #
4873 S000576723                   Dyella koreensis                               Dyella soli                           #
4926 S000603879      Pseudoxanthomonas dokdonensis              Stenotrophomonas dokdonensis                           #
5018 S000631791            Mycobacterium phocaicum                 Mycobacterium mucogenicum                           #
5071 S000701177           Sinorhizobium americanum                      Sinorhizobium fredii                           #
5086 S000735276           Lactobacillus amylovorus                     Lactobacillus sobrius                           #
5119 S000979021                Ensifer kummerowiae                 Sinorhizobium kummerowiae                           #
> dim(sppErrors)#
[1] 155   3#
> write.table(sppErrors,"sppErrors.txt",quote=F,sep="\t",col.names=F);#
> write.table(sppErrors,"sppErrors.txt",quote=F,sep="\t",row.names=F);#
> errors[which(errors$level=="GENUS"),c(1,2,4)] -> genusErrors#
> write.table(genusErrors,"genusErrors.txt",quote=F,sep="\t",col.names=F);#
> write.table(genusErrors,"genusErrors.txt",quote=F,sep="\t",row.names=F);#
> table(errors$level)#
#
Uncertain  Filtered     ORDER    FAMILY     GENUS   SPECIES #
       50        31         5         4       144       155 #
> errors[which(errors$level=="ORDER"),c(1,2,4)] -> orderErrors#
> orderErrors#
             id                             Taxa           taxon#
274  S000004356                Nocardiopsis alba Actinomycetales#
1255 S000088221              Anaerostipes caccae   Clostridiales#
2004 S000364384       Corynebacterium glutamicum Actinomycetales#
2902 S000413552 Sporolactobacillus laevolacticus      Bacillales#
2921 S000413734                Rhodobium marinum     Rhizobiales#
> errors[which(errors$level=="ORDER"),] -> orderErrors#
> orderErrors#
             id                             Taxa level           taxon score topscore % ident cov                                                               full votesfor votestotal#
274  S000004356                Nocardiopsis alba ORDER Actinomycetales  2896     2896     100   1 Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:::        2          2#
1255 S000088221              Anaerostipes caccae ORDER   Clostridiales  2886     2886     100   1                   Bacteria::Firmicutes:Clostridia:Clostridiales:::        2          2#
2004 S000364384       Corynebacterium glutamicum ORDER Actinomycetales  2894     2894     100   1 Bacteria::Actinobacteria:Actinobacteria (class):Actinomycetales:::        2          2#
2902 S000413552 Sporolactobacillus laevolacticus ORDER      Bacillales  2936     2936     100   1                         Bacteria::Firmicutes:Bacilli:Bacillales:::        2          2#
2921 S000413734                Rhodobium marinum ORDER     Rhizobiales  2755     2755     100   1        Bacteria::Proteobacteria:Alphaproteobacteria:Rhizobiales:::        5          5#
     newOrder#
274         7#
1255        7#
2004        7#
2902        7#
2921        7#
> dim(sppErrors)#
[1] 155   3#
> dim(results)#
[1] 5172   11#
> dim(errors)#
[1] 389  12#
> 389/5172#
[1] 0.07521268#
> 155/5172#
[1] 0.02996906#
> dim(genusErrors)#
[1] 144   3#
> 144/5172#
[1] 0.02784223#
> errors[which(errors$level=="FAMILY"),] -> familyErrors#
> familyErrors#
             id                   Taxa  level              taxon score topscore % ident cov                                                                                full votesfor#
1573 S000133399   Escherichia albertii FAMILY Enterobacteriaceae  2961     2961  100.00   1 Bacteria::Proteobacteria:Gammaproteobacteria:Enterobacteriales:Enterobacteriaceae::        2#
2650 S000391359 Cupriavidus basilensis FAMILY   Burkholderiaceae  2934     2934   99.87   1      Bacteria::Proteobacteria:Betaproteobacteria:Burkholderiales:Burkholderiaceae::        2#
2839 S000399557  Achromobacter spanius FAMILY     Alcaligenaceae  2862     2862  100.00   1        Bacteria::Proteobacteria:Betaproteobacteria:Burkholderiales:Alcaligenaceae::        4#
3391 S000428669   Cupriavidus pauculus FAMILY   Burkholderiaceae  2934     2934   99.87   1      Bacteria::Proteobacteria:Betaproteobacteria:Burkholderiales:Burkholderiaceae::        2#
     votestotal newOrder#
1573          2        8#
2650          2        8#
2839          4        8#
3391          2        8#
> mismatches <- character(nrow(results));#
> indices <- c()#
> for( i in 1:nrow(results )){#
+ 	if( results[i,"Taxa"] != results[i,"taxon"] ){#
+ 		indices <- append(indices,i);#
+ 		mismatches[i] <- paste("MISMATCH_",results[i,"level"],sep="");#
+ #
+ 	} else {#
+ 		mismatches[i] <- paste("MATCH_",results[i,"level"],sep="");#
+ 	}#
+ }#
> #
> table(mismatches)#
mismatches#
   MATCH_SPECIES  MISMATCH_FAMILY   MISMATCH_GENUS      MISMATCH_NA   MISMATCH_ORDER MISMATCH_SPECIES #
            4783                4              144               81                5              155 #
> pie(table(mismatches))#
> results <- orderFactors( as.data.frame(results));#
[1] "no non-missing arguments probably mean that the levels aren't found in this dataset."#
Warning messages:#
1: In max(i) : no non-missing arguments to max; returning -Inf#
2: In max(i) : no non-missing arguments to max; returning -Inf#
3: In max(i) : no non-missing arguments to max; returning -Inf#
4: In max(i) : no non-missing arguments to max; returning -Inf#
> #
> mismatches <- character(nrow(results));#
> indices <- c()#
> for( i in 1:nrow(results )){#
+ 	if( results[i,"Taxa"] != results[i,"taxon"] ){#
+ 		indices <- append(indices,i);#
+ 		mismatches[i] <- paste("MISMATCH_",results[i,"level"],sep="");#
+ #
+ 	} else {#
+ 		mismatches[i] <- paste("MATCH_",results[i,"level"],sep="");#
+ 	}#
+ }#
> #
> errors <- results[indices,];#
> pie(table(mismatches))#
> barplot(table(mismatches))#
> table(mismatches)#
mismatches#
     MATCH_SPECIES    MISMATCH_FAMILY  MISMATCH_Filtered     MISMATCH_GENUS     MISMATCH_ORDER   MISMATCH_SPECIES MISMATCH_Uncertain #
              4783                  4                 31                144                  5                155                 50 #
> table(results$level)#
#
Uncertain  Filtered     ORDER    FAMILY     GENUS   SPECIES #
       50        31         5         4       144      4938 #
> dim(errors)/dim(results)#
[1] 0.07521268 1.00000000#
> nrow(errors)/nrow(results)#
[1] 0.07521268#
> 31/5172#
[1] 0.005993813#
> scan(file="stdin")#
Read 0 items#
numeric(0)#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> addtl pathovar#
Error: syntax error#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> ambig/review#
Error: object "ambig" not found#
> identical#
function (x, y) #
.Internal(identical(x, y))#
<environment: namespace:base>#
> identical rDNA#
Error: syntax error#
> identical rDNA#
Error: syntax error#
> SPECIFICITY#
Error: object "SPECIFICITY" not found#
> SPECIFICITY#
Error: object "SPECIFICITY" not found#
> SPECIFICITY#
Error: object "SPECIFICITY" not found#
> SPECIFICITY#
Error: object "SPECIFICITY" not found#
> SPECIFICITY#
Error: object "SPECIFICITY" not found#
> SPECIFICITY#
Error: object "SPECIFICITY" not found#
> SPECIFICITY#
Error: object "SPECIFICITY" not found#
> SPECIFICITY#
Error: object "SPECIFICITY" not found#
> SPECIFICITY#
Error: object "SPECIFICITY" not found#
> SPECIFICITY#
Error: object "SPECIFICITY" not found#
> SPECIFICITY#
Error: object "SPECIFICITY" not found#
> SPECIFICITY#
Error: object "SPECIFICITY" not found#
> SPECIFICITY#
Error: object "SPECIFICITY" not found#
> SPECIFICITY#
Error: object "SPECIFICITY" not found#
> SPECIFICITY#
Error: object "SPECIFICITY" not found#
> SPECIFICITY#
Error: object "SPECIFICITY" not found#
> SPECIFICITY#
Error: object "SPECIFICITY" not found#
> SPECIFICITY#
Error: object "SPECIFICITY" not found#
> SPECIFICITY#
Error: object "SPECIFICITY" not found#
> SPECIFICITY#
Error: object "SPECIFICITY" not found#
> spelling#
Error: object "spelling" not found#
> spelling#
Error: object "spelling" not found#
> spelling#
Error: object "spelling" not found#
> spelling#
Error: object "spelling" not found#
> spelling#
Error: object "spelling" not found#
> spelling#
Error: object "spelling" not found#
> spelling#
Error: object "spelling" not found#
> spelling#
Error: object "spelling" not found#
> spelling#
Error: object "spelling" not found#
> spelling#
Error: object "spelling" not found#
> spelling#
Error: object "spelling" not found#
> spelling#
Error: object "spelling" not found#
> spelling#
Error: object "spelling" not found#
> spelling#
Error: object "spelling" not found#
> spelling#
Error: object "spelling" not found#
> spelling#
Error: object "spelling" not found#
> spelling#
Error: object "spelling" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> synonym#
Error: object "synonym" not found#
> test <- scan(file="stdin")#
Read 0 items#
> ?scan#
> help.search("console")#
> ls()#
 [1] "b"            "corpus"       "eff1"         "eff2"         "errors"       "familyErrors" "filtered"     "genusErrors"  "i"            "indices"      "labels"       "level1"      #
[13] "level2"       "mismatches"   "myBarPlot"    "n"            "orderErrors"  "orderFactors" "qc97"         "qc99"         "qcOut"        "qcmin"        "results"      "sppErrors"   #
[25] "test"         "type"         "uncertain"   #
> read.table("sppErrors.verdict",header=F)#
Error in scan(file, what, nmax, sep, dec, quote, skip, nlines, na.strings,  : #
  line 34 did not have 2 elements#
> read.table("sppErrors.verdict",header=F,sep="\t")#
                V1#
1   addtl pathovar#
2   addtl pathovar#
3   addtl pathovar#
4   addtl pathovar#
5   addtl pathovar#
6   addtl pathovar#
7   addtl pathovar#
8   addtl pathovar#
9   addtl pathovar#
10  addtl pathovar#
11  addtl pathovar#
12  addtl pathovar#
13  addtl pathovar#
14  addtl pathovar#
15  addtl pathovar#
16  addtl pathovar#
17  addtl pathovar#
18  addtl pathovar#
19  addtl pathovar#
20  addtl pathovar#
21  addtl pathovar#
22  addtl pathovar#
23  addtl pathovar#
24  addtl pathovar#
25  addtl pathovar#
26  addtl pathovar#
27  addtl pathovar#
28  addtl pathovar#
29  addtl pathovar#
30  addtl pathovar#
31  addtl pathovar#
32  addtl pathovar#
33  addtl pathovar#
34    ambig/review#
35    ambig/review#
36    ambig/review#
37    ambig/review#
38    ambig/review#
39    ambig/review#
40    ambig/review#
41    ambig/review#
42    ambig/review#
43    ambig/review#
44    ambig/review#
45    ambig/review#
46    ambig/review#
47    ambig/review#
48    ambig/review#
49    ambig/review#
50    ambig/review#
51    ambig/review#
52    ambig/review#
53    ambig/review#
54    ambig/review#
55    ambig/review#
56       identical#
57  identical rDNA#
58  identical rDNA#
59     SPECIFICITY#
60     SPECIFICITY#
61     SPECIFICITY#
62     SPECIFICITY#
63     SPECIFICITY#
64     SPECIFICITY#
65     SPECIFICITY#
66     SPECIFICITY#
67     SPECIFICITY#
68     SPECIFICITY#
69     SPECIFICITY#
70     SPECIFICITY#
71     SPECIFICITY#
72     SPECIFICITY#
73     SPECIFICITY#
74     SPECIFICITY#
75     SPECIFICITY#
76     SPECIFICITY#
77     SPECIFICITY#
78     SPECIFICITY#
79        spelling#
80        spelling#
81        spelling#
82        spelling#
83        spelling#
84        spelling#
85        spelling#
86        spelling#
87        spelling#
88        spelling#
89        spelling#
90        spelling#
91        spelling#
92        spelling#
93        spelling#
94        spelling#
95        spelling#
96         synonym#
97         synonym#
98         synonym#
99         synonym#
100        synonym#
101        synonym#
102        synonym#
103        synonym#
104        synonym#
105        synonym#
106        synonym#
107        synonym#
108        synonym#
109        synonym#
110        synonym#
111        synonym#
112        synonym#
113        synonym#
114        synonym#
115        synonym#
116        synonym#
117        synonym#
118        synonym#
119        synonym#
120        synonym#
121        synonym#
122        synonym#
123        synonym#
124        synonym#
125        synonym#
126        synonym#
127        synonym#
128        synonym#
129        synonym#
130        synonym#
131        synonym#
132        synonym#
133        synonym#
134        synonym#
135        synonym#
136        synonym#
137        synonym#
138        synonym#
139        synonym#
140        synonym#
141        synonym#
142        synonym#
143        synonym#
144        synonym#
145        synonym#
146        synonym#
147        synonym#
148        synonym#
149        synonym#
150        synonym#
151        synonym#
152        synonym#
153        synonym#
154        synonym#
155        synonym#
> read.table("sppErrors.verdict",header=F,sep="\t") -> verd#
> table(verd)#
verd#
   SPECIFICITY addtl pathovar   ambig/review      identical identical rDNA       spelling        synonym #
            20             33             22              1              2             17             60 #
> read.table("sppErrors.verdict",header=F,sep="\t") -> verd#
> table(verd)#
verd#
   SPECIFICITY addtl pathovar   ambig/review      identical       spelling        synonym #
            20             33             24              1             17             60 #
> read.table("sppErrors.verdict",header=T,sep="\t") -> verd#
> table(verd)#
verd#
    PATHOVAR  SPECIFICITY ambig/review    identical     spelling      synonym #
          33           20           24            1           17           60 #
> pie(verd)#
Error in pie(verd) : 'x' values must be positive.#
> pie(table(verd))#
> read.table("sppErrors.verdict",header=T,sep="\t") -> verd#
> pie(table(verd))#
> barplot(table(verd))#
> barplot(table(toupper(verd)))#
> barplot(toupper(table(verd)))#
Error in -0.01 * height : non-numeric argument to binary operator#
> toupper(verd) -> verd#
> barplot(table(verd))#
> verd#
[1] "C(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5)"#
> read.table("sppErrors.verdict",header=T,sep="\t") -> verd#
> toupper(verd)-> verd#
> verd#
[1] "C(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5)"#
> read.table("sppErrors.verdict",header=T,sep="\t") -> verd#
> verd#
        PATHOVAR#
1       PATHOVAR#
2       PATHOVAR#
3       PATHOVAR#
4       PATHOVAR#
5       PATHOVAR#
6       PATHOVAR#
7       PATHOVAR#
8       PATHOVAR#
9       PATHOVAR#
10      PATHOVAR#
11      PATHOVAR#
12      PATHOVAR#
13      PATHOVAR#
14      PATHOVAR#
15      PATHOVAR#
16      PATHOVAR#
17      PATHOVAR#
18      PATHOVAR#
19      PATHOVAR#
20      PATHOVAR#
21      PATHOVAR#
22      PATHOVAR#
23      PATHOVAR#
24      PATHOVAR#
25      PATHOVAR#
26      PATHOVAR#
27      PATHOVAR#
28      PATHOVAR#
29      PATHOVAR#
30      PATHOVAR#
31      PATHOVAR#
32      PATHOVAR#
33  ambig/review#
34  ambig/review#
35  ambig/review#
36  ambig/review#
37  ambig/review#
38  ambig/review#
39  ambig/review#
40  ambig/review#
41  ambig/review#
42  ambig/review#
43  ambig/review#
44  ambig/review#
45  ambig/review#
46  ambig/review#
47  ambig/review#
48  ambig/review#
49  ambig/review#
50  ambig/review#
51  ambig/review#
52  ambig/review#
53  ambig/review#
54  ambig/review#
55  ambig/review#
56  ambig/review#
57   SPECIFICITY#
58   SPECIFICITY#
59   SPECIFICITY#
60   SPECIFICITY#
61   SPECIFICITY#
62   SPECIFICITY#
63   SPECIFICITY#
64   SPECIFICITY#
65   SPECIFICITY#
66   SPECIFICITY#
67   SPECIFICITY#
68   SPECIFICITY#
69   SPECIFICITY#
70   SPECIFICITY#
71   SPECIFICITY#
72   SPECIFICITY#
73   SPECIFICITY#
74   SPECIFICITY#
75   SPECIFICITY#
76   SPECIFICITY#
77      spelling#
78      spelling#
79      spelling#
80      spelling#
81      spelling#
82      spelling#
83      spelling#
84      spelling#
85      spelling#
86      spelling#
87      spelling#
88      spelling#
89      spelling#
90      spelling#
91      spelling#
92      spelling#
93      spelling#
94       synonym#
95       synonym#
96       synonym#
97       synonym#
98       synonym#
99       synonym#
100      synonym#
101      synonym#
102      synonym#
103      synonym#
104      synonym#
105      synonym#
106      synonym#
107      synonym#
108      synonym#
109      synonym#
110      synonym#
111      synonym#
112      synonym#
113      synonym#
114      synonym#
115      synonym#
116      synonym#
117      synonym#
118      synonym#
119      synonym#
120      synonym#
121      synonym#
122      synonym#
123      synonym#
124      synonym#
125      synonym#
126      synonym#
127      synonym#
128      synonym#
129      synonym#
130      synonym#
131      synonym#
132      synonym#
133      synonym#
134      synonym#
135      synonym#
136      synonym#
137      synonym#
138      synonym#
139      synonym#
140      synonym#
141      synonym#
142      synonym#
143      synonym#
144      synonym#
145      synonym#
146      synonym#
147      synonym#
148      synonym#
149      synonym#
150      synonym#
151      synonym#
152      synonym#
153      synonym#
> toupper(verd[,1]) -> verd[,1]#
> verd#
        PATHOVAR#
1       PATHOVAR#
2       PATHOVAR#
3       PATHOVAR#
4       PATHOVAR#
5       PATHOVAR#
6       PATHOVAR#
7       PATHOVAR#
8       PATHOVAR#
9       PATHOVAR#
10      PATHOVAR#
11      PATHOVAR#
12      PATHOVAR#
13      PATHOVAR#
14      PATHOVAR#
15      PATHOVAR#
16      PATHOVAR#
17      PATHOVAR#
18      PATHOVAR#
19      PATHOVAR#
20      PATHOVAR#
21      PATHOVAR#
22      PATHOVAR#
23      PATHOVAR#
24      PATHOVAR#
25      PATHOVAR#
26      PATHOVAR#
27      PATHOVAR#
28      PATHOVAR#
29      PATHOVAR#
30      PATHOVAR#
31      PATHOVAR#
32      PATHOVAR#
33  AMBIG/REVIEW#
34  AMBIG/REVIEW#
35  AMBIG/REVIEW#
36  AMBIG/REVIEW#
37  AMBIG/REVIEW#
38  AMBIG/REVIEW#
39  AMBIG/REVIEW#
40  AMBIG/REVIEW#
41  AMBIG/REVIEW#
42  AMBIG/REVIEW#
43  AMBIG/REVIEW#
44  AMBIG/REVIEW#
45  AMBIG/REVIEW#
46  AMBIG/REVIEW#
47  AMBIG/REVIEW#
48  AMBIG/REVIEW#
49  AMBIG/REVIEW#
50  AMBIG/REVIEW#
51  AMBIG/REVIEW#
52  AMBIG/REVIEW#
53  AMBIG/REVIEW#
54  AMBIG/REVIEW#
55  AMBIG/REVIEW#
56  AMBIG/REVIEW#
57   SPECIFICITY#
58   SPECIFICITY#
59   SPECIFICITY#
60   SPECIFICITY#
61   SPECIFICITY#
62   SPECIFICITY#
63   SPECIFICITY#
64   SPECIFICITY#
65   SPECIFICITY#
66   SPECIFICITY#
67   SPECIFICITY#
68   SPECIFICITY#
69   SPECIFICITY#
70   SPECIFICITY#
71   SPECIFICITY#
72   SPECIFICITY#
73   SPECIFICITY#
74   SPECIFICITY#
75   SPECIFICITY#
76   SPECIFICITY#
77      SPELLING#
78      SPELLING#
79      SPELLING#
80      SPELLING#
81      SPELLING#
82      SPELLING#
83      SPELLING#
84      SPELLING#
85      SPELLING#
86      SPELLING#
87      SPELLING#
88      SPELLING#
89      SPELLING#
90      SPELLING#
91      SPELLING#
92      SPELLING#
93      SPELLING#
94       SYNONYM#
95       SYNONYM#
96       SYNONYM#
97       SYNONYM#
98       SYNONYM#
99       SYNONYM#
100      SYNONYM#
101      SYNONYM#
102      SYNONYM#
103      SYNONYM#
104      SYNONYM#
105      SYNONYM#
106      SYNONYM#
107      SYNONYM#
108      SYNONYM#
109      SYNONYM#
110      SYNONYM#
111      SYNONYM#
112      SYNONYM#
113      SYNONYM#
114      SYNONYM#
115      SYNONYM#
116      SYNONYM#
117      SYNONYM#
118      SYNONYM#
119      SYNONYM#
120      SYNONYM#
121      SYNONYM#
122      SYNONYM#
123      SYNONYM#
124      SYNONYM#
125      SYNONYM#
126      SYNONYM#
127      SYNONYM#
128      SYNONYM#
129      SYNONYM#
130      SYNONYM#
131      SYNONYM#
132      SYNONYM#
133      SYNONYM#
134      SYNONYM#
135      SYNONYM#
136      SYNONYM#
137      SYNONYM#
138      SYNONYM#
139      SYNONYM#
140      SYNONYM#
141      SYNONYM#
142      SYNONYM#
143      SYNONYM#
144      SYNONYM#
145      SYNONYM#
146      SYNONYM#
147      SYNONYM#
148      SYNONYM#
149      SYNONYM#
150      SYNONYM#
151      SYNONYM#
152      SYNONYM#
153      SYNONYM#
> barplot(table(verd))#
> barplot(table(verd)/nrow(verd))#
> read.table("sppErrors.verdict",header=T,sep="\t") -> verd#
> toupper(verd[,1]) -> verd[,1]#
> barplot(table(verd)/nrow(verd))#
> barplot(table(verd)/nrow(verd))#
> read.table("sppErrors.verdict",header=T,sep="\t") -> verd#
> toupper(verd[,1]) -> verd[,1]#
> barplot(table(verd)/nrow(verd))#
> pie(table(verd))#
> read.table("sppErrors.verdict",header=T,sep="\t") -> verd#
> toupper(verd[,1]) -> verd[,1]#
> pie(table(verd))#
> rm(list=ls())#
> orderFactors <- function(reads){#
+ #
+ 	levelIndex <- pmatch("level",colnames(reads));#
+ 	taxonIndex <- pmatch("taxon",colnames(reads));#
+ #
+ 	reads[which(reads[,taxonIndex]=="Uncertain"),levelIndex] <- "Uncertain";#
+ 	reads[which(reads[,taxonIndex]=="Filtered"),levelIndex] <- "Filtered";#
+ #
+ 	newOrder <- numeric(nrow(reads));#
+ 	reads<- cbind(reads,newOrder);#
+ 	reads[which(reads[,levelIndex]=="Uncertain"),ncol(reads)] <- 1;#
+ 	reads[which(reads[,levelIndex]=="Filtered"),ncol(reads)] <- 2;#
+ 	#
+ 	reads[which(reads[,levelIndex]=="SUPERKINGDOM"),ncol(reads)] <- 3;#
+ 	reads[which(reads[,levelIndex]=="KINGDOM"),ncol(reads)] <- 4;#
+ 	reads[which(reads[,levelIndex]=="PHYLUM"),ncol(reads)] <- 5;#
+ 	reads[which(reads[,levelIndex]=="CLASS"),ncol(reads)] <- 6;#
+ 	reads[which(reads[,levelIndex]=="ORDER"),ncol(reads)] <- 7;#
+ 	reads[which(reads[,levelIndex]=="FAMILY"),ncol(reads)] <- 8;#
+ 	reads[which(reads[,levelIndex]=="GENUS"),ncol(reads)] <- 9;#
+ 	reads[which(reads[,levelIndex]=="SPECIES"),ncol(reads)] <- 10;#
+ #
+ 	print(paste("no non-missing arguments probably mean that the levels aren't found in this dataset."));#
+ 	newFactor <- with(reads,reorder(as.factor(level),reads[,ncol(reads)])); # last arg was newOrder;#
+ 	reads[,levelIndex] <- newFactor;#
+ #
+ 	return(reads);#
+ }#
> #
> corpus <- read.table("rdp_download_5172seqs.tsv",as.is=T,sep="\t",header=T);#
> corpus <- corpus[,-3]; # don't need the sequence here!#
> qcmin <- read.table("qc.minscore",header=F,as.is=T,sep="\t");#
> #qc99 <- read.table("qc.99",header=F,as.is=T,sep="\t");#
> #qc97 <- read.table("qc.97",header=F,as.is=T,sep="\t");#
> #qc95 <- read.table("qc.95",header=F,as.is=T,sep="\t");#
> #
> qcmin <- qcmin[,c(1,4,5,7,8,9,10,11,12,13)];#
> #qc99 <- qc99[,c(1,4,5,7,8,9,10,11,12,13)];#
> #qc97 <- qc97[,c(1,4,5,7,8,9,10,11,12,13)];#
> #
> colnames(qcmin) <- c('id','level','taxon','score','topscore','% ident','cov','full','votesfor','votestotal');#
> #type <- append(rep("min",nrow(qcmin)),append(rep("99",nrow(qc99)),rep("97",nrow(qc97))));#
> #results <- cbind(rbind(qcmin,qc99,qc97),type);#
> results <- merge(corpus,qcmin,by="id");#
> results <- orderFactors( as.data.frame(results));#
[1] "no non-missing arguments probably mean that the levels aren't found in this dataset."#
Warning messages:#
1: In max(i) : no non-missing arguments to max; returning -Inf#
2: In max(i) : no non-missing arguments to max; returning -Inf#
3: In max(i) : no non-missing arguments to max; returning -Inf#
4: In max(i) : no non-missing arguments to max; returning -Inf#
> #
> mismatches <- character(nrow(results));#
> indices <- c()#
> for( i in 1:nrow(results )){#
+ 	if( results[i,"Taxa"] != results[i,"taxon"] ){#
+ 		indices <- append(indices,i);#
+ 		mismatches[i] <- paste("MISMATCH_",results[i,"level"],sep="");#
+ #
+ 	} else {#
+ 		mismatches[i] <- paste("MATCH_",results[i,"level"],sep="");#
+ 	}#
+ }#
> #
> errors <- results[indices,];#
> #
> print(paste("there are: ",nrow(errors)," incongruencies."));#
[1] "there are:  389  incongruencies."#
> filtered <- which(!is.na(pmatch(errors[,"taxon"],"Filtered",dup=T)));#
> uncertain <- which(!is.na(pmatch(errors[,"taxon"],"Uncertain",dup=T)));#
> #
> print(paste("there are:",nrow(errors)," errors to review."));#
[1] "there are: 389  errors to review."#
> print(paste("there are: ",length(filtered)," filtered reads and", length(uncertain),"uncertain reads"));#
[1] "there are:  31  filtered reads and 50 uncertain reads"#
> print(paste("without review: ", (1-nrow(errors)/nrow(results)),"% of the assignments agree with RDP-II."));#
[1] "without review:  0.924787316318639 % of the assignments agree with RDP-II."#
> #
> myBarPlot <- barplot(table(errors$level)/nrow(errors),col="cornflowerblue");#
> #labels <- toupper(names(table(errors$level)));#
> #mtext(labels,at=colMeans(myBarPlot),side=1,line=1,cex=0.75);#
> title("Resolution of Errors");#
> #
> print("recall that 35 of the 41 Uncertain reads are picked up (false negatives) when we permit null genera from the taxonomy database.");#
[1] "recall that 35 of the 41 Uncertain reads are picked up (false negatives) when we permit null genera from the taxonomy database."#
> print("review the filtered reads.");#
[1] "review the filtered reads."#
> print("of the remaining reads::::");#
[1] "of the remaining reads::::"#
> #
>
rm(list=ls()
)
ls()
orderFactors <- function(reads){#
#
	levelIndex <- pmatch("level",colnames(reads));#
	taxonIndex <- pmatch("taxon",colnames(reads));#
#
	reads[which(reads[,taxonIndex]=="Uncertain"),levelIndex] <- "Uncertain";#
	reads[which(reads[,taxonIndex]=="Filtered"),levelIndex] <- "Filtered";#
#
	newOrder <- numeric(nrow(reads));#
	reads<- cbind(reads,newOrder);#
	reads[which(reads[,levelIndex]=="Uncertain"),ncol(reads)] <- 1;#
	reads[which(reads[,levelIndex]=="Filtered"),ncol(reads)] <- 2;#
	#
	reads[which(reads[,levelIndex]=="SUPERKINGDOM"),ncol(reads)] <- 3;#
	reads[which(reads[,levelIndex]=="KINGDOM"),ncol(reads)] <- 4;#
	reads[which(reads[,levelIndex]=="PHYLUM"),ncol(reads)] <- 5;#
	reads[which(reads[,levelIndex]=="CLASS"),ncol(reads)] <- 6;#
	reads[which(reads[,levelIndex]=="ORDER"),ncol(reads)] <- 7;#
	reads[which(reads[,levelIndex]=="FAMILY"),ncol(reads)] <- 8;#
	reads[which(reads[,levelIndex]=="GENUS"),ncol(reads)] <- 9;#
	reads[which(reads[,levelIndex]=="SPECIES"),ncol(reads)] <- 10;#
#
	print(paste("no non-missing arguments probably mean that the levels aren't found in this dataset."));#
	newFactor <- with(reads,reorder(as.factor(level),reads[,ncol(reads)])); # last arg was newOrder;#
	reads[,levelIndex] <- newFactor;#
#
	return(reads);#
}#
#
corpus <- read.table("rdp_download_5172seqs.tsv",as.is=T,sep="\t",header=T);#
corpus <- corpus[,-3]; # don't need the sequence here!#
qcmin <- read.table("qc.min",header=F,as.is=T,sep="\t");#
#qc99 <- read.table("qc.99",header=F,as.is=T,sep="\t");#
#qc97 <- read.table("qc.97",header=F,as.is=T,sep="\t");#
#qc95 <- read.table("qc.95",header=F,as.is=T,sep="\t");#
#
qcmin <- qcmin[,c(1,4,5,7,8,9,10,11,12,13)];#
#qc99 <- qc99[,c(1,4,5,7,8,9,10,11,12,13)];#
#qc97 <- qc97[,c(1,4,5,7,8,9,10,11,12,13)];#
#
colnames(qcmin) <- c('id','level','taxon','score','topscore','% ident','cov','full','votesfor','votestotal');#
#type <- append(rep("min",nrow(qcmin)),append(rep("99",nrow(qc99)),rep("97",nrow(qc97))));#
#results <- cbind(rbind(qcmin,qc99,qc97),type);#
results <- merge(corpus,qcmin,by="id");#
results <- orderFactors( as.data.frame(results));#
#
mismatches <- character(nrow(results));#
indices <- c()#
for( i in 1:nrow(results )){#
	if( results[i,"Taxa"] != results[i,"taxon"] ){#
		indices <- append(indices,i);#
		mismatches[i] <- paste("MISMATCH_",results[i,"level"],sep="");#
#
	} else {#
		mismatches[i] <- paste("MATCH_",results[i,"level"],sep="");#
	}#
}#
#
errors <- results[indices,];#
#
print(paste("there are: ",nrow(errors)," incongruencies."));#
filtered <- which(!is.na(pmatch(errors[,"taxon"],"Filtered",dup=T)));#
uncertain <- which(!is.na(pmatch(errors[,"taxon"],"Uncertain",dup=T)));#
#
print(paste("there are:",nrow(errors)," errors to review."));#
print(paste("there are: ",length(filtered)," filtered reads and", length(uncertain),"uncertain reads"));#
print(paste("without review: ", (1-nrow(errors)/nrow(results)),"% of the assignments agree with RDP-II."));#
#
myBarPlot <- barplot(table(errors$level)/nrow(errors),col="cornflowerblue");#
#labels <- toupper(names(table(errors$level)));#
#mtext(labels,at=colMeans(myBarPlot),side=1,line=1,cex=0.75);#
title("Resolution of Errors");#
#
print("recall that 35 of the 41 Uncertain reads are picked up (false negatives) when we permit null genera from the taxonomy database.");#
print("review the filtered reads.");#
print("of the remaining reads::::");
table(mismatches)
4811/5172
cbind(errors,mismatches) -> output
cbind(results,mismatches) -> intermediate
dim(intermediate)
intermediate[1:3,]
which(intermediate[,"mismatches"]=="MISMATCH_SPECIES") -> inds
length(inds)
intermediate[inds,
]
intermediate[inds,] -> sppErrors
write.table(sppErrors,"sppErrors2.txt",sep="\t",quote=F);
read.table(sppErrors.curated)
read.table("sppErrors.curated",sep="\t",header=T) -> curated
read.table("sppErrors.curated",sep="\t",header=T,fill=T) -> curated
dim(curated)
curated[1:3,]
sppErrors[1:3,]
merge(sppErrors,curated,by="id") -> tmp
dim(tmp)
dim(sppErrors)
colnames(tmp)
sppErrors[,c(1,2,3,4)] -> sppErrors
colnames(sppErrors)
colnames(curated)
colnames(sppErrors) <- c("id","sppErrors.taxa","sppErrors.level","sppErrors.taxon")
merge(sppErrors,curated,by="id") -> tmp
dim(tmp)
tmp[1:5,]
write.table(tmp,file="sppMergeCheck.txt",quote=F,row.names=F);
write.table(tmp,file="sppMergeCheck.txt",quote=F,row.names=F,sep="\t");
1-nrow(errors)/nrow(results)
library("plotrix")
?axis.break
plot(3:10,main="Axis break test")#
 # put a break at the default axis and position#
 axis.break()#
 axis.break(2,2.9,style="zigzag")#
 twogrp<-c(rnorm(10)+4,rnorm(10)+20)#
 gap.plot(twogrp,gap=c(8,16),xlab="Index",ylab="Group values",#
  main="Two separated groups with gap axis break",#
  col=c(rep(2,10),rep(3,10)),ytics=c(3,5,18,20))#
 legend(12,6,c("Low group","High group"),pch=1,col=2:3)
plot(3:10,main="Axis break test")#
 # put a break at the default axis and position#
 axis.break()#
 axis.break(2,2.9,style="gap")#
 twogrp<-c(rnorm(10)+4,rnorm(10)+20)#
 gap.plot(twogrp,gap=c(8,16),xlab="Index",ylab="Group values",#
  main="Two separated groups with gap axis break",#
  col=c(rep(2,10),rep(3,10)),ytics=c(3,5,18,20))#
 legend(12,6,c("Low group","High group"),pch=1,col=2:3)
plot(3:10,main="Axis break test")#
 # put a break at the default axis and position#
 axis.break()#
 axis.break(2,2.9,style="slash")#
 twogrp<-c(rnorm(10)+4,rnorm(10)+20)#
 gap.plot(twogrp,gap=c(8,16),xlab="Index",ylab="Group values",#
  main="Two separated groups with gap axis break",#
  col=c(rep(2,10),rep(3,10)),ytics=c(3,5,18,20))#
 legend(12,6,c("Low group","High group"),pch=1,col=2:3)
?gap.plot
colnames(intermediate)
intermediate[1:3,]
orderFactors <- function(reads){#
#
	levelIndex <- pmatch("level",colnames(reads));#
	taxonIndex <- pmatch("taxon",colnames(reads));#
#
	reads[which(reads[,taxonIndex]=="Uncertain"),levelIndex] <- "Uncertain";#
	reads[which(reads[,taxonIndex]=="Filtered"),levelIndex] <- "Filtered";#
#
	newOrder <- numeric(nrow(reads));#
	reads<- cbind(reads,newOrder);#
	reads[which(reads[,levelIndex]=="Uncertain"),ncol(reads)] <- 1;#
	reads[which(reads[,levelIndex]=="Filtered"),ncol(reads)] <- 2;#
	#
	reads[which(reads[,levelIndex]=="SUPERKINGDOM"),ncol(reads)] <- 3;#
	reads[which(reads[,levelIndex]=="KINGDOM"),ncol(reads)] <- 4;#
	reads[which(reads[,levelIndex]=="PHYLUM"),ncol(reads)] <- 5;#
	reads[which(reads[,levelIndex]=="CLASS"),ncol(reads)] <- 6;#
	reads[which(reads[,levelIndex]=="ORDER"),ncol(reads)] <- 7;#
	reads[which(reads[,levelIndex]=="FAMILY"),ncol(reads)] <- 8;#
	reads[which(reads[,levelIndex]=="GENUS"),ncol(reads)] <- 9;#
	reads[which(reads[,levelIndex]=="SPECIES"),ncol(reads)] <- 10;#
#
	print(paste("no non-missing arguments probably mean that the levels aren't found in this dataset."));#
	newFactor <- with(reads,reorder(as.factor(level),reads[,ncol(reads)])); # last arg was newOrder;#
	reads[,levelIndex] <- newFactor;#
#
	return(reads);#
}#
#
corpus <- read.table("rdp_download_5172seqs.tsv",as.is=T,sep="\t",header=T);#
corpus <- corpus[,-3]; # don't need the sequence here!#
qcmin <- read.table("qc.min",header=F,as.is=T,sep="\t");#
#qc99 <- read.table("qc.99",header=F,as.is=T,sep="\t");#
#qc97 <- read.table("qc.97",header=F,as.is=T,sep="\t");#
#qc95 <- read.table("qc.95",header=F,as.is=T,sep="\t");#
#
qcmin <- qcmin[,c(1,4,5,7,8,9,10,11,12,13)];#
#qc99 <- qc99[,c(1,4,5,7,8,9,10,11,12,13)];#
#qc97 <- qc97[,c(1,4,5,7,8,9,10,11,12,13)];#
#
colnames(qcmin) <- c('id','level','taxon','score','topscore','% ident','cov','full','votesfor','votestotal');#
#type <- append(rep("min",nrow(qcmin)),append(rep("99",nrow(qc99)),rep("97",nrow(qc97))));#
#results <- cbind(rbind(qcmin,qc99,qc97),type);#
results <- merge(corpus,qcmin,by="id");#
results <- orderFactors( as.data.frame(results));#
#
mismatches <- character(nrow(results));#
indices <- c()#
for( i in 1:nrow(results )){#
	if( results[i,"Taxa"] != results[i,"taxon"] ){#
		indices <- append(indices,i);#
		mismatches[i] <- "Incongruent";#
#
	} else {#
		mismatches[i] <- "Congruent";#
	}#
}#
#
errors <- results[indices,];#
#
print(paste("there are: ",nrow(errors)," incongruencies."));#
filtered <- which(!is.na(pmatch(errors[,"taxon"],"Filtered",dup=T)));#
uncertain <- which(!is.na(pmatch(errors[,"taxon"],"Uncertain",dup=T)));#
#
print(paste("there are:",nrow(errors)," errors to review."));#
print(paste("there are: ",length(filtered)," filtered reads and", length(uncertain),"uncertain reads"));#
print(paste("without review: ", (1-nrow(errors)/nrow(results)),"% of the assignments agree with RDP-II."));#
#
myBarPlot <- barplot(table(errors$level)/nrow(errors),col="cornflowerblue");#
#labels <- toupper(names(table(errors$level)));#
#mtext(labels,at=colMeans(myBarPlot),side=1,line=1,cex=0.75);#
title("Resolution of Errors");#
#
print("recall that 35 of the 41 Uncertain reads are picked up (false negatives) when we permit null genera from the taxonomy database.");#
print("review the filtered reads.");#
print("of the remaining reads::::");
table(mismatches)
pie(table(mismatches))
pie(table(mismatches,results$level))
pie(table(results$level,results$mismatches))
nrow(results)
colnames(results)
pie(table(results$level,results$mismatches))orderFactors <- function(reads){#
#
	levelIndex <- pmatch("level",colnames(reads));#
	taxonIndex <- pmatch("taxon",colnames(reads));#
#
	reads[which(reads[,taxonIndex]=="Uncertain"),levelIndex] <- "Uncertain";#
	reads[which(reads[,taxonIndex]=="Filtered"),levelIndex] <- "Filtered";#
#
	newOrder <- numeric(nrow(reads));#
	reads<- cbind(reads,newOrder);#
	reads[which(reads[,levelIndex]=="Uncertain"),ncol(reads)] <- 1;#
	reads[which(reads[,levelIndex]=="Filtered"),ncol(reads)] <- 2;#
	#
	reads[which(reads[,levelIndex]=="SUPERKINGDOM"),ncol(reads)] <- 3;#
	reads[which(reads[,levelIndex]=="KINGDOM"),ncol(reads)] <- 4;#
	reads[which(reads[,levelIndex]=="PHYLUM"),ncol(reads)] <- 5;#
	reads[which(reads[,levelIndex]=="CLASS"),ncol(reads)] <- 6;#
	reads[which(reads[,levelIndex]=="ORDER"),ncol(reads)] <- 7;#
	reads[which(reads[,levelIndex]=="FAMILY"),ncol(reads)] <- 8;#
	reads[which(reads[,levelIndex]=="GENUS"),ncol(reads)] <- 9;#
	reads[which(reads[,levelIndex]=="SPECIES"),ncol(reads)] <- 10;#
#
	print(paste("no non-missing arguments probably mean that the levels aren't found in this dataset."));#
	newFactor <- with(reads,reorder(as.factor(level),reads[,ncol(reads)])); # last arg was newOrder;#
	reads[,levelIndex] <- newFactor;#
#
	return(reads);#
}#
#
corpus <- read.table("rdp_download_5172seqs.tsv",as.is=T,sep="\t",header=T);#
corpus <- corpus[,-3]; # don't need the sequence here!#
qcmin <- read.table("qc.min",header=F,as.is=T,sep="\t");#
#qc99 <- read.table("qc.99",header=F,as.is=T,sep="\t");#
#qc97 <- read.table("qc.97",header=F,as.is=T,sep="\t");#
#qc95 <- read.table("qc.95",header=F,as.is=T,sep="\t");#
#
qcmin <- qcmin[,c(1,4,5,7,8,9,10,11,12,13)];#
#qc99 <- qc99[,c(1,4,5,7,8,9,10,11,12,13)];#
#qc97 <- qc97[,c(1,4,5,7,8,9,10,11,12,13)];#
#
colnames(qcmin) <- c('id','level','taxon','score','topscore','% ident','cov','full','votesfor','votestotal');#
#type <- append(rep("min",nrow(qcmin)),append(rep("99",nrow(qc99)),rep("97",nrow(qc97))));#
#results <- cbind(rbind(qcmin,qc99,qc97),type);#
results <- merge(corpus,qcmin,by="id");#
results <- orderFactors( as.data.frame(results));#
#
mismatches <- character(nrow(results));#
indices <- c()#
for( i in 1:nrow(results )){#
	if( results[i,"Taxa"] != results[i,"taxon"] ){#
		indices <- append(indices,i);#
		mismatches[i] <- "Incongruent";#
#
	} else {#
		mismatches[i] <- "Congruent";#
	}#
}#
#
results <- cbind(results,mismatches);#
errors <- results[indices,];#
#
print(paste("there are: ",nrow(errors)," incongruencies."));#
filtered <- which(!is.na(pmatch(errors[,"taxon"],"Filtered",dup=T)));#
uncertain <- which(!is.na(pmatch(errors[,"taxon"],"Uncertain",dup=T)));#
#
print(paste("there are:",nrow(errors)," errors to review."));#
print(paste("there are: ",length(filtered)," filtered reads and", length(uncertain),"uncertain reads"));#
print(paste("without review: ", (1-nrow(errors)/nrow(results)),"% of the assignments agree with RDP-II."));#
#
myBarPlot <- barplot(table(errors$level)/nrow(errors),col="cornflowerblue");#
#labels <- toupper(names(table(errors$level)));#
#mtext(labels,at=colMeans(myBarPlot),side=1,line=1,cex=0.75);#
title("Resolution of Errors");#
#
print("recall that 35 of the 41 Uncertain reads are picked up (false negatives) when we permit null genera from the taxonomy database.");#
print("review the filtered reads.");#
print("of the remaining reads::::");
colnames(results)
table(results$level,results$mismatches)
barplot(table(results$level,results$mismatches))
barplot(table(results$level,results$mismatches),beside=T)
barplot(table(results$mismatches,results$level),beside=T)
	axis(#
		side=2, # Y axis#
		las=1, # text horizontal#
		at=c(25,50,75,100,125,150,4700,4800,4900,5000), # position of labels#
		labels=c("25","50","75","100","125","150","4700","4800","4900","5000")#
	);#
#
	barplot(table(dataset$mismatches,dataset$level),beside=T)
dataset <- results
	axis(#
		side=2, # Y axis#
		las=1, # text horizontal#
		at=c(25,50,75,100,125,150,4700,4800,4900,5000), # position of labels#
		labels=c("25","50","75","100","125","150","4700","4800","4900","5000")#
	);#
#
	barplot(table(dataset$mismatches,dataset$level),beside=T)
	axis(#
		side=2, # Y axis#
		las=1, # text horizontal#
		at=c(25,50,75,100,125,150,4700,4800,4900,5000), # position of labels#
		labels=c("25","50","75","100","125","150","4700","4800","4900","5000")#
	);#
#
	axis.break(axis=2,breakpos=150,style="slash") # break the left Y axis#
#
	barplot(table(dataset$mismatches,dataset$level),beside=T)
library(gplots)
	box() # draw four sides to the plot area#
	axis(#
		side=2, # Y axis#
		las=1, # text horizontal#
		at=c(25,50,75,100,125,150,4700,4800,4900,5000), # position of labels#
		labels=c("25","50","75","100","125","150","4700","4800","4900","5000")#
	);#
#
	axis.break(axis=2,breakpos=150,style="slash") # break the left Y axis#
#
	barplot(table(dataset$mismatches,dataset$level),beside=T)
?plot
plot.new()
plot(axis=F)
plot(type="n",axis=F)
plot.new()
#
	box() # draw four sides to the plot area#
	axis(#
		side=2, # Y axis#
		las=1, # text horizontal#
		at=c(25,50,75,100,125,150,4700,4800,4900,5000), # position of labels#
		labels=c("25","50","75","100","125","150","4700","4800","4900","5000")#
	);#
#
	axis.break(axis=2,breakpos=150,style="slash") # break the left Y axis#
#
	barplot(table(dataset$mismatches,dataset$level),beside=T)
?plotCI
	barplot(table(dataset$mismatches,dataset$level),beside=T,axes=F)
	plot(seq(from = 0, to = 2, by = 0.5), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along x-axis#
	text("l", x = 1.20, y = 0, srt = -45, font = 2)#
	text("l", x = 1.25, y = 0, srt = -45, font = 2)#
	lines(x = c(0, 1.19), y = c(0,0), lwd = 2)#
	lines(x = c(1.25, 4.0), y = c(0,0), lwd = 2)#
# Add break lines along y-axis#
	text("l", y = 1.15, x = 0, srt = -45, font = 2)#
	text("l", y = 1.25, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.15), x = c(0,0), lwd = 2)#
	lines(y = c(1.27, 4), x = c(0,0), lwd = 2)#
# Add x-axis (tick marks and labels)#
	mtext("l", side = 1, line = -1.25, at = seq(0, 2, 0.5), font = 2)#
	axis(side = 1, at = seq(0, 2, 0.5), line = -1, tick = FALSE,labels = c("0.0", "0.5", "1.0", "5.5", "6.0"))#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 4, 0.5), font = 2)#
	axis(side = 2, at = seq(0, 4, 0.5), line = -1, tick = FALSE,#
	labels = as.character(c(seq(from = 0, to = 4, by = 2),#
	seq(from = 100, to = 200, by = 20))))
	plot(seq(from = 0, to = 2, by = 0.5), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along x-axis#
	text("l", x = 1.20, y = 0, srt = -45, font = 2)#
	text("l", x = 1.25, y = 0, srt = -45, font = 2)#
	lines(x = c(0, 1.19), y = c(0,0), lwd = 2)#
	lines(x = c(1.25, 4.0), y = c(0,0), lwd = 2)#
# Add break lines along y-axis#
	text("l", y = 1.15, x = 0, srt = -45, font = 2)#
	text("l", y = 1.25, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.15), x = c(0,0), lwd = 2)#
	lines(y = c(1.27, 4), x = c(0,0), lwd = 2)#
# Add x-axis (tick marks and labels)#
	mtext("l", side = 1, line = -1.25, at = seq(0, 2, 0.5), font = 2)#
	axis(side = 1, at = seq(0, 2, 0.5), line = -1, tick = FALSE,labels = c("0.0", "0.5", "1.0", "5.5", "6.0"))#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 4, 0.5), font = 2)#
	axis(side = 2, at = seq(0, 4, 0.5), line = -1, tick = FALSE,#
	labels = as.character(c(seq(from = 0, to = 4, by = 2),#
	seq(from = 100, to = 200, by = 20))))
	plot(seq(from = 0, to = 2, by = 0.5), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along x-axis#
	text("l", x = 1.20, y = 0, srt = -45, font = 2)#
	text("l", x = 1.25, y = 0, srt = -45, font = 2)#
	lines(x = c(0, 1.19), y = c(0,0), lwd = 2)#
	lines(x = c(1.25, 4.0), y = c(0,0), lwd = 2)#
# Add break lines along y-axis#
	text("l", y = 1.15, x = 0, srt = -45, font = 2)#
	text("l", y = 1.25, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.15), x = c(0,0), lwd = 2)#
	lines(y = c(1.27, 4), x = c(0,0), lwd = 2)#
# Add x-axis (tick marks and labels)#
	mtext("l", side = 1, line = -1.25, at = seq(0, 2, 0.5), font = 2)#
	axis(side = 1, at = seq(0, 2, 0.5), line = -1, tick = FALSE,labels = c("0.0", "0.5", "1.0", "5.5", "6.0"))#
	#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 4, 0.5), font = 2)#
	axis(side = 2, at = seq(0, 4, 0.5), line = -1, tick = FALSE,#
	labels = as.character(c(seq(from = 0, to = 4, by = 2),#
	seq(from = 100, to = 200, by = 20))))
	plot(seq(from = 0, to = 2, by = 0.5), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along x-axis#
	#text("l", x = 1.20, y = 0, srt = -45, font = 2)#
	#text("l", x = 1.25, y = 0, srt = -45, font = 2)#
	#lines(x = c(0, 1.19), y = c(0,0), lwd = 2)#
	#lines(x = c(1.25, 4.0), y = c(0,0), lwd = 2)#
# Add break lines along y-axis#
	text("l", y = 1.15, x = 0, srt = -45, font = 2)#
	text("l", y = 1.25, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.15), x = c(0,0), lwd = 2)#
	lines(y = c(1.27, 4), x = c(0,0), lwd = 2)#
# Add x-axis (tick marks and labels)#
	mtext("l", side = 1, line = -1.25, at = seq(0, 2, 0.5), font = 2)#
	axis(side = 1, at = seq(0, 2, 0.5), line = -1, tick = FALSE,labels = c("0.0", "0.5", "1.0", "5.5", "6.0"))#
	#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 4, 0.5), font = 2)#
	axis(side = 2, at = seq(0, 4, 0.5), line = -1, tick = FALSE,#
	labels = as.character(c(seq(from = 0, to = 4, by = 2),#
	seq(from = 100, to = 200, by = 20))))
	plot(seq(from = 0, to = 2, by = 0.5), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along x-axis#
	text("l", x = 1.20, y = 0, srt = -45, font = 2)#
	text("l", x = 1.25, y = 0, srt = -45, font = 2)#
	lines(x = c(0, 1.19), y = c(0,0), lwd = 2)#
	lines(x = c(1.25, 4.0), y = c(0,0), lwd = 2)#
# Add break lines along y-axis#
	text("l", y = 1.15, x = 0, srt = -45, font = 2)#
	text("l", y = 1.25, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.15), x = c(0,0), lwd = 2)#
	lines(y = c(1.27, 4), x = c(0,0), lwd = 2)#
# Add x-axis (tick marks and labels)#
	mtext("l", side = 1, line = -1.25, at = seq(0, 2, 0.5), font = 2)#
	axis(side = 1, at = seq(0, 2, 0.5), line = -1, tick = FALSE,labels = c("0.0", "0.5", "1.0", "5.5", "6.0"))#
	#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 4, 0.5), font = 2)#
	axis(side = 2, at = seq(0, 4, 0.5), line = -1, tick = FALSE,#
	labels = as.character(c(seq(from = 0, to = 4, by = 2),#
	seq(from = 100, to = 200, by = 20))))
	plot(seq(from = 0, to = 2, by = 0.5), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along x-axis#
	text("l", x = 1.20, y = 0, srt = -45, font = 2)#
	text("l", x = 1.25, y = 0, srt = -45, font = 2)#
	lines(x = c(0, 1.19), y = c(0,0), lwd = 2)#
	lines(x = c(1.25, 4.0), y = c(0,0), lwd = 2)#
# Add break lines along y-axis#
	text("l", y = 1.15, x = 0, srt = -45, font = 2)#
	text("l", y = 1.25, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.15), x = c(0,0), lwd = 2)#
	lines(y = c(1.27, 4), x = c(0,0), lwd = 2)#
# Add x-axis (tick marks and labels)#
	mtext("l", side = 1, line = -1.25, at = seq(0, 2, 0.5), font = 2)#
	axis(side = 1, at = seq(0, 2, 0.5), line = -1, tick = FALSE,labels = c("0.0", "0.5", "1.0", "5.5", "6.0"))#
	#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 4, 0.5), font = 2)#
	axis(side = 2, at = seq(0, 4, 0.5), line = -1, tick = FALSE,#
	labels = as.character(c(seq(from = 0, to = 4, by = 2),#
	seq(from = 100, to = 200, by = 20))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 1.85, x = 0, srt = -45, font = 2)#
	text("l", y = 2.15, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.85), x = c(0,0), lwd = 2)#
	lines(y = c(2.15, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 5, 0.25), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
									seq(from = 4500, to = 4800, by = 100))))
seq(4500,4800,n=13)
?seq
seq(4500,4800,length.out=13)
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 1.85, x = 0, srt = -45, font = 2)#
	text("l", y = 2.15, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.85), x = c(0,0), lwd = 2)#
	lines(y = c(2.15, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 5, 0.25), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
									seq(from = 4500, to = 4800, by = 25))))
	plot(seq(from = 0, to = 2, by = 0.5), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along x-axis#
	text("l", x = 1.20, y = 0, srt = -45, font = 2)#
	text("l", x = 1.25, y = 0, srt = -45, font = 2)#
	lines(x = c(0, 1.19), y = c(0,0), lwd = 2)#
	lines(x = c(1.25, 4.0), y = c(0,0), lwd = 2)#
# Add break lines along y-axis#
	text("l", y = 1.15, x = 0, srt = -45, font = 2)#
	text("l", y = 1.25, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.15), x = c(0,0), lwd = 2)#
	lines(y = c(1.27, 4), x = c(0,0), lwd = 2)#
# Add x-axis (tick marks and labels)#
	mtext("l", side = 1, line = -1.25, at = seq(0, 2, 0.5), font = 2)#
	axis(side = 1, at = seq(0, 2, 0.5), line = -1, tick = FALSE,labels = c("0.0", "0.5", "1.0", "5.5", "6.0"))#
	#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 4, 0.5), font = 2)#
	axis(side = 2, at = seq(0, 4, 0.5), line = -1, tick = FALSE,#
	labels = as.character(c(seq(from = 0, to = 4, by = 2),#
	seq(from = 100, to = 200, by = 20))))
	plot(seq(from = 0, to = 2, by = 0.5), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along x-axis#
	text("l", x = 1.20, y = 0, srt = -45, font = 2)#
	text("l", x = 1.25, y = 0, srt = -45, font = 2)#
	lines(x = c(0, 1.19), y = c(0,0), lwd = 2)#
	lines(x = c(1.25, 4.0), y = c(0,0), lwd = 2)#
# Add break lines along y-axis#
	text("l", y = 1.15, x = 0, srt = -45, font = 2)#
	text("l", y = 1.25, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.15), x = c(0,0), lwd = 2)#
	lines(y = c(1.27, 4), x = c(0,0), lwd = 2)#
# Add x-axis (tick marks and labels)#
	mtext("l", side = 1, line = -1.25, at = seq(0, 2, 0.5), font = 2)#
	axis(side = 1, at = seq(0, 2, 0.5), line = -1, tick = FALSE,labels = c("0.0", "0.5", "1.0", "5.5", "6.0"))#
	#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 4, 0.5), font = 2)#
	axis(side = 2, at = seq(0, 4, 0.5), line = -1, tick = FALSE,#
	labels = as.character(c(seq(from = 0, to = 4, by = 2),#
	seq(from = 100, to = 200, by = 20))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 1.85, x = 0, srt = -45, font = 2)#
	text("l", y = 2.15, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.85), x = c(0,0), lwd = 2)#
	lines(y = c(2.15, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 5, 0.25), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
									seq(from = 4500, to = 4825, by = 25))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 1.85, x = 0, srt = -45, font = 2)#
	text("l", y = 2.15, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.85), x = c(0,0), lwd = 2)#
	lines(y = c(2.15, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 5, 0.25), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
									seq(from = 4500, to = 4775, by = 25))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 1.85, x = 0, srt = -45, font = 2)#
	text("l", y = 2.15, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.85), x = c(0,0), lwd = 2)#
	lines(y = c(2.15, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 5, 0.25), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 175, by = 25),#
									seq(from = 4500, to = 4775, by = 25))))
	plot(seq(from = 0, to = 2, by = 0.5), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along x-axis#
	text("l", x = 1.20, y = 0, srt = -45, font = 2)#
	text("l", x = 1.25, y = 0, srt = -45, font = 2)#
	lines(x = c(0, 1.19), y = c(0,0), lwd = 2)#
	lines(x = c(1.25, 4.0), y = c(0,0), lwd = 2)#
# Add break lines along y-axis#
	text("l", y = 1.15, x = 0, srt = -45, font = 2)#
	text("l", y = 1.25, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.15), x = c(0,0), lwd = 2)#
	lines(y = c(1.27, 4), x = c(0,0), lwd = 2)#
# Add x-axis (tick marks and labels)#
	mtext("l", side = 1, line = -1.25, at = seq(0, 2, 0.5), font = 2)#
	axis(side = 1, at = seq(0, 2, 0.5), line = -1, tick = FALSE,labels = c("0.0", "0.5", "1.0", "5.5", "6.0"))#
	#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 4, 0.5), font = 2)#
	axis(side = 2, at = seq(0, 4, 0.5), line = -1, tick = FALSE,#
	labels = as.character(c(seq(from = 0, to = 4, by = 2),#
	seq(from = 100, to = 200, by = 20))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 1.85, x = 0, srt = -45, font = 2)#
	text("l", y = 2.15, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.85), x = c(0,0), lwd = 2)#
	lines(y = c(2.15, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 5, 0.25), font = 2)#
	#axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
	#		labels = as.character(c(seq(from = 0, to = 175, by = 25),
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 1.85, x = 0, srt = -45, font = 2)#
	text("l", y = 2.15, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.85), x = c(0,0), lwd = 2)#
	lines(y = c(2.15, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	#mtext("l", side = 2, line = -1.20, at = seq(0, 5, 0.25), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 175, by = 25),#
									seq(from = 4500, to = 4775, by = 25))))
mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 1.75, 0.25),c(seq(2.25,5,0.25))), font = 2)
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 1.85, x = 0, srt = -45, font = 2)#
	text("l", y = 2.15, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.85), x = c(0,0), lwd = 2)#
	lines(y = c(2.15, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 1.75, 0.25),c(seq(2.25,5,0.25))), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 175, by = 25),#
									seq(from = 4500, to = 4775, by = 25))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 1.85, x = 0, srt = -45, font = 2)#
	text("l", y = 2.15, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.85), x = c(0,0), lwd = 2)#
	lines(y = c(2.15, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 1.75, 0.25),c(seq(2.25,5,0.25))), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 175, by = 25),#
									seq(from = 4500, to = 4775, by = 25))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 1.85, x = 0, srt = -45, font = 2)#
	text("l", y = 2.15, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.85), x = c(0,0), lwd = 2)#
	lines(y = c(2.15, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 1.75, 0.25),c(seq(2.25,5,0.25))), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 175, by = 25),#
									seq(from = 4500, to = 4775, by = 25))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 1.85, x = 0, srt = -45, font = 2)#
	text("l", y = 2.15, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.85), x = c(0,0), lwd = 2)#
	lines(y = c(2.15, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 1.75, 0.25),c(seq(2.25,5,0.25))), font = 2))#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 175, by = 25),#
									seq(from = 4500, to = 4775, by = 25))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 1.85, x = 0, srt = -45, font = 2)#
	text("l", y = 2.15, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.85), x = c(0,0), lwd = 2)#
	lines(y = c(2.15, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 1.75, 0.25),c(seq(2.25,5,0.25))), font = 2))#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 175, by = 25),#
									seq(from = 4500, to = 4800, by = 25))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 1.85, x = 0, srt = -45, font = 2)#
	text("l", y = 2.15, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.85), x = c(0,0), lwd = 2)#
	lines(y = c(2.15, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 1.75, 0.25),c(seq(2.25,5,0.25))), font = 2))#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 175, by = 25),#
									seq(from = 4525, to = 4800, by = 25))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 1.85, x = 0, srt = -45, font = 2)#
	text("l", y = 2.15, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.85), x = c(0,0), lwd = 2)#
	lines(y = c(2.15, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 1.75, 0.25),c(seq(2.25,5,0.25))), font = 2))#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 175, by = 25),#
									seq(from = 4525, to = 4825, by = 25))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.09, x = 0, srt = -45, font = 2)#
	text("l", y = 2.39, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 2.09), x = c(0,0), lwd = 2)#
	lines(y = c(2.39, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 5,0.25), font = 2))#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
									seq(from = 4500, to = 4800, by = 25))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.09, x = 0, srt = -45, font = 2)#
	text("l", y = 2.39, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 2.09), x = c(0,0), lwd = 2)#
	lines(y = c(2.39, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 5,0.25), font = 2))#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
									seq(from = 4525, to = 4800, by = 25))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.09, x = 0, srt = -45, font = 2)#
	text("l", y = 2.39, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 2.09), x = c(0,0), lwd = 2)#
	lines(y = c(2.39, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 5,0.25), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
									seq(from = 4525, to = 4800, by = 25))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = -45, font = 2)#
	text("l", y = 2.18, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.18, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 5,0.25), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
									seq(from = 4525, to = 4800, by = 25))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = -45, font = 2)#
	text("l", y = 2.18, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.18, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 5,0.25), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
									seq(from = 4625, to = 4900, by = 25))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.18, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.18, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 5,0.25), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
									seq(from = 4625, to = 4900, by = 25))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.18, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.18, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 2,0.25),c(2.5,5,.25))), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
									seq(from = 4625, to = 4900, by = 25))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.18, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.18, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,5,.25))), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
									seq(from = 4625, to = 4900, by = 25))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,5,.25))), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
									seq(from = 4625, to = 4900, by = 25))))
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 2,0.50),seq(2.5,5,.5))), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4625, to = 4900, by = 25))))
	plot(seq(from = 0, to = 4, by = 1), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 4), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 2,0.50),seq(2.5,4,.5))), font = 2)#
	axis(side = 2, at = seq(0, 4, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4725, to = 4900, by = 25))))
	plot(seq(from = 0, to = 4, by = 1), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 4), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 2,0.50),seq(2.5,4,.5))), font = 2)#
	axis(side = 2, at = seq(0, 4, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4725, to = 4900, by = 25))))
	plot(seq(from = 0, to = 4, by = 1), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 4), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,4,.25))), font = 2)#
	axis(side = 2, at = seq(0, 4, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4725, to = 4900, by = 25))))
	plot(seq(from = 0, to = 4, by = 1), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 4), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,4,.25))), font = 2)#
	axis(side = 2, at = seq(0, 4, 0.25), line = -4, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4725, to = 4900, by = 25))))
	plot(seq(from = 0, to = 4, by = 1), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 4), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,4,.25))), font = 2)#
	axis(side = 2, at = seq(0, 4, 0.25), tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4725, to = 4900, by = 25))))
	plot(seq(from = 0, to = 4, by = 1), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 4), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -2.8, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,4,.25))), font = 2)#
	axis(side = 2, at = seq(0, 4, 0.25), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4725, to = 4900, by = 25))))
	plot(seq(from = 0, to = 4, by = 1), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 4), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("o", side = 2, line = -1.2, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,4,.25))), font = 1)#
	axis(side = 2, at = seq(0, 4, 0.25), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4725, to = 4900, by = 25))))
	plot(seq(from = 0, to = 4, by = 1), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 4), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.2, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,4,.25))), font = 1)#
	axis(side = 2, at = seq(0, 4, 0.25), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4725, to = 4900, by = 25))))
	plot(seq(from = 0, to = 4, by = 1), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 4), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.2, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,4,.25))), font = 1,cex.axis=0.4)#
	axis(side = 2, at = seq(0, 4, 0.25), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4725, to = 4900, by = 25))))
?cex.axis
	plot(seq(from = 0, to = 4, by = 1), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 4), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.2, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,4,.25))), font = 1,cex.lab=0.4)#
	axis(side = 2, at = seq(0, 4, 0.25), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4725, to = 4900, by = 25))))
	plot(seq(from = 0, to = 4, by = 1), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 4), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.2, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,4,.25))), font = 10,cex.lab=0.4)#
	axis(side = 2, at = seq(0, 4, 0.25), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4725, to = 4900, by = 25))))
	plot(seq(from = 0, to = 4, by = 1), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 4), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1., at = as.numeric(c(seq(0, 2,0.25),seq(2.5,4,.25))), font = 10,cex.lab=0.4)#
	axis(side = 2, at = seq(0, 4, 0.25), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4725, to = 4900, by = 25))))
broken <- function(dataset){#
	plot(seq(from = 0, to = 4, by = 1), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 4), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.4, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,4,.25))), font = 10,cex.lab=0.4)#
	axis(side = 2, at = seq(0, 4, 0.25), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4725, to = 4900, by = 25))))plot(seq(from = 0, to = 4, by = 1), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 4), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.4, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,4,.25))), font = 10,cex.lab=0.4)#
	axis(side = 2, at = seq(0, 4, 0.25), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4725, to = 4900, by = 25))))
plot(seq(from = 0, to = 4, by = 1), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 4), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.4, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,4,.25))), font = 10,cex.lab=0.4)#
	axis(side = 2, at = seq(0, 4, 0.25), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4725, to = 4900, by = 25))))
	plot(seq(from = 0, to = 4, by = 1), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 4), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.3, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,4,.25))), font = 10,cex.lab=0.4)#
	axis(side = 2, at = seq(0, 4, 0.25), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4725, to = 4900, by = 25))))
	plot(seq(from = 0, to = 4, by = 1), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.02, x = 0, srt = 45, font = 2)#
	text("l", y = 2.22, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.02), x = c(0,0), lwd = 2)#
	lines(y = c(2.22, 4), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.3, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,4,.25))), font = 10,cex.lab=0.4)#
	axis(side = 2, at = as.character(c(seq(0, 2, 0.25),seq(2.5,4,.25))), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4725, to = 4900, by = 25))))
	plot(seq(from = 0, to = 4, by = 1), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.02, x = 0, srt = 45, font = 2)#
	text("l", y = 2.22, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.02), x = c(0,0), lwd = 2)#
	lines(y = c(2.22, 4), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.3, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,4,.25))), font = 10,cex.lab=0.4)#
	axis(side = 2, at = as.character(c(seq(0, 2, 0.25),seq(2.5,4,.25))), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4750, to = 4900, by = 25))))
	plot(seq(from = 0, to = 4, by = 1), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.38, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.38, 4), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.3, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,4,.25))), font = 10,cex.lab=0.4)#
	axis(side = 2, at = as.character(c(seq(0, 2, 0.25),seq(2.5,4,.25))), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4750, to = 4900, by = 25))))
	plot(seq(from = 0, to = 3.5, by = 1), # X#
		seq(from = 0, to = 3.5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.38, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.38, 3.5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.3, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,3.5,.25))), font = 10,cex.lab=0.4)#
	axis(side = 2, at = as.character(c(seq(0, 2, 0.25),seq(2.5,3.5,.25))), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4750, to = 4850, by = 25))))
	plot(seq(from = 0, to = 3.5, by = 1), # X#
		seq(from = 0, to = 3.5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.18, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.18, 3.5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.3, at = as.numeric(c(seq(0, 2,0.25),seq(2.25,3.5,.25))), font = 10,cex.lab=0.4)#
	axis(side = 2, at = as.character(c(seq(0, 2, 0.25),seq(2.25,3.5,.25))), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4750, to = 4850, by = 25))))
	plot(seq(from = 0, to = 3.5, by = 1), # X#
		seq(from = 0, to = 3.5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.18, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.18, 3.5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.3, at = as.numeric(c(seq(0, 2,0.25),seq(2.25,3.5,.25))), font = 10,cex.lab=0.4)#
	axis(side = 2, at = as.character(c(seq(0, 2, 0.25),seq(2.25,3.5,.25))), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4750, to = 4875, by = 25))))
	plot(seq(from = 0, to = 3.5, by = 1), # X#
		seq(from = 0, to = 3.5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.02, x = 0, srt = 45, font = 2)#
	text("l", y = 2.17, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.02), x = c(0,0), lwd = 2)#
	lines(y = c(2.17, 3.5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.3, at = as.numeric(c(seq(0, 2,0.25),seq(2.25,3.5,.25))), font = 10,cex.lab=0.4)#
	axis(side = 2, at = as.character(c(seq(0, 2, 0.25),seq(2.25,3.5,.25))), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4750, to = 4875, by = 25))))
	plot(seq(from = 0, to = 3.5, by = 1), # X#
		seq(from = 0, to = 3.5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.02, x = 0, srt = 45, font = 2)#
	text("l", y = 2.17, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.02), x = c(0,0), lwd = 2)#
	lines(y = c(2.17, 3.5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.3, at = as.numeric(c(seq(0, 2,0.25),seq(2.25,3.5,.25))), font = 10,cex.lab=0.4)#
	axis(side = 2, at = as.character(c(seq(0, 2, 0.25),seq(2.25,3.5,.25))), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4750, to = 4875, by = 25))))
pie(table(errors$level))
pie(table(errors$level))
errors <- orderFactors(errors);
pie(table(errors$level))
colnames(errors)
pie(table(errors$level))
barplot(table(errors$leve))
barplot(table(errors$level))
barplot(table(errors$level))
table(errors$taxon)
table(errors$level)
errors <- results[indices,]
table(errors$level)
pie(table(errors$level))
pie(table(errors$level),clockwise=T)
pie(table(errors$level),clockwise=T,init.angle=-45)
pie(table(errors$level),clockwise=T,init.angle=135)
pie(table(errors$level),clockwise=T,init.angle=115)
pie(table(errors$level),clockwise=T,init.angle=180)
pie(table(errors$level),clockwise=T,init.angle=165)
pie(table(errors$level),clockwise=T,init.angle=145)
pie(table(errors$level),clockwise=T,init.angle=135)
pie(table(errors$level),clockwise=T,init.angle=125)
pie(table(errors$level),clockwise=T,init.angle=115)
nrow(errors)
nrow(results)-nrow(errors)
barplot(table(errors$level))
?barplot
?hist
hist(table(errors$level))
hist(errors$level)
?hist
barplot(table(errors$level)/nrow(errors))
barplot(table(errors$level)/nrow(errors),col=3:8)
barplot(table(errors$level)/nrow(errors),col=2:7)
barplot(table(errors$level)/nrow(errors),lty=1:6)
?barplot
tN <- table(Ni <- stats::rpois(100, lambda=5))#
r <- barplot(tN, col=rainbow(20))
barplot(table(errors$level)/nrow(errors),col=rainbow(6))
barplot(table(errors$level)/nrow(errors),col=rainbow(6))
?colors
colors()
barplot(table(errors$level)/nrow(errors),col=161:166)
?barpot
?barplot
barplot(table(errors$level)/nrow(errors),density=161:166)
barplot(table(errors$level)/nrow(errors),density=1:6)
barplot(table(errors$level)/nrow(errors),density=2:7)
barplot(table(errors$level)/nrow(errors),density=3:9)
barplot(table(errors$level)/nrow(errors),col="black",density=1:6)
barplot(table(errors$level)/nrow(errors),col=1:6,add=T)
barplot(table(errors$level)/nrow(errors),col="black",density=1:6)
barplot(table(errors$level)/nrow(errors),col=1:6)
barplot(table(errors$level)/nrow(errors),col="black",density=1:6,add=T)
barplot(table(errors$level)/nrow(errors),col="black")
barplot(table(errors$level)/nrow(errors),col=1:6,angle = 15+10*1:6,density=20)
pie(table(errors$level),clockwise=T,init.angle=45)
pie(table(errors$level),clockwise=T,init.angle=90)
pie(table(errors$level),clockwise=T,init.angle=45)
pie(table(errors$level),clockwise=T,init.angle=-90)
pie(table(errors$level),clockwise=T,init.angle=-135)
pie(table(errors$level),clockwise=T,init.angle=-125)
pie(table(errors$level),clockwise=T,init.angle=-115)
errors[,"level"] <- toupper(errors[,"level"])
pie(table(errors$level),clockwise=T,init.angle=-115)
errors[,"level"] <- toupper(errors[,"level"])orderFactors <- function(reads){#
#
	levelIndex <- pmatch("level",colnames(reads));#
	taxonIndex <- pmatch("taxon",colnames(reads));#
#
	reads[which(reads[,taxonIndex]=="Uncertain"),levelIndex] <- "UNCERTAIN";#
	reads[which(reads[,taxonIndex]=="Filtered"),levelIndex] <- "FILTERED";#
#
	newOrder <- numeric(nrow(reads));#
	reads<- cbind(reads,newOrder);#
	reads[which(reads[,levelIndex]=="Uncertain"),ncol(reads)] <- 1;#
	reads[which(reads[,levelIndex]=="Filtered"),ncol(reads)] <- 2;#
	#
	reads[which(reads[,levelIndex]=="SUPERKINGDOM"),ncol(reads)] <- 3;#
	reads[which(reads[,levelIndex]=="KINGDOM"),ncol(reads)] <- 4;#
	reads[which(reads[,levelIndex]=="PHYLUM"),ncol(reads)] <- 5;#
	reads[which(reads[,levelIndex]=="CLASS"),ncol(reads)] <- 6;#
	reads[which(reads[,levelIndex]=="ORDER"),ncol(reads)] <- 7;#
	reads[which(reads[,levelIndex]=="FAMILY"),ncol(reads)] <- 8;#
	reads[which(reads[,levelIndex]=="GENUS"),ncol(reads)] <- 9;#
	reads[which(reads[,levelIndex]=="SPECIES"),ncol(reads)] <- 10;#
#
	print(paste("no non-missing arguments probably mean that the levels aren't found in this dataset."));#
	newFactor <- with(reads,reorder(as.factor(level),reads[,ncol(reads)])); # last arg was newOrder;#
	reads[,levelIndex] <- newFactor;#
#
	return(reads);#
}#
#
corpus <- read.table("rdp_download_5172seqs.tsv",as.is=T,sep="\t",header=T);#
corpus <- corpus[,-3]; # don't need the sequence here!#
qcmin <- read.table("qc.min",header=F,as.is=T,sep="\t");#
#qc99 <- read.table("qc.99",header=F,as.is=T,sep="\t");#
#qc97 <- read.table("qc.97",header=F,as.is=T,sep="\t");#
#qc95 <- read.table("qc.95",header=F,as.is=T,sep="\t");#
#
qcmin <- qcmin[,c(1,4,5,7,8,9,10,11,12,13)];#
#qc99 <- qc99[,c(1,4,5,7,8,9,10,11,12,13)];#
#qc97 <- qc97[,c(1,4,5,7,8,9,10,11,12,13)];#
#
colnames(qcmin) <- c('id','level','taxon','score','topscore','% ident','cov','full','votesfor','votestotal');#
#type <- append(rep("min",nrow(qcmin)),append(rep("99",nrow(qc99)),rep("97",nrow(qc97))));#
#results <- cbind(rbind(qcmin,qc99,qc97),type);#
#
results <- merge(corpus,qcmin,by="id");#
results <- orderFactors( as.data.frame(results));#
#
mismatches <- character(nrow(results));#
indices <- c()#
for( i in 1:nrow(results )){#
	if( results[i,"Taxa"] != results[i,"taxon"] ){#
		indices <- append(indices,i);#
		mismatches[i] <- "Incongruent";#
#
	} else {#
		mismatches[i] <- "Congruent";#
	}#
}#
#
results <- cbind(results,mismatches);#
errors <- results[indices,];#
errors <- orderFactors(errors);#
#
print(paste("there are: ",nrow(errors)," incongruencies."));#
filtered <- which(!is.na(pmatch(errors[,"taxon"],"Filtered",dup=T)));#
uncertain <- which(!is.na(pmatch(errors[,"taxon"],"Uncertain",dup=T)));#
#
print(paste("there are:",nrow(errors)," errors to review."));#
print(paste("there are: ",length(filtered)," filtered reads and", length(uncertain),"uncertain reads"));#
print(paste("without review: ", (1-nrow(errors)/nrow(results)),"% of the assignments agree with RDP-II."));#
#
myBarPlot <- barplot(table(errors$level)/nrow(errors),col="cornflowerblue");#
#labels <- toupper(names(table(errors$level)));#
#mtext(labels,at=colMeans(myBarPlot),side=1,line=1,cex=0.75);#
title("Resolution of Errors");#
#
print("recall that 35 of the 41 Uncertain reads are picked up (false negatives) when we permit null genera from the taxonomy database.");#
print("review the filtered reads.");#
print("of the remaining reads::::");#
#
#
#
brokenBar2 <- function(dataset){#
	plot(seq(from = 0, to = 2, by = 0.5), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along x-axis#
	text("l", x = 1.20, y = 0, srt = -45, font = 2)#
	text("l", x = 1.25, y = 0, srt = -45, font = 2)#
	lines(x = c(0, 1.19), y = c(0,0), lwd = 2)#
	lines(x = c(1.25, 4.0), y = c(0,0), lwd = 2)#
#
# Add break lines along y-axis#
	text("l", y = 1.15, x = 0, srt = -45, font = 2)#
	text("l", y = 1.25, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.15), x = c(0,0), lwd = 2)#
	lines(y = c(1.27, 4), x = c(0,0), lwd = 2)#
#
# Add x-axis (tick marks and labels)#
	mtext("l", side = 1, line = -1.25, at = seq(0, 2, 0.5), font = 2)#
	axis(side = 1, at = seq(0, 2, 0.5), line = -1, tick = FALSE,labels = c("0.0", "0.5", "1.0", "5.5", "6.0"))#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 4, 0.5), font = 2)#
	axis(side = 2, at = seq(0, 4, 0.5), line = -1, tick = FALSE,#
	labels = as.character(c(seq(from = 0, to = 4, by = 2),#
	seq(from = 100, to = 200, by = 20))))#
}#
#
brokenBarplot <- function(dataset){#
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,5,.25))), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
									seq(from = 4625, to = 4900, by = 25))))#
#
	#
}#
#
#
broken <- function(dataset){#
	plot(seq(from = 0, to = 3.5, by = 1), # X#
		seq(from = 0, to = 3.5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.02, x = 0, srt = 45, font = 2)#
	text("l", y = 2.17, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.02), x = c(0,0), lwd = 2)#
	lines(y = c(2.17, 3.5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.3, at = as.numeric(c(seq(0, 2,0.25),seq(2.25,3.5,.25))), font = 10,cex.lab=0.4)#
	axis(side = 2, at = as.character(c(seq(0, 2, 0.25),seq(2.25,3.5,.25))), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4750, to = 4875, by = 25))))#
}
pie(table(errors$level),clockwise=T,init.angle=-115)
errors[,"level"] <- toupper(errors[,"level"])orderFactors <- function(reads){#
#
	levelIndex <- pmatch("level",colnames(reads));#
	taxonIndex <- pmatch("taxon",colnames(reads));#
#
	reads[which(reads[,taxonIndex]=="Uncertain"),levelIndex] <- "UNCERTAIN";#
	reads[which(reads[,taxonIndex]=="Filtered"),levelIndex] <- "FILTERED";#
#
	newOrder <- numeric(nrow(reads));#
	reads<- cbind(reads,newOrder);#
	reads[which(reads[,levelIndex]=="Uncertain"),ncol(reads)] <- 1;#
	reads[which(reads[,levelIndex]=="Filtered"),ncol(reads)] <- 2;#
	#
	reads[which(reads[,levelIndex]=="SUPERKINGDOM"),ncol(reads)] <- 3;#
	reads[which(reads[,levelIndex]=="KINGDOM"),ncol(reads)] <- 4;#
	reads[which(reads[,levelIndex]=="PHYLUM"),ncol(reads)] <- 5;#
	reads[which(reads[,levelIndex]=="CLASS"),ncol(reads)] <- 6;#
	reads[which(reads[,levelIndex]=="ORDER"),ncol(reads)] <- 7;#
	reads[which(reads[,levelIndex]=="FAMILY"),ncol(reads)] <- 8;#
	reads[which(reads[,levelIndex]=="GENUS"),ncol(reads)] <- 9;#
	reads[which(reads[,levelIndex]=="SPECIES"),ncol(reads)] <- 10;#
#
	print(paste("no non-missing arguments probably mean that the levels aren't found in this dataset."));#
	newFactor <- with(reads,reorder(as.factor(level),reads[,ncol(reads)])); # last arg was newOrder;#
	reads[,levelIndex] <- newFactor;#
#
	return(reads);#
}#
#
corpus <- read.table("rdp_download_5172seqs.tsv",as.is=T,sep="\t",header=T);#
corpus <- corpus[,-3]; # don't need the sequence here!#
qcmin <- read.table("qc.min",header=F,as.is=T,sep="\t");#
#qc99 <- read.table("qc.99",header=F,as.is=T,sep="\t");#
#qc97 <- read.table("qc.97",header=F,as.is=T,sep="\t");#
#qc95 <- read.table("qc.95",header=F,as.is=T,sep="\t");#
#
qcmin <- qcmin[,c(1,4,5,7,8,9,10,11,12,13)];#
#qc99 <- qc99[,c(1,4,5,7,8,9,10,11,12,13)];#
#qc97 <- qc97[,c(1,4,5,7,8,9,10,11,12,13)];#
#
colnames(qcmin) <- c('id','level','taxon','score','topscore','% ident','cov','full','votesfor','votestotal');#
#type <- append(rep("min",nrow(qcmin)),append(rep("99",nrow(qc99)),rep("97",nrow(qc97))));#
#results <- cbind(rbind(qcmin,qc99,qc97),type);#
#
results <- merge(corpus,qcmin,by="id");#
results <- orderFactors( as.data.frame(results));#
#
mismatches <- character(nrow(results));#
indices <- c()#
for( i in 1:nrow(results )){#
	if( results[i,"Taxa"] != results[i,"taxon"] ){#
		indices <- append(indices,i);#
		mismatches[i] <- "Incongruent";#
#
	} else {#
		mismatches[i] <- "Congruent";#
	}#
}#
#
results <- cbind(results,mismatches);#
errors <- results[indices,];#
errors <- orderFactors(errors);#
#
print(paste("there are: ",nrow(errors)," incongruencies."));#
filtered <- which(!is.na(pmatch(errors[,"taxon"],"Filtered",dup=T)));#
uncertain <- which(!is.na(pmatch(errors[,"taxon"],"Uncertain",dup=T)));#
#
print(paste("there are:",nrow(errors)," errors to review."));#
print(paste("there are: ",length(filtered)," filtered reads and", length(uncertain),"uncertain reads"));#
print(paste("without review: ", (1-nrow(errors)/nrow(results)),"% of the assignments agree with RDP-II."));#
#
myBarPlot <- barplot(table(errors$level)/nrow(errors),col="cornflowerblue");#
#labels <- toupper(names(table(errors$level)));#
#mtext(labels,at=colMeans(myBarPlot),side=1,line=1,cex=0.75);#
title("Resolution of Errors");#
#
print("recall that 35 of the 41 Uncertain reads are picked up (false negatives) when we permit null genera from the taxonomy database.");#
print("review the filtered reads.");#
print("of the remaining reads::::");#
#
#
#
brokenBar2 <- function(dataset){#
	plot(seq(from = 0, to = 2, by = 0.5), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along x-axis#
	text("l", x = 1.20, y = 0, srt = -45, font = 2)#
	text("l", x = 1.25, y = 0, srt = -45, font = 2)#
	lines(x = c(0, 1.19), y = c(0,0), lwd = 2)#
	lines(x = c(1.25, 4.0), y = c(0,0), lwd = 2)#
#
# Add break lines along y-axis#
	text("l", y = 1.15, x = 0, srt = -45, font = 2)#
	text("l", y = 1.25, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.15), x = c(0,0), lwd = 2)#
	lines(y = c(1.27, 4), x = c(0,0), lwd = 2)#
#
# Add x-axis (tick marks and labels)#
	mtext("l", side = 1, line = -1.25, at = seq(0, 2, 0.5), font = 2)#
	axis(side = 1, at = seq(0, 2, 0.5), line = -1, tick = FALSE,labels = c("0.0", "0.5", "1.0", "5.5", "6.0"))#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 4, 0.5), font = 2)#
	axis(side = 2, at = seq(0, 4, 0.5), line = -1, tick = FALSE,#
	labels = as.character(c(seq(from = 0, to = 4, by = 2),#
	seq(from = 100, to = 200, by = 20))))#
}#
#
brokenBarplot <- function(dataset){#
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,5,.25))), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
									seq(from = 4625, to = 4900, by = 25))))#
#
	#
}#
#
#
broken <- function(dataset){#
	plot(seq(from = 0, to = 3.5, by = 1), # X#
		seq(from = 0, to = 3.5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.02, x = 0, srt = 45, font = 2)#
	text("l", y = 2.17, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.02), x = c(0,0), lwd = 2)#
	lines(y = c(2.17, 3.5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.3, at = as.numeric(c(seq(0, 2,0.25),seq(2.25,3.5,.25))), font = 10,cex.lab=0.4)#
	axis(side = 2, at = as.character(c(seq(0, 2, 0.25),seq(2.25,3.5,.25))), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4750, to = 4875, by = 25))))#
}errors <- orderFactors(errors);
errors <- orderFactors(errors);
pie(table(errors$level),clockwise=T,init.angle=-115)
orderFactors <- function(reads){#
#
	levelIndex <- pmatch("level",colnames(reads));#
	taxonIndex <- pmatch("taxon",colnames(reads));#
#
	reads[which(reads[,taxonIndex]=="Uncertain"),levelIndex] <- "UNCERTAIN";#
	reads[which(reads[,taxonIndex]=="Filtered"),levelIndex] <- "FILTERED";#
#
	newOrder <- numeric(nrow(reads));#
	reads<- cbind(reads,newOrder);#
	reads[which(reads[,levelIndex]=="UNCERTAIN"),ncol(reads)] <- 1;#
	reads[which(reads[,levelIndex]=="FILTERED"),ncol(reads)] <- 2;#
	#
	reads[which(reads[,levelIndex]=="SUPERKINGDOM"),ncol(reads)] <- 3;#
	reads[which(reads[,levelIndex]=="KINGDOM"),ncol(reads)] <- 4;#
	reads[which(reads[,levelIndex]=="PHYLUM"),ncol(reads)] <- 5;#
	reads[which(reads[,levelIndex]=="CLASS"),ncol(reads)] <- 6;#
	reads[which(reads[,levelIndex]=="ORDER"),ncol(reads)] <- 7;#
	reads[which(reads[,levelIndex]=="FAMILY"),ncol(reads)] <- 8;#
	reads[which(reads[,levelIndex]=="GENUS"),ncol(reads)] <- 9;#
	reads[which(reads[,levelIndex]=="SPECIES"),ncol(reads)] <- 10;#
#
	print(paste("no non-missing arguments probably mean that the levels aren't found in this dataset."));#
	newFactor <- with(reads,reorder(as.factor(level),reads[,ncol(reads)])); # last arg was newOrder;#
	reads[,levelIndex] <- newFactor;#
#
	return(reads);#
}#
#
corpus <- read.table("rdp_download_5172seqs.tsv",as.is=T,sep="\t",header=T);#
corpus <- corpus[,-3]; # don't need the sequence here!#
qcmin <- read.table("qc.min",header=F,as.is=T,sep="\t");#
#qc99 <- read.table("qc.99",header=F,as.is=T,sep="\t");#
#qc97 <- read.table("qc.97",header=F,as.is=T,sep="\t");#
#qc95 <- read.table("qc.95",header=F,as.is=T,sep="\t");#
#
qcmin <- qcmin[,c(1,4,5,7,8,9,10,11,12,13)];#
#qc99 <- qc99[,c(1,4,5,7,8,9,10,11,12,13)];#
#qc97 <- qc97[,c(1,4,5,7,8,9,10,11,12,13)];#
#
colnames(qcmin) <- c('id','level','taxon','score','topscore','% ident','cov','full','votesfor','votestotal');#
#type <- append(rep("min",nrow(qcmin)),append(rep("99",nrow(qc99)),rep("97",nrow(qc97))));#
#results <- cbind(rbind(qcmin,qc99,qc97),type);#
#
results <- merge(corpus,qcmin,by="id");#
results <- orderFactors( as.data.frame(results));#
#
mismatches <- character(nrow(results));#
indices <- c()#
for( i in 1:nrow(results )){#
	if( results[i,"Taxa"] != results[i,"taxon"] ){#
		indices <- append(indices,i);#
		mismatches[i] <- "Incongruent";#
#
	} else {#
		mismatches[i] <- "Congruent";#
	}#
}#
#
results <- cbind(results,mismatches);#
errors <- results[indices,];#
errors <- orderFactors(errors);#
#
print(paste("there are: ",nrow(errors)," incongruencies."));#
filtered <- which(!is.na(pmatch(errors[,"taxon"],"Filtered",dup=T)));#
uncertain <- which(!is.na(pmatch(errors[,"taxon"],"Uncertain",dup=T)));#
#
print(paste("there are:",nrow(errors)," errors to review."));#
print(paste("there are: ",length(filtered)," filtered reads and", length(uncertain),"uncertain reads"));#
print(paste("without review: ", (1-nrow(errors)/nrow(results)),"% of the assignments agree with RDP-II."));#
#
myBarPlot <- barplot(table(errors$level)/nrow(errors),col="cornflowerblue");#
#labels <- toupper(names(table(errors$level)));#
#mtext(labels,at=colMeans(myBarPlot),side=1,line=1,cex=0.75);#
title("Resolution of Errors");#
#
print("recall that 35 of the 41 Uncertain reads are picked up (false negatives) when we permit null genera from the taxonomy database.");#
print("review the filtered reads.");#
print("of the remaining reads::::");#
#
#
#
brokenBar2 <- function(dataset){#
	plot(seq(from = 0, to = 2, by = 0.5), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along x-axis#
	text("l", x = 1.20, y = 0, srt = -45, font = 2)#
	text("l", x = 1.25, y = 0, srt = -45, font = 2)#
	lines(x = c(0, 1.19), y = c(0,0), lwd = 2)#
	lines(x = c(1.25, 4.0), y = c(0,0), lwd = 2)#
#
# Add break lines along y-axis#
	text("l", y = 1.15, x = 0, srt = -45, font = 2)#
	text("l", y = 1.25, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.15), x = c(0,0), lwd = 2)#
	lines(y = c(1.27, 4), x = c(0,0), lwd = 2)#
#
# Add x-axis (tick marks and labels)#
	mtext("l", side = 1, line = -1.25, at = seq(0, 2, 0.5), font = 2)#
	axis(side = 1, at = seq(0, 2, 0.5), line = -1, tick = FALSE,labels = c("0.0", "0.5", "1.0", "5.5", "6.0"))#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 4, 0.5), font = 2)#
	axis(side = 2, at = seq(0, 4, 0.5), line = -1, tick = FALSE,#
	labels = as.character(c(seq(from = 0, to = 4, by = 2),#
	seq(from = 100, to = 200, by = 20))))#
}#
#
brokenBarplot <- function(dataset){#
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,5,.25))), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
									seq(from = 4625, to = 4900, by = 25))))#
#
	#
}#
#
#
broken <- function(dataset){#
	plot(seq(from = 0, to = 3.5, by = 1), # X#
		seq(from = 0, to = 3.5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.02, x = 0, srt = 45, font = 2)#
	text("l", y = 2.17, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.02), x = c(0,0), lwd = 2)#
	lines(y = c(2.17, 3.5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.3, at = as.numeric(c(seq(0, 2,0.25),seq(2.25,3.5,.25))), font = 10,cex.lab=0.4)#
	axis(side = 2, at = as.character(c(seq(0, 2, 0.25),seq(2.25,3.5,.25))), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4750, to = 4875, by = 25))))#
}
pie(table(errors$level),clockwise=T,init.angle=-115)
pie(table(errors$level),clockwise=T,init.angle=-115)
errors <- results[indices,]
pie(table(errors$level),clockwise=T,init.angle=-115)
pie(table(errors$level),clockwise=T,init.angle=-115)
nrow(errors)
errors <- orderFactors(errors)
pie(table(errors$level),clockwise=T,init.angle=-115)
colnames(errors)
table(errors$taxon)
table(errors$level)
errors <- results[indices,
]
pie(table(errors$level),clockwise=T,init.angle=-115)
table(results$level)
orderFactors <- function(reads){#
#
	levelIndex <- pmatch("level",colnames(reads));#
	taxonIndex <- pmatch("taxon",colnames(reads));#
#
	reads[which(reads[,taxonIndex]=="Uncertain"),levelIndex] <- "UNCERTAIN";#
	reads[which(reads[,taxonIndex]=="Filtered"),levelIndex] <- "FILTERED";#
#
	newOrder <- numeric(nrow(reads));#
	reads<- cbind(reads,newOrder);#
	reads[which(reads[,levelIndex]=="UNCERTAIN"),ncol(reads)] <- 1;#
	reads[which(reads[,levelIndex]=="FILTERED"),ncol(reads)] <- 2;#
	#
	reads[which(reads[,levelIndex]=="SUPERKINGDOM"),ncol(reads)] <- 3;#
	reads[which(reads[,levelIndex]=="KINGDOM"),ncol(reads)] <- 4;#
	reads[which(reads[,levelIndex]=="PHYLUM"),ncol(reads)] <- 5;#
	reads[which(reads[,levelIndex]=="CLASS"),ncol(reads)] <- 6;#
	reads[which(reads[,levelIndex]=="ORDER"),ncol(reads)] <- 7;#
	reads[which(reads[,levelIndex]=="FAMILY"),ncol(reads)] <- 8;#
	reads[which(reads[,levelIndex]=="GENUS"),ncol(reads)] <- 9;#
	reads[which(reads[,levelIndex]=="SPECIES"),ncol(reads)] <- 10;#
#
	print(paste("no non-missing arguments probably mean that the levels aren't found in this dataset."));#
	newFactor <- with(reads,reorder(as.factor(level),reads[,ncol(reads)])); # last arg was newOrder;#
	reads[,levelIndex] <- newFactor;#
#
	return(reads);#
}#
#
corpus <- read.table("rdp_download_5172seqs.tsv",as.is=T,sep="\t",header=T);#
corpus <- corpus[,-3]; # don't need the sequence here!#
qcmin <- read.table("qc.min",header=F,as.is=T,sep="\t");#
#qc99 <- read.table("qc.99",header=F,as.is=T,sep="\t");#
#qc97 <- read.table("qc.97",header=F,as.is=T,sep="\t");#
#qc95 <- read.table("qc.95",header=F,as.is=T,sep="\t");#
#
qcmin <- qcmin[,c(1,4,5,7,8,9,10,11,12,13)];#
#qc99 <- qc99[,c(1,4,5,7,8,9,10,11,12,13)];#
#qc97 <- qc97[,c(1,4,5,7,8,9,10,11,12,13)];#
#
colnames(qcmin) <- c('id','level','taxon','score','topscore','% ident','cov','full','votesfor','votestotal');#
#type <- append(rep("min",nrow(qcmin)),append(rep("99",nrow(qc99)),rep("97",nrow(qc97))));#
#results <- cbind(rbind(qcmin,qc99,qc97),type);#
#
results <- merge(corpus,qcmin,by="id");#
#
mismatches <- character(nrow(results));#
indices <- c()#
for( i in 1:nrow(results )){#
	if( results[i,"Taxa"] != results[i,"taxon"] ){#
		indices <- append(indices,i);#
		mismatches[i] <- "Incongruent";#
#
	} else {#
		mismatches[i] <- "Congruent";#
	}#
}#
#
results <- cbind(results,mismatches);#
results <- orderFactors( as.data.frame(results));#
errors <- results[indices,];#
errors <- orderFactors(errors);#
#
print(paste("there are: ",nrow(errors)," incongruencies."));#
filtered <- which(!is.na(pmatch(errors[,"taxon"],"Filtered",dup=T)));#
uncertain <- which(!is.na(pmatch(errors[,"taxon"],"Uncertain",dup=T)));#
#
print(paste("there are:",nrow(errors)," errors to review."));#
print(paste("there are: ",length(filtered)," filtered reads and", length(uncertain),"uncertain reads"));#
print(paste("without review: ", (1-nrow(errors)/nrow(results)),"% of the assignments agree with RDP-II."));#
#
myBarPlot <- barplot(table(errors$level)/nrow(errors),col="cornflowerblue");#
#labels <- toupper(names(table(errors$level)));#
#mtext(labels,at=colMeans(myBarPlot),side=1,line=1,cex=0.75);#
title("Resolution of Errors");#
#
print("recall that 35 of the 41 Uncertain reads are picked up (false negatives) when we permit null genera from the taxonomy database.");#
print("review the filtered reads.");#
print("of the remaining reads::::");#
#
#
#
brokenBar2 <- function(dataset){#
	plot(seq(from = 0, to = 2, by = 0.5), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along x-axis#
	text("l", x = 1.20, y = 0, srt = -45, font = 2)#
	text("l", x = 1.25, y = 0, srt = -45, font = 2)#
	lines(x = c(0, 1.19), y = c(0,0), lwd = 2)#
	lines(x = c(1.25, 4.0), y = c(0,0), lwd = 2)#
#
# Add break lines along y-axis#
	text("l", y = 1.15, x = 0, srt = -45, font = 2)#
	text("l", y = 1.25, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.15), x = c(0,0), lwd = 2)#
	lines(y = c(1.27, 4), x = c(0,0), lwd = 2)#
#
# Add x-axis (tick marks and labels)#
	mtext("l", side = 1, line = -1.25, at = seq(0, 2, 0.5), font = 2)#
	axis(side = 1, at = seq(0, 2, 0.5), line = -1, tick = FALSE,labels = c("0.0", "0.5", "1.0", "5.5", "6.0"))#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 4, 0.5), font = 2)#
	axis(side = 2, at = seq(0, 4, 0.5), line = -1, tick = FALSE,#
	labels = as.character(c(seq(from = 0, to = 4, by = 2),#
	seq(from = 100, to = 200, by = 20))))#
}#
#
brokenBarplot <- function(dataset){#
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,5,.25))), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
									seq(from = 4625, to = 4900, by = 25))))#
#
	#
}#
#
#
broken <- function(dataset){#
	plot(seq(from = 0, to = 3.5, by = 1), # X#
		seq(from = 0, to = 3.5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.02, x = 0, srt = 45, font = 2)#
	text("l", y = 2.17, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.02), x = c(0,0), lwd = 2)#
	lines(y = c(2.17, 3.5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.3, at = as.numeric(c(seq(0, 2,0.25),seq(2.25,3.5,.25))), font = 10,cex.lab=0.4)#
	axis(side = 2, at = as.character(c(seq(0, 2, 0.25),seq(2.25,3.5,.25))), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4750, to = 4875, by = 25))))#
}
orderFactors <- function(reads){#
#
	levelIndex <- pmatch("level",colnames(reads));#
	taxonIndex <- pmatch("taxon",colnames(reads));#
#
	reads[which(reads[,taxonIndex]=="Uncertain"),levelIndex] <- "UNCERTAIN";#
	reads[which(reads[,taxonIndex]=="Filtered"),levelIndex] <- "FILTERED";#
#
	newOrder <- numeric(nrow(reads));#
	reads<- cbind(reads,newOrder);#
	reads[which(reads[,levelIndex]=="UNCERTAIN"),ncol(reads)] <- 1;#
	reads[which(reads[,levelIndex]=="FILTERED"),ncol(reads)] <- 2;#
	#
	reads[which(reads[,levelIndex]=="SUPERKINGDOM"),ncol(reads)] <- 3;#
	reads[which(reads[,levelIndex]=="KINGDOM"),ncol(reads)] <- 4;#
	reads[which(reads[,levelIndex]=="PHYLUM"),ncol(reads)] <- 5;#
	reads[which(reads[,levelIndex]=="CLASS"),ncol(reads)] <- 6;#
	reads[which(reads[,levelIndex]=="ORDER"),ncol(reads)] <- 7;#
	reads[which(reads[,levelIndex]=="FAMILY"),ncol(reads)] <- 8;#
	reads[which(reads[,levelIndex]=="GENUS"),ncol(reads)] <- 9;#
	reads[which(reads[,levelIndex]=="SPECIES"),ncol(reads)] <- 10;#
#
	print(paste("no non-missing arguments probably mean that the levels aren't found in this dataset."));#
	newFactor <- with(reads,reorder(as.factor(level),reads[,ncol(reads)])); # last arg was newOrder;#
	reads[,levelIndex] <- newFactor;#
#
	return(reads);#
}#
#
corpus <- read.table("rdp_download_5172seqs.tsv",as.is=T,sep="\t",header=T);#
corpus <- corpus[,-3]; # don't need the sequence here!#
qcmin <- read.table("qc.min",header=F,as.is=T,sep="\t");#
														#qc99 <- read.table("qc.99",header=F,as.is=T,sep="\t");#
														#qc97 <- read.table("qc.97",header=F,as.is=T,sep="\t");#
														#qc95 <- read.table("qc.95",header=F,as.is=T,sep="\t");#
#
qcmin <- qcmin[,c(1,4,5,7,8,9,10,11,12,13)];#
														#qc99 <- qc99[,c(1,4,5,7,8,9,10,11,12,13)];#
														#qc97 <- qc97[,c(1,4,5,7,8,9,10,11,12,13)];#
#
colnames(qcmin) <- c('id','level','taxon','score','topscore','% ident','cov','full','votesfor','votestotal');#
														#type <- append(rep("min",nrow(qcmin)),append(rep("99",nrow(qc99)),rep("97",nrow(qc97))));#
														#results <- cbind(rbind(qcmin,qc99,qc97),type);#
#
results <- merge(corpus,qcmin,by="id");#
mismatches <- character(nrow(results));#
indices <- c();#
#
for( i in 1:nrow(results )){#
#
	if( results[i,"Taxa"] != results[i,"taxon"] ){#
		indices <- append(indices,i);#
		mismatches[i] <- "Incongruent";#
#
	} else {#
		mismatches[i] <- "Congruent";#
	}#
}#
#
#results <- cbind(results,mismatches);#
results <- orderFactors( as.data.frame(results));#
errors <- results[indices,];#
errors <- orderFactors(errors);#
#
print(paste("there are: ",nrow(errors)," incongruencies."));#
filtered <- which(!is.na(pmatch(errors[,"taxon"],"Filtered",dup=T)));#
uncertain <- which(!is.na(pmatch(errors[,"taxon"],"Uncertain",dup=T)));#
#
print(paste("there are:",nrow(errors)," errors to review."));#
print(paste("there are: ",length(filtered)," filtered reads and", length(uncertain),"uncertain reads"));#
print(paste("without review: ", (1-nrow(errors)/nrow(results)),"% of the assignments agree with RDP-II."));#
#
myBarPlot <- barplot(table(errors$level)/nrow(errors),col="cornflowerblue");#
#labels <- toupper(names(table(errors$level)));#
#mtext(labels,at=colMeans(myBarPlot),side=1,line=1,cex=0.75);#
title("Resolution of Errors");#
#
print("recall that 35 of the 41 Uncertain reads are picked up (false negatives) when we permit null genera from the taxonomy database.");#
print("review the filtered reads.");#
print("of the remaining reads::::");
table(results$level)
rm(list=ls())
orderFactors <- function(reads){#
#
	levelIndex <- pmatch("level",colnames(reads));#
	taxonIndex <- pmatch("taxon",colnames(reads));#
#
	reads[which(reads[,taxonIndex]=="Uncertain"),levelIndex] <- "UNCERTAIN";#
	reads[which(reads[,taxonIndex]=="Filtered"),levelIndex] <- "FILTERED";#
#
	newOrder <- numeric(nrow(reads));#
	reads<- cbind(reads,newOrder);#
	reads[which(reads[,levelIndex]=="UNCERTAIN"),ncol(reads)] <- 1;#
	reads[which(reads[,levelIndex]=="FILTERED"),ncol(reads)] <- 2;#
	#
	reads[which(reads[,levelIndex]=="SUPERKINGDOM"),ncol(reads)] <- 3;#
	reads[which(reads[,levelIndex]=="KINGDOM"),ncol(reads)] <- 4;#
	reads[which(reads[,levelIndex]=="PHYLUM"),ncol(reads)] <- 5;#
	reads[which(reads[,levelIndex]=="CLASS"),ncol(reads)] <- 6;#
	reads[which(reads[,levelIndex]=="ORDER"),ncol(reads)] <- 7;#
	reads[which(reads[,levelIndex]=="FAMILY"),ncol(reads)] <- 8;#
	reads[which(reads[,levelIndex]=="GENUS"),ncol(reads)] <- 9;#
	reads[which(reads[,levelIndex]=="SPECIES"),ncol(reads)] <- 10;#
#
	print(paste("no non-missing arguments probably mean that the levels aren't found in this dataset."));#
	newFactor <- with(reads,reorder(as.factor(level),reads[,ncol(reads)])); # last arg was newOrder;#
	reads[,levelIndex] <- newFactor;#
#
	return(reads);#
}#
#
corpus <- read.table("rdp_download_5172seqs.tsv",as.is=T,sep="\t",header=T);#
corpus <- corpus[,-3]; # don't need the sequence here!#
qcmin <- read.table("qc.min",header=F,as.is=T,sep="\t");#
														#qc99 <- read.table("qc.99",header=F,as.is=T,sep="\t");#
														#qc97 <- read.table("qc.97",header=F,as.is=T,sep="\t");#
														#qc95 <- read.table("qc.95",header=F,as.is=T,sep="\t");#
#
qcmin <- qcmin[,c(1,4,5,7,8,9,10,11,12,13)];#
														#qc99 <- qc99[,c(1,4,5,7,8,9,10,11,12,13)];#
														#qc97 <- qc97[,c(1,4,5,7,8,9,10,11,12,13)];#
#
colnames(qcmin) <- c('id','level','taxon','score','topscore','% ident','cov','full','votesfor','votestotal');#
														#type <- append(rep("min",nrow(qcmin)),append(rep("99",nrow(qc99)),rep("97",nrow(qc97))));#
														#results <- cbind(rbind(qcmin,qc99,qc97),type);#
#
results <- merge(corpus,qcmin,by="id");#
mismatches <- character(nrow(results));#
indices <- c();#
#
for( i in 1:nrow(results )){#
#
	if( results[i,"Taxa"] != results[i,"taxon"] ){#
		indices <- append(indices,i);#
		mismatches[i] <- "Incongruent";#
#
	} else {#
		mismatches[i] <- "Congruent";#
	}#
}#
#
#results <- cbind(results,mismatches);#
results <- orderFactors( as.data.frame(results));#
errors <- results[indices,];#
errors <- orderFactors(errors);#
#
print(paste("there are: ",nrow(errors)," incongruencies."));#
filtered <- which(!is.na(pmatch(errors[,"taxon"],"Filtered",dup=T)));#
uncertain <- which(!is.na(pmatch(errors[,"taxon"],"Uncertain",dup=T)));#
#
print(paste("there are:",nrow(errors)," errors to review."));#
print(paste("there are: ",length(filtered)," filtered reads and", length(uncertain),"uncertain reads"));#
print(paste("without review: ", (1-nrow(errors)/nrow(results)),"% of the assignments agree with RDP-II."));#
#
myBarPlot <- barplot(table(errors$level)/nrow(errors),col="cornflowerblue");#
#labels <- toupper(names(table(errors$level)));#
#mtext(labels,at=colMeans(myBarPlot),side=1,line=1,cex=0.75);#
title("Resolution of Errors");#
#
print("recall that 35 of the 41 Uncertain reads are picked up (false negatives) when we permit null genera from the taxonomy database.");#
print("review the filtered reads.");#
print("of the remaining reads::::");
table(results$level)
orderFactors <- function(reads){#
#
	levelIndex <- pmatch("level",colnames(reads));#
	taxonIndex <- pmatch("taxon",colnames(reads));#
#
	reads[which(reads[,taxonIndex]=="Uncertain"),levelIndex] <- "Uncertain";#
	reads[which(reads[,taxonIndex]=="Filtered"),levelIndex] <- "Filtered";#
#
	newOrder <- numeric(nrow(reads));#
	reads<- cbind(reads,newOrder);#
	reads[which(reads[,levelIndex]=="Uncertain"),ncol(reads)] <- 1;#
	reads[which(reads[,levelIndex]=="Filtered"),ncol(reads)] <- 2;#
	#
	reads[which(reads[,levelIndex]=="SUPERKINGDOM"),ncol(reads)] <- 3;#
	reads[which(reads[,levelIndex]=="KINGDOM"),ncol(reads)] <- 4;#
	reads[which(reads[,levelIndex]=="PHYLUM"),ncol(reads)] <- 5;#
	reads[which(reads[,levelIndex]=="CLASS"),ncol(reads)] <- 6;#
	reads[which(reads[,levelIndex]=="ORDER"),ncol(reads)] <- 7;#
	reads[which(reads[,levelIndex]=="FAMILY"),ncol(reads)] <- 8;#
	reads[which(reads[,levelIndex]=="GENUS"),ncol(reads)] <- 9;#
	reads[which(reads[,levelIndex]=="SPECIES"),ncol(reads)] <- 10;#
#
	print(paste("no non-missing arguments probably mean that the levels aren't found in this dataset."));#
	newFactor <- with(reads,reorder(as.factor(level),reads[,ncol(reads)])); # last arg was newOrder;#
	reads[,levelIndex] <- newFactor;#
#
	return(reads);#
}#
#
corpus <- read.table("rdp_download_5172seqs.tsv",as.is=T,sep="\t",header=T);#
corpus <- corpus[,-3]; # don't need the sequence here!#
qcmin <- read.table("qc.min",header=F,as.is=T,sep="\t");#
														#qc99 <- read.table("qc.99",header=F,as.is=T,sep="\t");#
														#qc97 <- read.table("qc.97",header=F,as.is=T,sep="\t");#
														#qc95 <- read.table("qc.95",header=F,as.is=T,sep="\t");#
#
qcmin <- qcmin[,c(1,4,5,7,8,9,10,11,12,13)];#
														#qc99 <- qc99[,c(1,4,5,7,8,9,10,11,12,13)];#
														#qc97 <- qc97[,c(1,4,5,7,8,9,10,11,12,13)];#
#
colnames(qcmin) <- c('id','level','taxon','score','topscore','% ident','cov','full','votesfor','votestotal');#
														#type <- append(rep("min",nrow(qcmin)),append(rep("99",nrow(qc99)),rep("97",nrow(qc97))));#
														#results <- cbind(rbind(qcmin,qc99,qc97),type);#
#
results <- merge(corpus,qcmin,by="id");#
mismatches <- character(nrow(results));#
indices <- c();#
#
for( i in 1:nrow(results )){#
#
	if( results[i,"Taxa"] != results[i,"taxon"] ){#
		indices <- append(indices,i);#
		mismatches[i] <- "Incongruent";#
#
	} else {#
		mismatches[i] <- "Congruent";#
	}#
}#
#
#results <- cbind(results,mismatches);#
results <- orderFactors( as.data.frame(results));#
errors <- results[indices,];#
errors <- orderFactors(errors);#
#
print(paste("there are: ",nrow(errors)," incongruencies."));#
filtered <- which(!is.na(pmatch(errors[,"taxon"],"Filtered",dup=T)));#
uncertain <- which(!is.na(pmatch(errors[,"taxon"],"Uncertain",dup=T)));#
#
print(paste("there are:",nrow(errors)," errors to review."));#
print(paste("there are: ",length(filtered)," filtered reads and", length(uncertain),"uncertain reads"));#
print(paste("without review: ", (1-nrow(errors)/nrow(results)),"% of the assignments agree with RDP-II."));#
#
myBarPlot <- barplot(table(errors$level)/nrow(errors),col="cornflowerblue");#
#labels <- toupper(names(table(errors$level)));#
#mtext(labels,at=colMeans(myBarPlot),side=1,line=1,cex=0.75);#
title("Resolution of Errors");#
#
print("recall that 35 of the 41 Uncertain reads are picked up (false negatives) when we permit null genera from the taxonomy database.");#
print("review the filtered reads.");#
print("of the remaining reads::::");#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
brokenBar2 <- function(dataset){#
	plot(seq(from = 0, to = 2, by = 0.5), # X#
		seq(from = 0, to = 4, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along x-axis#
	text("l", x = 1.20, y = 0, srt = -45, font = 2)#
	text("l", x = 1.25, y = 0, srt = -45, font = 2)#
	lines(x = c(0, 1.19), y = c(0,0), lwd = 2)#
	lines(x = c(1.25, 4.0), y = c(0,0), lwd = 2)#
#
# Add break lines along y-axis#
	text("l", y = 1.15, x = 0, srt = -45, font = 2)#
	text("l", y = 1.25, x = 0, srt = -45, font = 2)#
	lines(y = c(0, 1.15), x = c(0,0), lwd = 2)#
	lines(y = c(1.27, 4), x = c(0,0), lwd = 2)#
#
# Add x-axis (tick marks and labels)#
	mtext("l", side = 1, line = -1.25, at = seq(0, 2, 0.5), font = 2)#
	axis(side = 1, at = seq(0, 2, 0.5), line = -1, tick = FALSE,labels = c("0.0", "0.5", "1.0", "5.5", "6.0"))#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.20, at = seq(0, 4, 0.5), font = 2)#
	axis(side = 2, at = seq(0, 4, 0.5), line = -1, tick = FALSE,#
	labels = as.character(c(seq(from = 0, to = 4, by = 2),#
	seq(from = 100, to = 200, by = 20))))#
}#
#
brokenBarplot <- function(dataset){#
	plot(seq(from = 0, to = 5, by = 1), # X#
		seq(from = 0, to = 5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.08, x = 0, srt = 45, font = 2)#
	text("l", y = 2.28, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.08), x = c(0,0), lwd = 2)#
	lines(y = c(2.28, 5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
mtext("l", side = 2, line = -1.20, at = as.numeric(c(seq(0, 2,0.25),seq(2.5,5,.25))), font = 2)#
	axis(side = 2, at = seq(0, 5, 0.25), line = -1, tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
									seq(from = 4625, to = 4900, by = 25))))#
#
#
}#
#
#
broken <- function(dataset){#
	plot(seq(from = 0, to = 3.5, by = 1), # X#
		seq(from = 0, to = 3.5, by = 1), # Y --- *** X and Y must have the same length ***#
		axes=FALSE, # set up but don't plot the axes #
		type="n", xlab="X", ylab="Y");#
#
# Add break lines along y-axis#
	text("l", y = 2.02, x = 0, srt = 45, font = 2)#
	text("l", y = 2.17, x = 0, srt = 45, font = 2)#
	lines(y = c(0, 2.02), x = c(0,0), lwd = 2)#
	lines(y = c(2.17, 3.5), x = c(0,0), lwd = 2)#
#
# Add y-axis (tick marks and labels)#
	mtext("l", side = 2, line = -1.3, at = as.numeric(c(seq(0, 2,0.25),seq(2.25,3.5,.25))), font = 10,cex.lab=0.4)#
	axis(side = 2, at = as.character(c(seq(0, 2, 0.25),seq(2.25,3.5,.25))), line=-1,tick = FALSE,#
			labels = as.character(c(seq(from = 0, to = 200, by = 25),#
			seq(from = 4750, to = 4875, by = 25))))#
}
table(results$level)
